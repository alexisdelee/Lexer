Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE

Grammar

Rule 0     S' -> scope
Rule 1     scope -> block
Rule 2     block -> block statement
Rule 3     block -> statement
Rule 4     statement -> IF LPAREN comparison RPAREN THEN block END
Rule 5     statement -> IF LPAREN comparison RPAREN THEN block ELSE block END
Rule 6     statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
Rule 7     statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
Rule 8     statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
Rule 9     statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
Rule 10    statement -> WHILE LPAREN comparison RPAREN NEXT block END
Rule 11    statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 12    statement -> VARIABLE EQUALS expression SEMICOLON
Rule 13    statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON
Rule 14    statement -> VAR VARIABLE EQUALS expression SEMICOLON
Rule 15    statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON
Rule 16    statement -> DEF VARIABLE LPAREN RPAREN DO block END
Rule 17    statement -> VARIABLE LPAREN RPAREN SEMICOLON
Rule 18    arguments -> argument SEPARATOR argument
Rule 19    arguments -> argument
Rule 20    argument -> VARIABLE EQUALS expression
Rule 21    argument -> VARIABLE
Rule 22    statement -> expression SEMICOLON
Rule 23    comparison -> expression INFERIOR expression
Rule 24    comparison -> expression INFERIOR_OR_EQUAL expression
Rule 25    comparison -> expression SUPERIOR expression
Rule 26    comparison -> expression SUPERIOR_OR_EQUAL expression
Rule 27    comparison -> expression DOUBLE_EQUALS expression
Rule 28    comparison -> expression DIFFERENT expression
Rule 29    expression -> expression PLUS expression
Rule 30    expression -> expression MINUS expression
Rule 31    expression -> expression TIMES expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> expression EXPONENT expression
Rule 34    expression -> expression REMAINDER expression
Rule 35    expression -> expression INFERIOR expression
Rule 36    expression -> expression INFERIOR_OR_EQUAL expression
Rule 37    expression -> expression SUPERIOR expression
Rule 38    expression -> expression SUPERIOR_OR_EQUAL expression
Rule 39    expression -> expression DOUBLE_EQUALS expression
Rule 40    expression -> expression DIFFERENT expression
Rule 41    expression -> MINUS expression
Rule 42    expression -> LPAREN expression RPAREN
Rule 43    expression -> VARIABLE LSQUARE expression RSQUARE
Rule 44    expression -> NUMBER
Rule 45    expression -> STRING
Rule 46    expression -> VARIABLE

Terminals, with rules where they appear

ADDRESS              : 13
DEF                  : 16
DIFFERENT            : 28 40
DIVIDE               : 32
DO                   : 16
DOUBLE_EQUALS        : 27 39
ELSE                 : 5
END                  : 4 5 6 7 8 9 10 16
EQUALS               : 12 13 14 15 20
EXPONENT             : 33
FOR                  : 6 7 8 9
IF                   : 4 5
INFERIOR             : 23 35
INFERIOR_OR_EQUAL    : 24 36
LPAREN               : 4 5 6 7 8 9 10 11 16 17 42
LSQUARE              : 43
MINUS                : 30 41
NEXT                 : 6 7 8 9 10
NUMBER               : 6 6 7 8 44
PLUS                 : 29
PRINT                : 11
PTR                  : 15
QUOTE                : 
REMAINDER            : 34
RPAREN               : 4 5 6 7 8 9 10 11 16 17 42
RSQUARE              : 43
SEMICOLON            : 11 12 13 14 15 17 22
SEPARATOR            : 18
STRING               : 45
SUPERIOR             : 25 37
SUPERIOR_OR_EQUAL    : 26 38
THEN                 : 4 5
TIMES                : 31
TO                   : 6 7 8 9
VAR                  : 14
VARIABLE             : 7 8 9 9 12 13 14 15 15 16 17 20 21 43 46
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

argument             : 18 18 19
arguments            : 
block                : 1 2 4 5 5 6 7 8 9 10 16
comparison           : 4 5 10
expression           : 11 12 13 14 20 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 42 43
scope                : 0
statement            : 2 3

Parsing method: LALR

state 0

    (0) S' -> . scope
    (1) scope -> . block
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    scope                          shift and go to state 1
    block                          shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 1

    (0) S' -> scope .



state 2

    (1) scope -> block .
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    $end            reduce using rule 1 (scope -> block .)
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 3

    (3) block -> statement .

    IF              reduce using rule 3 (block -> statement .)
    FOR             reduce using rule 3 (block -> statement .)
    WHILE           reduce using rule 3 (block -> statement .)
    PRINT           reduce using rule 3 (block -> statement .)
    VARIABLE        reduce using rule 3 (block -> statement .)
    ADDRESS         reduce using rule 3 (block -> statement .)
    VAR             reduce using rule 3 (block -> statement .)
    PTR             reduce using rule 3 (block -> statement .)
    DEF             reduce using rule 3 (block -> statement .)
    MINUS           reduce using rule 3 (block -> statement .)
    LPAREN          reduce using rule 3 (block -> statement .)
    NUMBER          reduce using rule 3 (block -> statement .)
    STRING          reduce using rule 3 (block -> statement .)
    $end            reduce using rule 3 (block -> statement .)
    END             reduce using rule 3 (block -> statement .)
    ELSE            reduce using rule 3 (block -> statement .)


state 4

    (4) statement -> IF . LPAREN comparison RPAREN THEN block END
    (5) statement -> IF . LPAREN comparison RPAREN THEN block ELSE block END

    LPAREN          shift and go to state 19


state 5

    (42) expression -> LPAREN . expression RPAREN
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 20

state 6

    (6) statement -> FOR . LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> FOR . LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> FOR . LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> FOR . LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END

    LPAREN          shift and go to state 22


state 7

    (44) expression -> NUMBER .

    SEMICOLON       reduce using rule 44 (expression -> NUMBER .)
    PLUS            reduce using rule 44 (expression -> NUMBER .)
    MINUS           reduce using rule 44 (expression -> NUMBER .)
    TIMES           reduce using rule 44 (expression -> NUMBER .)
    DIVIDE          reduce using rule 44 (expression -> NUMBER .)
    EXPONENT        reduce using rule 44 (expression -> NUMBER .)
    REMAINDER       reduce using rule 44 (expression -> NUMBER .)
    INFERIOR        reduce using rule 44 (expression -> NUMBER .)
    INFERIOR_OR_EQUAL reduce using rule 44 (expression -> NUMBER .)
    SUPERIOR        reduce using rule 44 (expression -> NUMBER .)
    SUPERIOR_OR_EQUAL reduce using rule 44 (expression -> NUMBER .)
    DOUBLE_EQUALS   reduce using rule 44 (expression -> NUMBER .)
    DIFFERENT       reduce using rule 44 (expression -> NUMBER .)
    RPAREN          reduce using rule 44 (expression -> NUMBER .)
    RSQUARE         reduce using rule 44 (expression -> NUMBER .)


state 8

    (12) statement -> VARIABLE . EQUALS expression SEMICOLON
    (17) statement -> VARIABLE . LPAREN RPAREN SEMICOLON
    (43) expression -> VARIABLE . LSQUARE expression RSQUARE
    (46) expression -> VARIABLE .

    EQUALS          shift and go to state 23
    LPAREN          shift and go to state 24
    LSQUARE         shift and go to state 25
    SEMICOLON       reduce using rule 46 (expression -> VARIABLE .)
    PLUS            reduce using rule 46 (expression -> VARIABLE .)
    MINUS           reduce using rule 46 (expression -> VARIABLE .)
    TIMES           reduce using rule 46 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 46 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 46 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 46 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 46 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 46 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 46 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 46 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 46 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 46 (expression -> VARIABLE .)


state 9

    (10) statement -> WHILE . LPAREN comparison RPAREN NEXT block END

    LPAREN          shift and go to state 26


state 10

    (11) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 27


state 11

    (22) statement -> expression . SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 28
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 12

    (13) statement -> ADDRESS . VARIABLE EQUALS expression SEMICOLON

    VARIABLE        shift and go to state 41


state 13

    (14) statement -> VAR . VARIABLE EQUALS expression SEMICOLON

    VARIABLE        shift and go to state 42


state 14

    (15) statement -> PTR . VARIABLE EQUALS VARIABLE SEMICOLON

    VARIABLE        shift and go to state 43


state 15

    (16) statement -> DEF . VARIABLE LPAREN RPAREN DO block END

    VARIABLE        shift and go to state 44


state 16

    (41) expression -> MINUS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 45

state 17

    (45) expression -> STRING .

    SEMICOLON       reduce using rule 45 (expression -> STRING .)
    PLUS            reduce using rule 45 (expression -> STRING .)
    MINUS           reduce using rule 45 (expression -> STRING .)
    TIMES           reduce using rule 45 (expression -> STRING .)
    DIVIDE          reduce using rule 45 (expression -> STRING .)
    EXPONENT        reduce using rule 45 (expression -> STRING .)
    REMAINDER       reduce using rule 45 (expression -> STRING .)
    INFERIOR        reduce using rule 45 (expression -> STRING .)
    INFERIOR_OR_EQUAL reduce using rule 45 (expression -> STRING .)
    SUPERIOR        reduce using rule 45 (expression -> STRING .)
    SUPERIOR_OR_EQUAL reduce using rule 45 (expression -> STRING .)
    DOUBLE_EQUALS   reduce using rule 45 (expression -> STRING .)
    DIFFERENT       reduce using rule 45 (expression -> STRING .)
    RPAREN          reduce using rule 45 (expression -> STRING .)
    RSQUARE         reduce using rule 45 (expression -> STRING .)


state 18

    (2) block -> block statement .

    IF              reduce using rule 2 (block -> block statement .)
    FOR             reduce using rule 2 (block -> block statement .)
    WHILE           reduce using rule 2 (block -> block statement .)
    PRINT           reduce using rule 2 (block -> block statement .)
    VARIABLE        reduce using rule 2 (block -> block statement .)
    ADDRESS         reduce using rule 2 (block -> block statement .)
    VAR             reduce using rule 2 (block -> block statement .)
    PTR             reduce using rule 2 (block -> block statement .)
    DEF             reduce using rule 2 (block -> block statement .)
    MINUS           reduce using rule 2 (block -> block statement .)
    LPAREN          reduce using rule 2 (block -> block statement .)
    NUMBER          reduce using rule 2 (block -> block statement .)
    STRING          reduce using rule 2 (block -> block statement .)
    $end            reduce using rule 2 (block -> block statement .)
    END             reduce using rule 2 (block -> block statement .)
    ELSE            reduce using rule 2 (block -> block statement .)


state 19

    (4) statement -> IF LPAREN . comparison RPAREN THEN block END
    (5) statement -> IF LPAREN . comparison RPAREN THEN block ELSE block END
    (23) comparison -> . expression INFERIOR expression
    (24) comparison -> . expression INFERIOR_OR_EQUAL expression
    (25) comparison -> . expression SUPERIOR expression
    (26) comparison -> . expression SUPERIOR_OR_EQUAL expression
    (27) comparison -> . expression DOUBLE_EQUALS expression
    (28) comparison -> . expression DIFFERENT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    comparison                     shift and go to state 46
    expression                     shift and go to state 47

state 20

    (42) expression -> LPAREN expression . RPAREN
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 21

    (43) expression -> VARIABLE . LSQUARE expression RSQUARE
    (46) expression -> VARIABLE .

    LSQUARE         shift and go to state 25
    RPAREN          reduce using rule 46 (expression -> VARIABLE .)
    PLUS            reduce using rule 46 (expression -> VARIABLE .)
    MINUS           reduce using rule 46 (expression -> VARIABLE .)
    TIMES           reduce using rule 46 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 46 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 46 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 46 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 46 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 46 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 46 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 46 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 46 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 46 (expression -> VARIABLE .)
    SEMICOLON       reduce using rule 46 (expression -> VARIABLE .)
    RSQUARE         reduce using rule 46 (expression -> VARIABLE .)


state 22

    (6) statement -> FOR LPAREN . NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> FOR LPAREN . NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> FOR LPAREN . VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> FOR LPAREN . VARIABLE TO VARIABLE RPAREN NEXT block END

    NUMBER          shift and go to state 49
    VARIABLE        shift and go to state 50


state 23

    (12) statement -> VARIABLE EQUALS . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 51

state 24

    (17) statement -> VARIABLE LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 52


state 25

    (43) expression -> VARIABLE LSQUARE . expression RSQUARE
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 53

state 26

    (10) statement -> WHILE LPAREN . comparison RPAREN NEXT block END
    (23) comparison -> . expression INFERIOR expression
    (24) comparison -> . expression INFERIOR_OR_EQUAL expression
    (25) comparison -> . expression SUPERIOR expression
    (26) comparison -> . expression SUPERIOR_OR_EQUAL expression
    (27) comparison -> . expression DOUBLE_EQUALS expression
    (28) comparison -> . expression DIFFERENT expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    comparison                     shift and go to state 54
    expression                     shift and go to state 47

state 27

    (11) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 55

state 28

    (22) statement -> expression SEMICOLON .

    IF              reduce using rule 22 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 22 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 22 (statement -> expression SEMICOLON .)
    VARIABLE        reduce using rule 22 (statement -> expression SEMICOLON .)
    ADDRESS         reduce using rule 22 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 22 (statement -> expression SEMICOLON .)
    PTR             reduce using rule 22 (statement -> expression SEMICOLON .)
    DEF             reduce using rule 22 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 22 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 22 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 22 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 22 (statement -> expression SEMICOLON .)
    $end            reduce using rule 22 (statement -> expression SEMICOLON .)
    END             reduce using rule 22 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 22 (statement -> expression SEMICOLON .)


state 29

    (29) expression -> expression PLUS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 56

state 30

    (30) expression -> expression MINUS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 57

state 31

    (31) expression -> expression TIMES . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 58

state 32

    (32) expression -> expression DIVIDE . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 59

state 33

    (33) expression -> expression EXPONENT . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 60

state 34

    (34) expression -> expression REMAINDER . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 61

state 35

    (35) expression -> expression INFERIOR . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 62

state 36

    (36) expression -> expression INFERIOR_OR_EQUAL . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 63

state 37

    (37) expression -> expression SUPERIOR . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 64

state 38

    (38) expression -> expression SUPERIOR_OR_EQUAL . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 65

state 39

    (39) expression -> expression DOUBLE_EQUALS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 66

state 40

    (40) expression -> expression DIFFERENT . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 67

state 41

    (13) statement -> ADDRESS VARIABLE . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 68


state 42

    (14) statement -> VAR VARIABLE . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 69


state 43

    (15) statement -> PTR VARIABLE . EQUALS VARIABLE SEMICOLON

    EQUALS          shift and go to state 70


state 44

    (16) statement -> DEF VARIABLE . LPAREN RPAREN DO block END

    LPAREN          shift and go to state 71


state 45

    (41) expression -> MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 41 (expression -> MINUS expression .)
    PLUS            reduce using rule 41 (expression -> MINUS expression .)
    MINUS           reduce using rule 41 (expression -> MINUS expression .)
    TIMES           reduce using rule 41 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 41 (expression -> MINUS expression .)
    REMAINDER       reduce using rule 41 (expression -> MINUS expression .)
    INFERIOR        reduce using rule 41 (expression -> MINUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 41 (expression -> MINUS expression .)
    SUPERIOR        reduce using rule 41 (expression -> MINUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 41 (expression -> MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 41 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 41 (expression -> MINUS expression .)
    RPAREN          reduce using rule 41 (expression -> MINUS expression .)
    RSQUARE         reduce using rule 41 (expression -> MINUS expression .)
    EXPONENT        shift and go to state 33

  ! EXPONENT        [ reduce using rule 41 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! REMAINDER       [ shift and go to state 34 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 46

    (4) statement -> IF LPAREN comparison . RPAREN THEN block END
    (5) statement -> IF LPAREN comparison . RPAREN THEN block ELSE block END

    RPAREN          shift and go to state 72


state 47

    (23) comparison -> expression . INFERIOR expression
    (24) comparison -> expression . INFERIOR_OR_EQUAL expression
    (25) comparison -> expression . SUPERIOR expression
    (26) comparison -> expression . SUPERIOR_OR_EQUAL expression
    (27) comparison -> expression . DOUBLE_EQUALS expression
    (28) comparison -> expression . DIFFERENT expression
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    INFERIOR        shift and go to state 73
    INFERIOR_OR_EQUAL shift and go to state 74
    SUPERIOR        shift and go to state 75
    SUPERIOR_OR_EQUAL shift and go to state 76
    DOUBLE_EQUALS   shift and go to state 77
    DIFFERENT       shift and go to state 78
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34


state 48

    (42) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    REMAINDER       reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    INFERIOR        reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    INFERIOR_OR_EQUAL reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    SUPERIOR        reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    SUPERIOR_OR_EQUAL reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    DOUBLE_EQUALS   reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 42 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 42 (expression -> LPAREN expression RPAREN .)


state 49

    (6) statement -> FOR LPAREN NUMBER . TO NUMBER RPAREN NEXT block END
    (7) statement -> FOR LPAREN NUMBER . TO VARIABLE RPAREN NEXT block END

    TO              shift and go to state 79


state 50

    (8) statement -> FOR LPAREN VARIABLE . TO NUMBER RPAREN NEXT block END
    (9) statement -> FOR LPAREN VARIABLE . TO VARIABLE RPAREN NEXT block END

    TO              shift and go to state 80


state 51

    (12) statement -> VARIABLE EQUALS expression . SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 81
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 52

    (17) statement -> VARIABLE LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 82


state 53

    (43) expression -> VARIABLE LSQUARE expression . RSQUARE
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 83
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 54

    (10) statement -> WHILE LPAREN comparison . RPAREN NEXT block END

    RPAREN          shift and go to state 84


state 55

    (11) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 85
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 56

    (29) expression -> expression PLUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 29 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 29 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 29 (expression -> expression PLUS expression .)
    INFERIOR        reduce using rule 29 (expression -> expression PLUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 29 (expression -> expression PLUS expression .)
    SUPERIOR        reduce using rule 29 (expression -> expression PLUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 29 (expression -> expression PLUS expression .)
    DOUBLE_EQUALS   reduce using rule 29 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 29 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 29 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34

  ! TIMES           [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! REMAINDER       [ reduce using rule 29 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 57

    (30) expression -> expression MINUS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 30 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 30 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 30 (expression -> expression MINUS expression .)
    INFERIOR        reduce using rule 30 (expression -> expression MINUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 30 (expression -> expression MINUS expression .)
    SUPERIOR        reduce using rule 30 (expression -> expression MINUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 30 (expression -> expression MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 30 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 30 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 30 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34

  ! TIMES           [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! REMAINDER       [ reduce using rule 30 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 58

    (31) expression -> expression TIMES expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 31 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 31 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 31 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 31 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 31 (expression -> expression TIMES expression .)
    REMAINDER       reduce using rule 31 (expression -> expression TIMES expression .)
    INFERIOR        reduce using rule 31 (expression -> expression TIMES expression .)
    INFERIOR_OR_EQUAL reduce using rule 31 (expression -> expression TIMES expression .)
    SUPERIOR        reduce using rule 31 (expression -> expression TIMES expression .)
    SUPERIOR_OR_EQUAL reduce using rule 31 (expression -> expression TIMES expression .)
    DOUBLE_EQUALS   reduce using rule 31 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 31 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 31 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 31 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 33

  ! EXPONENT        [ reduce using rule 31 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! REMAINDER       [ shift and go to state 34 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 59

    (32) expression -> expression DIVIDE expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 32 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 32 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 32 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    REMAINDER       reduce using rule 32 (expression -> expression DIVIDE expression .)
    INFERIOR        reduce using rule 32 (expression -> expression DIVIDE expression .)
    INFERIOR_OR_EQUAL reduce using rule 32 (expression -> expression DIVIDE expression .)
    SUPERIOR        reduce using rule 32 (expression -> expression DIVIDE expression .)
    SUPERIOR_OR_EQUAL reduce using rule 32 (expression -> expression DIVIDE expression .)
    DOUBLE_EQUALS   reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 32 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 32 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 33

  ! EXPONENT        [ reduce using rule 32 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! REMAINDER       [ shift and go to state 34 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 60

    (33) expression -> expression EXPONENT expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 33 (expression -> expression EXPONENT expression .)
    PLUS            reduce using rule 33 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 33 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 33 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 33 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 33 (expression -> expression EXPONENT expression .)
    REMAINDER       reduce using rule 33 (expression -> expression EXPONENT expression .)
    INFERIOR        reduce using rule 33 (expression -> expression EXPONENT expression .)
    INFERIOR_OR_EQUAL reduce using rule 33 (expression -> expression EXPONENT expression .)
    SUPERIOR        reduce using rule 33 (expression -> expression EXPONENT expression .)
    SUPERIOR_OR_EQUAL reduce using rule 33 (expression -> expression EXPONENT expression .)
    DOUBLE_EQUALS   reduce using rule 33 (expression -> expression EXPONENT expression .)
    DIFFERENT       reduce using rule 33 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 33 (expression -> expression EXPONENT expression .)
    RSQUARE         reduce using rule 33 (expression -> expression EXPONENT expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! EXPONENT        [ shift and go to state 33 ]
  ! REMAINDER       [ shift and go to state 34 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 61

    (34) expression -> expression REMAINDER expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 34 (expression -> expression REMAINDER expression .)
    PLUS            reduce using rule 34 (expression -> expression REMAINDER expression .)
    MINUS           reduce using rule 34 (expression -> expression REMAINDER expression .)
    TIMES           reduce using rule 34 (expression -> expression REMAINDER expression .)
    DIVIDE          reduce using rule 34 (expression -> expression REMAINDER expression .)
    REMAINDER       reduce using rule 34 (expression -> expression REMAINDER expression .)
    INFERIOR        reduce using rule 34 (expression -> expression REMAINDER expression .)
    INFERIOR_OR_EQUAL reduce using rule 34 (expression -> expression REMAINDER expression .)
    SUPERIOR        reduce using rule 34 (expression -> expression REMAINDER expression .)
    SUPERIOR_OR_EQUAL reduce using rule 34 (expression -> expression REMAINDER expression .)
    DOUBLE_EQUALS   reduce using rule 34 (expression -> expression REMAINDER expression .)
    DIFFERENT       reduce using rule 34 (expression -> expression REMAINDER expression .)
    RPAREN          reduce using rule 34 (expression -> expression REMAINDER expression .)
    RSQUARE         reduce using rule 34 (expression -> expression REMAINDER expression .)
    EXPONENT        shift and go to state 33

  ! EXPONENT        [ reduce using rule 34 (expression -> expression REMAINDER expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! REMAINDER       [ shift and go to state 34 ]
  ! INFERIOR        [ shift and go to state 35 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 36 ]
  ! SUPERIOR        [ shift and go to state 37 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 38 ]
  ! DOUBLE_EQUALS   [ shift and go to state 39 ]
  ! DIFFERENT       [ shift and go to state 40 ]


state 62

    (35) expression -> expression INFERIOR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 35 (expression -> expression INFERIOR expression .)
    RPAREN          reduce using rule 35 (expression -> expression INFERIOR expression .)
    RSQUARE         reduce using rule 35 (expression -> expression INFERIOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! PLUS            [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR        [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]


state 63

    (36) expression -> expression INFERIOR_OR_EQUAL expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .)
    RSQUARE         reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! PLUS            [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR        [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]


state 64

    (37) expression -> expression SUPERIOR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 37 (expression -> expression SUPERIOR expression .)
    RPAREN          reduce using rule 37 (expression -> expression SUPERIOR expression .)
    RSQUARE         reduce using rule 37 (expression -> expression SUPERIOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! PLUS            [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]


state 65

    (38) expression -> expression SUPERIOR_OR_EQUAL expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    RPAREN          reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    RSQUARE         reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! PLUS            [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR        [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]


state 66

    (39) expression -> expression DOUBLE_EQUALS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .)
    RPAREN          reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .)
    RSQUARE         reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! PLUS            [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR        [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR        [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]


state 67

    (40) expression -> expression DIFFERENT expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 40 (expression -> expression DIFFERENT expression .)
    RPAREN          reduce using rule 40 (expression -> expression DIFFERENT expression .)
    RSQUARE         reduce using rule 40 (expression -> expression DIFFERENT expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! PLUS            [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! REMAINDER       [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR        [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR        [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]


state 68

    (13) statement -> ADDRESS VARIABLE EQUALS . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 86

state 69

    (14) statement -> VAR VARIABLE EQUALS . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 87

state 70

    (15) statement -> PTR VARIABLE EQUALS . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 88


state 71

    (16) statement -> DEF VARIABLE LPAREN . RPAREN DO block END

    RPAREN          shift and go to state 89


state 72

    (4) statement -> IF LPAREN comparison RPAREN . THEN block END
    (5) statement -> IF LPAREN comparison RPAREN . THEN block ELSE block END

    THEN            shift and go to state 90


state 73

    (23) comparison -> expression INFERIOR . expression
    (35) expression -> expression INFERIOR . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 91

state 74

    (24) comparison -> expression INFERIOR_OR_EQUAL . expression
    (36) expression -> expression INFERIOR_OR_EQUAL . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 92

state 75

    (25) comparison -> expression SUPERIOR . expression
    (37) expression -> expression SUPERIOR . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 93

state 76

    (26) comparison -> expression SUPERIOR_OR_EQUAL . expression
    (38) expression -> expression SUPERIOR_OR_EQUAL . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 94

state 77

    (27) comparison -> expression DOUBLE_EQUALS . expression
    (39) expression -> expression DOUBLE_EQUALS . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 95

state 78

    (28) comparison -> expression DIFFERENT . expression
    (40) expression -> expression DIFFERENT . expression
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    expression                     shift and go to state 96

state 79

    (6) statement -> FOR LPAREN NUMBER TO . NUMBER RPAREN NEXT block END
    (7) statement -> FOR LPAREN NUMBER TO . VARIABLE RPAREN NEXT block END

    NUMBER          shift and go to state 97
    VARIABLE        shift and go to state 98


state 80

    (8) statement -> FOR LPAREN VARIABLE TO . NUMBER RPAREN NEXT block END
    (9) statement -> FOR LPAREN VARIABLE TO . VARIABLE RPAREN NEXT block END

    NUMBER          shift and go to state 100
    VARIABLE        shift and go to state 99


state 81

    (12) statement -> VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 12 (statement -> VARIABLE EQUALS expression SEMICOLON .)


state 82

    (17) statement -> VARIABLE LPAREN RPAREN SEMICOLON .

    IF              reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    PTR             reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    NUMBER          reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 17 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)


state 83

    (43) expression -> VARIABLE LSQUARE expression RSQUARE .

    SEMICOLON       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TIMES           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    EXPONENT        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    REMAINDER       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIFFERENT       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    RPAREN          reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)


state 84

    (10) statement -> WHILE LPAREN comparison RPAREN . NEXT block END

    NEXT            shift and go to state 101


state 85

    (11) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 102


state 86

    (13) statement -> ADDRESS VARIABLE EQUALS expression . SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 103
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 87

    (14) statement -> VAR VARIABLE EQUALS expression . SEMICOLON
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 104
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40


state 88

    (15) statement -> PTR VARIABLE EQUALS VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 105


state 89

    (16) statement -> DEF VARIABLE LPAREN RPAREN . DO block END

    DO              shift and go to state 106


state 90

    (4) statement -> IF LPAREN comparison RPAREN THEN . block END
    (5) statement -> IF LPAREN comparison RPAREN THEN . block ELSE block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 107
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 91

    (23) comparison -> expression INFERIOR expression .
    (35) expression -> expression INFERIOR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 23 (comparison -> expression INFERIOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! INFERIOR        [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 35 (expression -> expression INFERIOR expression .) ]


state 92

    (24) comparison -> expression INFERIOR_OR_EQUAL expression .
    (36) expression -> expression INFERIOR_OR_EQUAL expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 24 (comparison -> expression INFERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! INFERIOR        [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 36 (expression -> expression INFERIOR_OR_EQUAL expression .) ]


state 93

    (25) comparison -> expression SUPERIOR expression .
    (37) expression -> expression SUPERIOR expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 25 (comparison -> expression SUPERIOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! INFERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 37 (expression -> expression SUPERIOR expression .) ]


state 94

    (26) comparison -> expression SUPERIOR_OR_EQUAL expression .
    (38) expression -> expression SUPERIOR_OR_EQUAL expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 26 (comparison -> expression SUPERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! INFERIOR        [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 38 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]


state 95

    (27) comparison -> expression DOUBLE_EQUALS expression .
    (39) expression -> expression DOUBLE_EQUALS expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 27 (comparison -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! INFERIOR        [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR        [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 39 (expression -> expression DOUBLE_EQUALS expression .) ]


state 96

    (28) comparison -> expression DIFFERENT expression .
    (40) expression -> expression DIFFERENT expression .
    (29) expression -> expression . PLUS expression
    (30) expression -> expression . MINUS expression
    (31) expression -> expression . TIMES expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . EXPONENT expression
    (34) expression -> expression . REMAINDER expression
    (35) expression -> expression . INFERIOR expression
    (36) expression -> expression . INFERIOR_OR_EQUAL expression
    (37) expression -> expression . SUPERIOR expression
    (38) expression -> expression . SUPERIOR_OR_EQUAL expression
    (39) expression -> expression . DOUBLE_EQUALS expression
    (40) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 28 (comparison -> expression DIFFERENT expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    EXPONENT        shift and go to state 33
    REMAINDER       shift and go to state 34
    INFERIOR        shift and go to state 35
    INFERIOR_OR_EQUAL shift and go to state 36
    SUPERIOR        shift and go to state 37
    SUPERIOR_OR_EQUAL shift and go to state 38
    DOUBLE_EQUALS   shift and go to state 39
    DIFFERENT       shift and go to state 40

  ! INFERIOR        [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR        [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]
  ! REMAINDER       [ reduce using rule 40 (expression -> expression DIFFERENT expression .) ]


state 97

    (6) statement -> FOR LPAREN NUMBER TO NUMBER . RPAREN NEXT block END

    RPAREN          shift and go to state 108


state 98

    (7) statement -> FOR LPAREN NUMBER TO VARIABLE . RPAREN NEXT block END

    RPAREN          shift and go to state 109


state 99

    (9) statement -> FOR LPAREN VARIABLE TO VARIABLE . RPAREN NEXT block END

    RPAREN          shift and go to state 110


state 100

    (8) statement -> FOR LPAREN VARIABLE TO NUMBER . RPAREN NEXT block END

    RPAREN          shift and go to state 111


state 101

    (10) statement -> WHILE LPAREN comparison RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 112
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 102

    (11) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    IF              reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PTR             reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DEF             reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 11 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 103

    (13) statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)


state 104

    (14) statement -> VAR VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)


state 105

    (15) statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .

    IF              reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    FOR             reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    PRINT           reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    ADDRESS         reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    VAR             reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    PTR             reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    DEF             reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    MINUS           reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    STRING          reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    $end            reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    END             reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    ELSE            reduce using rule 15 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)


state 106

    (16) statement -> DEF VARIABLE LPAREN RPAREN DO . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 113
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 107

    (4) statement -> IF LPAREN comparison RPAREN THEN block . END
    (5) statement -> IF LPAREN comparison RPAREN THEN block . ELSE block END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 114
    ELSE            shift and go to state 115
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 108

    (6) statement -> FOR LPAREN NUMBER TO NUMBER RPAREN . NEXT block END

    NEXT            shift and go to state 116


state 109

    (7) statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN . NEXT block END

    NEXT            shift and go to state 117


state 110

    (9) statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN . NEXT block END

    NEXT            shift and go to state 118


state 111

    (8) statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN . NEXT block END

    NEXT            shift and go to state 119


state 112

    (10) statement -> WHILE LPAREN comparison RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 120
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 113

    (16) statement -> DEF VARIABLE LPAREN RPAREN DO block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 121
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 114

    (4) statement -> IF LPAREN comparison RPAREN THEN block END .

    IF              reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    FOR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    VARIABLE        reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    ADDRESS         reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    VAR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    PTR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    DEF             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    MINUS           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    LPAREN          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    NUMBER          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    STRING          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    $end            reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    END             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    ELSE            reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)


state 115

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 122
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 116

    (6) statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 123
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 117

    (7) statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 124
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 118

    (9) statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 125
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 119

    (8) statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    block                          shift and go to state 126
    statement                      shift and go to state 3
    expression                     shift and go to state 11

state 120

    (10) statement -> WHILE LPAREN comparison RPAREN NEXT block END .

    IF              reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    FOR             reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    WHILE           reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    PRINT           reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    VARIABLE        reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    ADDRESS         reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    VAR             reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    PTR             reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    DEF             reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    MINUS           reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    LPAREN          reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    NUMBER          reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    STRING          reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    $end            reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    END             reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    ELSE            reduce using rule 10 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)


state 121

    (16) statement -> DEF VARIABLE LPAREN RPAREN DO block END .

    IF              reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    FOR             reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    WHILE           reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    PRINT           reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    VARIABLE        reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    ADDRESS         reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    VAR             reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    PTR             reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    DEF             reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    MINUS           reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    LPAREN          reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    NUMBER          reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    STRING          reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    $end            reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    END             reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    ELSE            reduce using rule 16 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)


state 122

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 127
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 123

    (6) statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 128
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 124

    (7) statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 129
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 125

    (9) statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 130
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 126

    (8) statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END
    (7) statement -> . FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END
    (8) statement -> . FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END
    (9) statement -> . FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END
    (10) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (11) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (12) statement -> . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (16) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (17) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (22) statement -> . expression SEMICOLON
    (29) expression -> . expression PLUS expression
    (30) expression -> . expression MINUS expression
    (31) expression -> . expression TIMES expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression EXPONENT expression
    (34) expression -> . expression REMAINDER expression
    (35) expression -> . expression INFERIOR expression
    (36) expression -> . expression INFERIOR_OR_EQUAL expression
    (37) expression -> . expression SUPERIOR expression
    (38) expression -> . expression SUPERIOR_OR_EQUAL expression
    (39) expression -> . expression DOUBLE_EQUALS expression
    (40) expression -> . expression DIFFERENT expression
    (41) expression -> . MINUS expression
    (42) expression -> . LPAREN expression RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . VARIABLE

    END             shift and go to state 131
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 9
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 8
    ADDRESS         shift and go to state 12
    VAR             shift and go to state 13
    PTR             shift and go to state 14
    DEF             shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    STRING          shift and go to state 17

    statement                      shift and go to state 18
    expression                     shift and go to state 11

state 127

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .

    IF              reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    FOR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    VARIABLE        reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    ADDRESS         reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    VAR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    PTR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    DEF             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    MINUS           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    STRING          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    $end            reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    END             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    ELSE            reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)


state 128

    (6) statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .

    IF              reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    FOR             reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    WHILE           reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    PRINT           reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    VARIABLE        reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    ADDRESS         reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    VAR             reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    PTR             reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    DEF             reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    MINUS           reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    LPAREN          reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    NUMBER          reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    STRING          reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    $end            reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    END             reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)
    ELSE            reduce using rule 6 (statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END .)


state 129

    (7) statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .

    IF              reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    FOR             reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    WHILE           reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    PRINT           reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    VARIABLE        reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    ADDRESS         reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    VAR             reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    PTR             reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    DEF             reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    MINUS           reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    LPAREN          reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    NUMBER          reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    STRING          reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    $end            reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    END             reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)
    ELSE            reduce using rule 7 (statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END .)


state 130

    (9) statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .

    IF              reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    VARIABLE        reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    ADDRESS         reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    VAR             reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    PTR             reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    DEF             reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    MINUS           reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    STRING          reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    $end            reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    END             reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)
    ELSE            reduce using rule 9 (statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END .)


state 131

    (8) statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .

    IF              reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    PRINT           reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    VARIABLE        reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    ADDRESS         reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    VAR             reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    PTR             reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    DEF             reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    MINUS           reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    LPAREN          reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    NUMBER          reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    STRING          reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    $end            reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    END             reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)
    ELSE            reduce using rule 8 (statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 62 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 62 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 62 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 62 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 63 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 63 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 63 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 63 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 64 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 64 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 64 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 64 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 65 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 65 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 65 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 65 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 66 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 66 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 66 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 66 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 67 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 67 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 67 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 67 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 91 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 91 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 91 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 91 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 91 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 92 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 92 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 92 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 92 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 92 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 92 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 93 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 93 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 93 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 93 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 94 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 94 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 94 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 94 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 95 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 95 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 95 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 95 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 96 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 96 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 96 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 96 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 96 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 96 resolved as shift
