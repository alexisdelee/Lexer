Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE

Grammar

Rule 0     S' -> scope
Rule 1     scope -> block
Rule 2     block -> block statement
Rule 3     block -> statement
Rule 4     statement -> IF LPAREN comparison RPAREN THEN block END
Rule 5     statement -> IF LPAREN comparison RPAREN THEN block ELSE block END
Rule 6     statement -> FOR LPAREN expression TO expression RPAREN NEXT block END
Rule 7     statement -> WHILE LPAREN comparison RPAREN NEXT block END
Rule 8     statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 9     statement -> VARIABLE EQUALS expression SEMICOLON
Rule 10    statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON
Rule 11    statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
Rule 12    statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
Rule 13    statement -> VAR VARIABLE EQUALS expression SEMICOLON
Rule 14    statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON
Rule 15    statement -> DEF VARIABLE LPAREN RPAREN DO block END
Rule 16    statement -> VARIABLE LPAREN RPAREN SEMICOLON
Rule 17    arguments -> argument SEPARATOR argument
Rule 18    arguments -> argument
Rule 19    argument -> VARIABLE EQUALS expression
Rule 20    argument -> VARIABLE
Rule 21    statement -> expression SEMICOLON
Rule 22    comparison -> expression INFERIOR expression
Rule 23    comparison -> expression INFERIOR_OR_EQUAL expression
Rule 24    comparison -> expression SUPERIOR expression
Rule 25    comparison -> expression SUPERIOR_OR_EQUAL expression
Rule 26    comparison -> expression DOUBLE_EQUALS expression
Rule 27    comparison -> expression DIFFERENT expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression TIMES expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> expression EXPONENT expression
Rule 33    expression -> expression REMAINDER expression
Rule 34    expression -> expression INFERIOR expression
Rule 35    expression -> expression INFERIOR_OR_EQUAL expression
Rule 36    expression -> expression SUPERIOR expression
Rule 37    expression -> expression SUPERIOR_OR_EQUAL expression
Rule 38    expression -> expression DOUBLE_EQUALS expression
Rule 39    expression -> expression DIFFERENT expression
Rule 40    expression -> MINUS expression
Rule 41    expression -> LPAREN expression RPAREN
Rule 42    expression -> TYPEOF LPAREN VARIABLE RPAREN
Rule 43    expression -> VARIABLE LSQUARE expression RSQUARE
Rule 44    expression -> VARIABLE LSQUARE expression COLON expression RSQUARE
Rule 45    expression -> VARIABLE LSQUARE COLON expression RSQUARE
Rule 46    expression -> VARIABLE LSQUARE expression COLON RSQUARE
Rule 47    expression -> VARIABLE LSQUARE COLON RSQUARE
Rule 48    expression -> NUMBER
Rule 49    expression -> STRING
Rule 50    expression -> VARIABLE

Terminals, with rules where they appear

ADDRESS              : 10 12
COLON                : 44 45 46 47
DEF                  : 15
DIFFERENT            : 27 39
DIVIDE               : 31
DO                   : 15
DOUBLE_EQUALS        : 26 38
ELSE                 : 5
END                  : 4 5 6 7 15
EQUALS               : 9 10 11 12 13 14 19
EXPONENT             : 32
FOR                  : 6
IF                   : 4 5
INFERIOR             : 22 34
INFERIOR_OR_EQUAL    : 23 35
LPAREN               : 4 5 6 7 8 15 16 41 42
LSQUARE              : 11 12 43 44 45 46 47
MINUS                : 29 40
NEXT                 : 6 7
NUMBER               : 48
PLUS                 : 28
PRINT                : 8
PTR                  : 14
QUOTE                : 
REMAINDER            : 33
RPAREN               : 4 5 6 7 8 15 16 41 42
RSQUARE              : 11 12 43 44 45 46 47
SEMICOLON            : 8 9 10 11 12 13 14 16 21
SEPARATOR            : 17
STRING               : 49
SUPERIOR             : 24 36
SUPERIOR_OR_EQUAL    : 25 37
THEN                 : 4 5
TIMES                : 30
TO                   : 6
TYPEOF               : 42
VAR                  : 13
VARIABLE             : 9 10 11 12 13 14 14 15 16 19 20 42 43 44 45 46 47 50
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

argument             : 17 17 18
arguments            : 
block                : 1 2 4 5 5 6 7 15
comparison           : 4 5 7
expression           : 6 6 8 9 10 11 11 12 12 13 19 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 41 43 44 44 45 46
scope                : 0
statement            : 2 3

Parsing method: LALR

state 0

    (0) S' -> . scope
    (1) scope -> . block
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    scope                          shift and go to state 1
    block                          shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 1

    (0) S' -> scope .



state 2

    (1) scope -> block .
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    $end            reduce using rule 1 (scope -> block .)
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    statement                      shift and go to state 19
    expression                     shift and go to state 7

state 3

    (3) block -> statement .

    IF              reduce using rule 3 (block -> statement .)
    FOR             reduce using rule 3 (block -> statement .)
    WHILE           reduce using rule 3 (block -> statement .)
    PRINT           reduce using rule 3 (block -> statement .)
    VARIABLE        reduce using rule 3 (block -> statement .)
    ADDRESS         reduce using rule 3 (block -> statement .)
    VAR             reduce using rule 3 (block -> statement .)
    PTR             reduce using rule 3 (block -> statement .)
    DEF             reduce using rule 3 (block -> statement .)
    MINUS           reduce using rule 3 (block -> statement .)
    LPAREN          reduce using rule 3 (block -> statement .)
    TYPEOF          reduce using rule 3 (block -> statement .)
    NUMBER          reduce using rule 3 (block -> statement .)
    STRING          reduce using rule 3 (block -> statement .)
    $end            reduce using rule 3 (block -> statement .)
    END             reduce using rule 3 (block -> statement .)
    ELSE            reduce using rule 3 (block -> statement .)


state 4

    (4) statement -> IF . LPAREN comparison RPAREN THEN block END
    (5) statement -> IF . LPAREN comparison RPAREN THEN block ELSE block END

    LPAREN          shift and go to state 20


state 5

    (41) expression -> LPAREN . expression RPAREN
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 21

state 6

    (6) statement -> FOR . LPAREN expression TO expression RPAREN NEXT block END

    LPAREN          shift and go to state 23


state 7

    (21) statement -> expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 24
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 8

    (7) statement -> WHILE . LPAREN comparison RPAREN NEXT block END

    LPAREN          shift and go to state 37


state 9

    (8) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 38


state 10

    (9) statement -> VARIABLE . EQUALS expression SEMICOLON
    (11) statement -> VARIABLE . LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (16) statement -> VARIABLE . LPAREN RPAREN SEMICOLON
    (43) expression -> VARIABLE . LSQUARE expression RSQUARE
    (44) expression -> VARIABLE . LSQUARE expression COLON expression RSQUARE
    (45) expression -> VARIABLE . LSQUARE COLON expression RSQUARE
    (46) expression -> VARIABLE . LSQUARE expression COLON RSQUARE
    (47) expression -> VARIABLE . LSQUARE COLON RSQUARE
    (50) expression -> VARIABLE .

    EQUALS          shift and go to state 39
    LSQUARE         shift and go to state 40
    LPAREN          shift and go to state 41
    SEMICOLON       reduce using rule 50 (expression -> VARIABLE .)
    PLUS            reduce using rule 50 (expression -> VARIABLE .)
    MINUS           reduce using rule 50 (expression -> VARIABLE .)
    TIMES           reduce using rule 50 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 50 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 50 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 50 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 50 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 50 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 50 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 50 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 50 (expression -> VARIABLE .)


state 11

    (10) statement -> ADDRESS . VARIABLE EQUALS expression SEMICOLON
    (12) statement -> ADDRESS . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON

    VARIABLE        shift and go to state 42


state 12

    (13) statement -> VAR . VARIABLE EQUALS expression SEMICOLON

    VARIABLE        shift and go to state 43


state 13

    (14) statement -> PTR . VARIABLE EQUALS VARIABLE SEMICOLON

    VARIABLE        shift and go to state 44


state 14

    (15) statement -> DEF . VARIABLE LPAREN RPAREN DO block END

    VARIABLE        shift and go to state 45


state 15

    (40) expression -> MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 46

state 16

    (42) expression -> TYPEOF . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 47


state 17

    (48) expression -> NUMBER .

    SEMICOLON       reduce using rule 48 (expression -> NUMBER .)
    PLUS            reduce using rule 48 (expression -> NUMBER .)
    MINUS           reduce using rule 48 (expression -> NUMBER .)
    TIMES           reduce using rule 48 (expression -> NUMBER .)
    DIVIDE          reduce using rule 48 (expression -> NUMBER .)
    EXPONENT        reduce using rule 48 (expression -> NUMBER .)
    REMAINDER       reduce using rule 48 (expression -> NUMBER .)
    INFERIOR        reduce using rule 48 (expression -> NUMBER .)
    INFERIOR_OR_EQUAL reduce using rule 48 (expression -> NUMBER .)
    SUPERIOR        reduce using rule 48 (expression -> NUMBER .)
    SUPERIOR_OR_EQUAL reduce using rule 48 (expression -> NUMBER .)
    DOUBLE_EQUALS   reduce using rule 48 (expression -> NUMBER .)
    DIFFERENT       reduce using rule 48 (expression -> NUMBER .)
    RPAREN          reduce using rule 48 (expression -> NUMBER .)
    TO              reduce using rule 48 (expression -> NUMBER .)
    RSQUARE         reduce using rule 48 (expression -> NUMBER .)
    COLON           reduce using rule 48 (expression -> NUMBER .)


state 18

    (49) expression -> STRING .

    SEMICOLON       reduce using rule 49 (expression -> STRING .)
    PLUS            reduce using rule 49 (expression -> STRING .)
    MINUS           reduce using rule 49 (expression -> STRING .)
    TIMES           reduce using rule 49 (expression -> STRING .)
    DIVIDE          reduce using rule 49 (expression -> STRING .)
    EXPONENT        reduce using rule 49 (expression -> STRING .)
    REMAINDER       reduce using rule 49 (expression -> STRING .)
    INFERIOR        reduce using rule 49 (expression -> STRING .)
    INFERIOR_OR_EQUAL reduce using rule 49 (expression -> STRING .)
    SUPERIOR        reduce using rule 49 (expression -> STRING .)
    SUPERIOR_OR_EQUAL reduce using rule 49 (expression -> STRING .)
    DOUBLE_EQUALS   reduce using rule 49 (expression -> STRING .)
    DIFFERENT       reduce using rule 49 (expression -> STRING .)
    RPAREN          reduce using rule 49 (expression -> STRING .)
    TO              reduce using rule 49 (expression -> STRING .)
    RSQUARE         reduce using rule 49 (expression -> STRING .)
    COLON           reduce using rule 49 (expression -> STRING .)


state 19

    (2) block -> block statement .

    IF              reduce using rule 2 (block -> block statement .)
    FOR             reduce using rule 2 (block -> block statement .)
    WHILE           reduce using rule 2 (block -> block statement .)
    PRINT           reduce using rule 2 (block -> block statement .)
    VARIABLE        reduce using rule 2 (block -> block statement .)
    ADDRESS         reduce using rule 2 (block -> block statement .)
    VAR             reduce using rule 2 (block -> block statement .)
    PTR             reduce using rule 2 (block -> block statement .)
    DEF             reduce using rule 2 (block -> block statement .)
    MINUS           reduce using rule 2 (block -> block statement .)
    LPAREN          reduce using rule 2 (block -> block statement .)
    TYPEOF          reduce using rule 2 (block -> block statement .)
    NUMBER          reduce using rule 2 (block -> block statement .)
    STRING          reduce using rule 2 (block -> block statement .)
    $end            reduce using rule 2 (block -> block statement .)
    END             reduce using rule 2 (block -> block statement .)
    ELSE            reduce using rule 2 (block -> block statement .)


state 20

    (4) statement -> IF LPAREN . comparison RPAREN THEN block END
    (5) statement -> IF LPAREN . comparison RPAREN THEN block ELSE block END
    (22) comparison -> . expression INFERIOR expression
    (23) comparison -> . expression INFERIOR_OR_EQUAL expression
    (24) comparison -> . expression SUPERIOR expression
    (25) comparison -> . expression SUPERIOR_OR_EQUAL expression
    (26) comparison -> . expression DOUBLE_EQUALS expression
    (27) comparison -> . expression DIFFERENT expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    comparison                     shift and go to state 48
    expression                     shift and go to state 49

state 21

    (41) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 50
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 22

    (43) expression -> VARIABLE . LSQUARE expression RSQUARE
    (44) expression -> VARIABLE . LSQUARE expression COLON expression RSQUARE
    (45) expression -> VARIABLE . LSQUARE COLON expression RSQUARE
    (46) expression -> VARIABLE . LSQUARE expression COLON RSQUARE
    (47) expression -> VARIABLE . LSQUARE COLON RSQUARE
    (50) expression -> VARIABLE .

    LSQUARE         shift and go to state 51
    RPAREN          reduce using rule 50 (expression -> VARIABLE .)
    PLUS            reduce using rule 50 (expression -> VARIABLE .)
    MINUS           reduce using rule 50 (expression -> VARIABLE .)
    TIMES           reduce using rule 50 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 50 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 50 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 50 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 50 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 50 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 50 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 50 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 50 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 50 (expression -> VARIABLE .)
    SEMICOLON       reduce using rule 50 (expression -> VARIABLE .)
    TO              reduce using rule 50 (expression -> VARIABLE .)
    RSQUARE         reduce using rule 50 (expression -> VARIABLE .)
    COLON           reduce using rule 50 (expression -> VARIABLE .)


state 23

    (6) statement -> FOR LPAREN . expression TO expression RPAREN NEXT block END
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 52

state 24

    (21) statement -> expression SEMICOLON .

    IF              reduce using rule 21 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 21 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 21 (statement -> expression SEMICOLON .)
    VARIABLE        reduce using rule 21 (statement -> expression SEMICOLON .)
    ADDRESS         reduce using rule 21 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 21 (statement -> expression SEMICOLON .)
    PTR             reduce using rule 21 (statement -> expression SEMICOLON .)
    DEF             reduce using rule 21 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 21 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 21 (statement -> expression SEMICOLON .)
    TYPEOF          reduce using rule 21 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 21 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 21 (statement -> expression SEMICOLON .)
    $end            reduce using rule 21 (statement -> expression SEMICOLON .)
    END             reduce using rule 21 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> expression SEMICOLON .)


state 25

    (28) expression -> expression PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 53

state 26

    (29) expression -> expression MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 54

state 27

    (30) expression -> expression TIMES . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 55

state 28

    (31) expression -> expression DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 56

state 29

    (32) expression -> expression EXPONENT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 57

state 30

    (33) expression -> expression REMAINDER . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 58

state 31

    (34) expression -> expression INFERIOR . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 59

state 32

    (35) expression -> expression INFERIOR_OR_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 60

state 33

    (36) expression -> expression SUPERIOR . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 61

state 34

    (37) expression -> expression SUPERIOR_OR_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 62

state 35

    (38) expression -> expression DOUBLE_EQUALS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 63

state 36

    (39) expression -> expression DIFFERENT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 64

state 37

    (7) statement -> WHILE LPAREN . comparison RPAREN NEXT block END
    (22) comparison -> . expression INFERIOR expression
    (23) comparison -> . expression INFERIOR_OR_EQUAL expression
    (24) comparison -> . expression SUPERIOR expression
    (25) comparison -> . expression SUPERIOR_OR_EQUAL expression
    (26) comparison -> . expression DOUBLE_EQUALS expression
    (27) comparison -> . expression DIFFERENT expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    comparison                     shift and go to state 65
    expression                     shift and go to state 49

state 38

    (8) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 66

state 39

    (9) statement -> VARIABLE EQUALS . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 67

state 40

    (11) statement -> VARIABLE LSQUARE . expression RSQUARE EQUALS expression SEMICOLON
    (43) expression -> VARIABLE LSQUARE . expression RSQUARE
    (44) expression -> VARIABLE LSQUARE . expression COLON expression RSQUARE
    (45) expression -> VARIABLE LSQUARE . COLON expression RSQUARE
    (46) expression -> VARIABLE LSQUARE . expression COLON RSQUARE
    (47) expression -> VARIABLE LSQUARE . COLON RSQUARE
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    COLON           shift and go to state 69
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 68

state 41

    (16) statement -> VARIABLE LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 70


state 42

    (10) statement -> ADDRESS VARIABLE . EQUALS expression SEMICOLON
    (12) statement -> ADDRESS VARIABLE . LSQUARE expression RSQUARE EQUALS expression SEMICOLON

    EQUALS          shift and go to state 71
    LSQUARE         shift and go to state 72


state 43

    (13) statement -> VAR VARIABLE . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 73


state 44

    (14) statement -> PTR VARIABLE . EQUALS VARIABLE SEMICOLON

    EQUALS          shift and go to state 74


state 45

    (15) statement -> DEF VARIABLE . LPAREN RPAREN DO block END

    LPAREN          shift and go to state 75


state 46

    (40) expression -> MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 40 (expression -> MINUS expression .)
    PLUS            reduce using rule 40 (expression -> MINUS expression .)
    MINUS           reduce using rule 40 (expression -> MINUS expression .)
    TIMES           reduce using rule 40 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 40 (expression -> MINUS expression .)
    REMAINDER       reduce using rule 40 (expression -> MINUS expression .)
    INFERIOR        reduce using rule 40 (expression -> MINUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 40 (expression -> MINUS expression .)
    SUPERIOR        reduce using rule 40 (expression -> MINUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 40 (expression -> MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 40 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 40 (expression -> MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> MINUS expression .)
    TO              reduce using rule 40 (expression -> MINUS expression .)
    RSQUARE         reduce using rule 40 (expression -> MINUS expression .)
    COLON           reduce using rule 40 (expression -> MINUS expression .)
    EXPONENT        shift and go to state 29

  ! EXPONENT        [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! REMAINDER       [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 47

    (42) expression -> TYPEOF LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 76


state 48

    (4) statement -> IF LPAREN comparison . RPAREN THEN block END
    (5) statement -> IF LPAREN comparison . RPAREN THEN block ELSE block END

    RPAREN          shift and go to state 77


state 49

    (22) comparison -> expression . INFERIOR expression
    (23) comparison -> expression . INFERIOR_OR_EQUAL expression
    (24) comparison -> expression . SUPERIOR expression
    (25) comparison -> expression . SUPERIOR_OR_EQUAL expression
    (26) comparison -> expression . DOUBLE_EQUALS expression
    (27) comparison -> expression . DIFFERENT expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    INFERIOR        shift and go to state 78
    INFERIOR_OR_EQUAL shift and go to state 79
    SUPERIOR        shift and go to state 80
    SUPERIOR_OR_EQUAL shift and go to state 81
    DOUBLE_EQUALS   shift and go to state 82
    DIFFERENT       shift and go to state 83
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30


state 50

    (41) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    REMAINDER       reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    INFERIOR        reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    INFERIOR_OR_EQUAL reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SUPERIOR        reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    SUPERIOR_OR_EQUAL reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DOUBLE_EQUALS   reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 41 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 41 (expression -> LPAREN expression RPAREN .)


state 51

    (43) expression -> VARIABLE LSQUARE . expression RSQUARE
    (44) expression -> VARIABLE LSQUARE . expression COLON expression RSQUARE
    (45) expression -> VARIABLE LSQUARE . COLON expression RSQUARE
    (46) expression -> VARIABLE LSQUARE . expression COLON RSQUARE
    (47) expression -> VARIABLE LSQUARE . COLON RSQUARE
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    COLON           shift and go to state 69
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 84

state 52

    (6) statement -> FOR LPAREN expression . TO expression RPAREN NEXT block END
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    TO              shift and go to state 85
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 53

    (28) expression -> expression PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    INFERIOR        reduce using rule 28 (expression -> expression PLUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 28 (expression -> expression PLUS expression .)
    SUPERIOR        reduce using rule 28 (expression -> expression PLUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 28 (expression -> expression PLUS expression .)
    DOUBLE_EQUALS   reduce using rule 28 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    TO              reduce using rule 28 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 28 (expression -> expression PLUS expression .)
    COLON           reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! REMAINDER       [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 54

    (29) expression -> expression MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    INFERIOR        reduce using rule 29 (expression -> expression MINUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 29 (expression -> expression MINUS expression .)
    SUPERIOR        reduce using rule 29 (expression -> expression MINUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 29 (expression -> expression MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 29 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    TO              reduce using rule 29 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 29 (expression -> expression MINUS expression .)
    COLON           reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! REMAINDER       [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 55

    (30) expression -> expression TIMES expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 30 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 30 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 30 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 30 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 30 (expression -> expression TIMES expression .)
    REMAINDER       reduce using rule 30 (expression -> expression TIMES expression .)
    INFERIOR        reduce using rule 30 (expression -> expression TIMES expression .)
    INFERIOR_OR_EQUAL reduce using rule 30 (expression -> expression TIMES expression .)
    SUPERIOR        reduce using rule 30 (expression -> expression TIMES expression .)
    SUPERIOR_OR_EQUAL reduce using rule 30 (expression -> expression TIMES expression .)
    DOUBLE_EQUALS   reduce using rule 30 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 30 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 30 (expression -> expression TIMES expression .)
    TO              reduce using rule 30 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 30 (expression -> expression TIMES expression .)
    COLON           reduce using rule 30 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 29

  ! EXPONENT        [ reduce using rule 30 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! REMAINDER       [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 56

    (31) expression -> expression DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 31 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 31 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    REMAINDER       reduce using rule 31 (expression -> expression DIVIDE expression .)
    INFERIOR        reduce using rule 31 (expression -> expression DIVIDE expression .)
    INFERIOR_OR_EQUAL reduce using rule 31 (expression -> expression DIVIDE expression .)
    SUPERIOR        reduce using rule 31 (expression -> expression DIVIDE expression .)
    SUPERIOR_OR_EQUAL reduce using rule 31 (expression -> expression DIVIDE expression .)
    DOUBLE_EQUALS   reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 31 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 31 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 31 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 31 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 29

  ! EXPONENT        [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! REMAINDER       [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 57

    (32) expression -> expression EXPONENT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 32 (expression -> expression EXPONENT expression .)
    PLUS            reduce using rule 32 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 32 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 32 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 32 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 32 (expression -> expression EXPONENT expression .)
    REMAINDER       reduce using rule 32 (expression -> expression EXPONENT expression .)
    INFERIOR        reduce using rule 32 (expression -> expression EXPONENT expression .)
    INFERIOR_OR_EQUAL reduce using rule 32 (expression -> expression EXPONENT expression .)
    SUPERIOR        reduce using rule 32 (expression -> expression EXPONENT expression .)
    SUPERIOR_OR_EQUAL reduce using rule 32 (expression -> expression EXPONENT expression .)
    DOUBLE_EQUALS   reduce using rule 32 (expression -> expression EXPONENT expression .)
    DIFFERENT       reduce using rule 32 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 32 (expression -> expression EXPONENT expression .)
    TO              reduce using rule 32 (expression -> expression EXPONENT expression .)
    RSQUARE         reduce using rule 32 (expression -> expression EXPONENT expression .)
    COLON           reduce using rule 32 (expression -> expression EXPONENT expression .)

  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! EXPONENT        [ shift and go to state 29 ]
  ! REMAINDER       [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 58

    (33) expression -> expression REMAINDER expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 33 (expression -> expression REMAINDER expression .)
    PLUS            reduce using rule 33 (expression -> expression REMAINDER expression .)
    MINUS           reduce using rule 33 (expression -> expression REMAINDER expression .)
    TIMES           reduce using rule 33 (expression -> expression REMAINDER expression .)
    DIVIDE          reduce using rule 33 (expression -> expression REMAINDER expression .)
    REMAINDER       reduce using rule 33 (expression -> expression REMAINDER expression .)
    INFERIOR        reduce using rule 33 (expression -> expression REMAINDER expression .)
    INFERIOR_OR_EQUAL reduce using rule 33 (expression -> expression REMAINDER expression .)
    SUPERIOR        reduce using rule 33 (expression -> expression REMAINDER expression .)
    SUPERIOR_OR_EQUAL reduce using rule 33 (expression -> expression REMAINDER expression .)
    DOUBLE_EQUALS   reduce using rule 33 (expression -> expression REMAINDER expression .)
    DIFFERENT       reduce using rule 33 (expression -> expression REMAINDER expression .)
    RPAREN          reduce using rule 33 (expression -> expression REMAINDER expression .)
    TO              reduce using rule 33 (expression -> expression REMAINDER expression .)
    RSQUARE         reduce using rule 33 (expression -> expression REMAINDER expression .)
    COLON           reduce using rule 33 (expression -> expression REMAINDER expression .)
    EXPONENT        shift and go to state 29

  ! EXPONENT        [ reduce using rule 33 (expression -> expression REMAINDER expression .) ]
  ! PLUS            [ shift and go to state 25 ]
  ! MINUS           [ shift and go to state 26 ]
  ! TIMES           [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 28 ]
  ! REMAINDER       [ shift and go to state 30 ]
  ! INFERIOR        [ shift and go to state 31 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 32 ]
  ! SUPERIOR        [ shift and go to state 33 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 34 ]
  ! DOUBLE_EQUALS   [ shift and go to state 35 ]
  ! DIFFERENT       [ shift and go to state 36 ]


state 59

    (34) expression -> expression INFERIOR expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 34 (expression -> expression INFERIOR expression .)
    RPAREN          reduce using rule 34 (expression -> expression INFERIOR expression .)
    TO              reduce using rule 34 (expression -> expression INFERIOR expression .)
    RSQUARE         reduce using rule 34 (expression -> expression INFERIOR expression .)
    COLON           reduce using rule 34 (expression -> expression INFERIOR expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! PLUS            [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR        [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]


state 60

    (35) expression -> expression INFERIOR_OR_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .)
    RPAREN          reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .)
    TO              reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .)
    RSQUARE         reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .)
    COLON           reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! PLUS            [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR        [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]


state 61

    (36) expression -> expression SUPERIOR expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 36 (expression -> expression SUPERIOR expression .)
    RPAREN          reduce using rule 36 (expression -> expression SUPERIOR expression .)
    TO              reduce using rule 36 (expression -> expression SUPERIOR expression .)
    RSQUARE         reduce using rule 36 (expression -> expression SUPERIOR expression .)
    COLON           reduce using rule 36 (expression -> expression SUPERIOR expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! PLUS            [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR        [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]


state 62

    (37) expression -> expression SUPERIOR_OR_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    RPAREN          reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    TO              reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    RSQUARE         reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    COLON           reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! PLUS            [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]


state 63

    (38) expression -> expression DOUBLE_EQUALS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .)
    RPAREN          reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .)
    TO              reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .)
    RSQUARE         reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .)
    COLON           reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! PLUS            [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR        [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR        [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]


state 64

    (39) expression -> expression DIFFERENT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 39 (expression -> expression DIFFERENT expression .)
    RPAREN          reduce using rule 39 (expression -> expression DIFFERENT expression .)
    TO              reduce using rule 39 (expression -> expression DIFFERENT expression .)
    RSQUARE         reduce using rule 39 (expression -> expression DIFFERENT expression .)
    COLON           reduce using rule 39 (expression -> expression DIFFERENT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! PLUS            [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! REMAINDER       [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR        [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR        [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]


state 65

    (7) statement -> WHILE LPAREN comparison . RPAREN NEXT block END

    RPAREN          shift and go to state 86


state 66

    (8) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 67

    (9) statement -> VARIABLE EQUALS expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 88
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 68

    (11) statement -> VARIABLE LSQUARE expression . RSQUARE EQUALS expression SEMICOLON
    (43) expression -> VARIABLE LSQUARE expression . RSQUARE
    (44) expression -> VARIABLE LSQUARE expression . COLON expression RSQUARE
    (46) expression -> VARIABLE LSQUARE expression . COLON RSQUARE
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 89
    COLON           shift and go to state 90
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 69

    (45) expression -> VARIABLE LSQUARE COLON . expression RSQUARE
    (47) expression -> VARIABLE LSQUARE COLON . RSQUARE
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    RSQUARE         shift and go to state 92
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 91

state 70

    (16) statement -> VARIABLE LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 93


state 71

    (10) statement -> ADDRESS VARIABLE EQUALS . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 94

state 72

    (12) statement -> ADDRESS VARIABLE LSQUARE . expression RSQUARE EQUALS expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 95

state 73

    (13) statement -> VAR VARIABLE EQUALS . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 96

state 74

    (14) statement -> PTR VARIABLE EQUALS . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 97


state 75

    (15) statement -> DEF VARIABLE LPAREN . RPAREN DO block END

    RPAREN          shift and go to state 98


state 76

    (42) expression -> TYPEOF LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 99


state 77

    (4) statement -> IF LPAREN comparison RPAREN . THEN block END
    (5) statement -> IF LPAREN comparison RPAREN . THEN block ELSE block END

    THEN            shift and go to state 100


state 78

    (22) comparison -> expression INFERIOR . expression
    (34) expression -> expression INFERIOR . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 101

state 79

    (23) comparison -> expression INFERIOR_OR_EQUAL . expression
    (35) expression -> expression INFERIOR_OR_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 102

state 80

    (24) comparison -> expression SUPERIOR . expression
    (36) expression -> expression SUPERIOR . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 103

state 81

    (25) comparison -> expression SUPERIOR_OR_EQUAL . expression
    (37) expression -> expression SUPERIOR_OR_EQUAL . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 104

state 82

    (26) comparison -> expression DOUBLE_EQUALS . expression
    (38) expression -> expression DOUBLE_EQUALS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 105

state 83

    (27) comparison -> expression DIFFERENT . expression
    (39) expression -> expression DIFFERENT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 106

state 84

    (43) expression -> VARIABLE LSQUARE expression . RSQUARE
    (44) expression -> VARIABLE LSQUARE expression . COLON expression RSQUARE
    (46) expression -> VARIABLE LSQUARE expression . COLON RSQUARE
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 107
    COLON           shift and go to state 90
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 85

    (6) statement -> FOR LPAREN expression TO . expression RPAREN NEXT block END
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 108

state 86

    (7) statement -> WHILE LPAREN comparison RPAREN . NEXT block END

    NEXT            shift and go to state 109


state 87

    (8) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 110


state 88

    (9) statement -> VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)


state 89

    (11) statement -> VARIABLE LSQUARE expression RSQUARE . EQUALS expression SEMICOLON
    (43) expression -> VARIABLE LSQUARE expression RSQUARE .

    EQUALS          shift and go to state 111
    SEMICOLON       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TIMES           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    EXPONENT        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    REMAINDER       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIFFERENT       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)


state 90

    (44) expression -> VARIABLE LSQUARE expression COLON . expression RSQUARE
    (46) expression -> VARIABLE LSQUARE expression COLON . RSQUARE
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    RSQUARE         shift and go to state 113
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 112

state 91

    (45) expression -> VARIABLE LSQUARE COLON expression . RSQUARE
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 114
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 92

    (47) expression -> VARIABLE LSQUARE COLON RSQUARE .

    SEMICOLON       reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    PLUS            reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    MINUS           reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    TIMES           reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    DIVIDE          reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    EXPONENT        reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    REMAINDER       reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    INFERIOR        reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    SUPERIOR        reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    DIFFERENT       reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    RPAREN          reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    TO              reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    RSQUARE         reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    COLON           reduce using rule 47 (expression -> VARIABLE LSQUARE COLON RSQUARE .)


state 93

    (16) statement -> VARIABLE LPAREN RPAREN SEMICOLON .

    IF              reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    PTR             reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    NUMBER          reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 16 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)


state 94

    (10) statement -> ADDRESS VARIABLE EQUALS expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 115
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 95

    (12) statement -> ADDRESS VARIABLE LSQUARE expression . RSQUARE EQUALS expression SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 116
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 96

    (13) statement -> VAR VARIABLE EQUALS expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 117
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 97

    (14) statement -> PTR VARIABLE EQUALS VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 118


state 98

    (15) statement -> DEF VARIABLE LPAREN RPAREN . DO block END

    DO              shift and go to state 119


state 99

    (42) expression -> TYPEOF LPAREN VARIABLE RPAREN .

    SEMICOLON       reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    TIMES           reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    EXPONENT        reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    REMAINDER       reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    INFERIOR        reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    INFERIOR_OR_EQUAL reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    SUPERIOR        reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    SUPERIOR_OR_EQUAL reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    DIFFERENT       reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    TO              reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    RSQUARE         reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    COLON           reduce using rule 42 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)


state 100

    (4) statement -> IF LPAREN comparison RPAREN THEN . block END
    (5) statement -> IF LPAREN comparison RPAREN THEN . block ELSE block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    block                          shift and go to state 120
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 101

    (22) comparison -> expression INFERIOR expression .
    (34) expression -> expression INFERIOR expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 22 (comparison -> expression INFERIOR expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! INFERIOR        [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 34 (expression -> expression INFERIOR expression .) ]


state 102

    (23) comparison -> expression INFERIOR_OR_EQUAL expression .
    (35) expression -> expression INFERIOR_OR_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 23 (comparison -> expression INFERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! INFERIOR        [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 35 (expression -> expression INFERIOR_OR_EQUAL expression .) ]


state 103

    (24) comparison -> expression SUPERIOR expression .
    (36) expression -> expression SUPERIOR expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 24 (comparison -> expression SUPERIOR expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! INFERIOR        [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 36 (expression -> expression SUPERIOR expression .) ]


state 104

    (25) comparison -> expression SUPERIOR_OR_EQUAL expression .
    (37) expression -> expression SUPERIOR_OR_EQUAL expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 25 (comparison -> expression SUPERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! INFERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 37 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]


state 105

    (26) comparison -> expression DOUBLE_EQUALS expression .
    (38) expression -> expression DOUBLE_EQUALS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 26 (comparison -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! INFERIOR        [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR        [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 38 (expression -> expression DOUBLE_EQUALS expression .) ]


state 106

    (27) comparison -> expression DIFFERENT expression .
    (39) expression -> expression DIFFERENT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 27 (comparison -> expression DIFFERENT expression .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36

  ! INFERIOR        [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR        [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]
  ! REMAINDER       [ reduce using rule 39 (expression -> expression DIFFERENT expression .) ]


state 107

    (43) expression -> VARIABLE LSQUARE expression RSQUARE .

    RPAREN          reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TIMES           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    EXPONENT        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    REMAINDER       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR        reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIFFERENT       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SEMICOLON       reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TO              reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    COLON           reduce using rule 43 (expression -> VARIABLE LSQUARE expression RSQUARE .)


state 108

    (6) statement -> FOR LPAREN expression TO expression . RPAREN NEXT block END
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 109

    (7) statement -> WHILE LPAREN comparison RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    block                          shift and go to state 122
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 110

    (8) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    IF              reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PTR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DEF             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 111

    (11) statement -> VARIABLE LSQUARE expression RSQUARE EQUALS . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 123

state 112

    (44) expression -> VARIABLE LSQUARE expression COLON expression . RSQUARE
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 124
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 113

    (46) expression -> VARIABLE LSQUARE expression COLON RSQUARE .

    SEMICOLON       reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    PLUS            reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    MINUS           reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    TIMES           reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    DIVIDE          reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    EXPONENT        reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    REMAINDER       reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    INFERIOR        reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    SUPERIOR        reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    DIFFERENT       reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    RPAREN          reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    TO              reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    RSQUARE         reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    COLON           reduce using rule 46 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)


state 114

    (45) expression -> VARIABLE LSQUARE COLON expression RSQUARE .

    SEMICOLON       reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    PLUS            reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    MINUS           reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    TIMES           reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    DIVIDE          reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    EXPONENT        reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    REMAINDER       reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    INFERIOR        reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    SUPERIOR        reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    DIFFERENT       reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    RPAREN          reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    TO              reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    RSQUARE         reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    COLON           reduce using rule 45 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)


state 115

    (10) statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 10 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)


state 116

    (12) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 125


state 117

    (13) statement -> VAR VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)


state 118

    (14) statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .

    IF              reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    FOR             reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    PRINT           reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    ADDRESS         reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    VAR             reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    PTR             reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    DEF             reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    MINUS           reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    TYPEOF          reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    STRING          reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    $end            reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    END             reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON .)


state 119

    (15) statement -> DEF VARIABLE LPAREN RPAREN DO . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    block                          shift and go to state 126
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 120

    (4) statement -> IF LPAREN comparison RPAREN THEN block . END
    (5) statement -> IF LPAREN comparison RPAREN THEN block . ELSE block END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    END             shift and go to state 127
    ELSE            shift and go to state 128
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    statement                      shift and go to state 19
    expression                     shift and go to state 7

state 121

    (6) statement -> FOR LPAREN expression TO expression RPAREN . NEXT block END

    NEXT            shift and go to state 129


state 122

    (7) statement -> WHILE LPAREN comparison RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    END             shift and go to state 130
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    statement                      shift and go to state 19
    expression                     shift and go to state 7

state 123

    (11) statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 131
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 124

    (44) expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .

    SEMICOLON       reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    PLUS            reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    MINUS           reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    TIMES           reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    DIVIDE          reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    EXPONENT        reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    REMAINDER       reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    INFERIOR        reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    SUPERIOR        reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    DIFFERENT       reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    RPAREN          reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    TO              reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    RSQUARE         reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    COLON           reduce using rule 44 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)


state 125

    (12) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    VARIABLE        shift and go to state 22
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 132

state 126

    (15) statement -> DEF VARIABLE LPAREN RPAREN DO block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    END             shift and go to state 133
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    statement                      shift and go to state 19
    expression                     shift and go to state 7

state 127

    (4) statement -> IF LPAREN comparison RPAREN THEN block END .

    IF              reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    FOR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    VARIABLE        reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    ADDRESS         reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    VAR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    PTR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    DEF             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    MINUS           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    LPAREN          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    TYPEOF          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    NUMBER          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    STRING          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    $end            reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    END             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    ELSE            reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)


state 128

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    block                          shift and go to state 134
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 129

    (6) statement -> FOR LPAREN expression TO expression RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 7
    block                          shift and go to state 135
    statement                      shift and go to state 3

state 130

    (7) statement -> WHILE LPAREN comparison RPAREN NEXT block END .

    IF              reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    PRINT           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    VARIABLE        reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    ADDRESS         reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    VAR             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    PTR             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    DEF             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    MINUS           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    LPAREN          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    TYPEOF          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    NUMBER          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    STRING          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    $end            reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    END             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    ELSE            reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)


state 131

    (11) statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .

    IF              reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    $end            reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    END             reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 11 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)


state 132

    (12) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . EXPONENT expression
    (33) expression -> expression . REMAINDER expression
    (34) expression -> expression . INFERIOR expression
    (35) expression -> expression . INFERIOR_OR_EQUAL expression
    (36) expression -> expression . SUPERIOR expression
    (37) expression -> expression . SUPERIOR_OR_EQUAL expression
    (38) expression -> expression . DOUBLE_EQUALS expression
    (39) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 136
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27
    DIVIDE          shift and go to state 28
    EXPONENT        shift and go to state 29
    REMAINDER       shift and go to state 30
    INFERIOR        shift and go to state 31
    INFERIOR_OR_EQUAL shift and go to state 32
    SUPERIOR        shift and go to state 33
    SUPERIOR_OR_EQUAL shift and go to state 34
    DOUBLE_EQUALS   shift and go to state 35
    DIFFERENT       shift and go to state 36


state 133

    (15) statement -> DEF VARIABLE LPAREN RPAREN DO block END .

    IF              reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    FOR             reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    WHILE           reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    PRINT           reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    VARIABLE        reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    ADDRESS         reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    VAR             reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    PTR             reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    DEF             reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    MINUS           reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    LPAREN          reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    TYPEOF          reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    NUMBER          reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    STRING          reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    $end            reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    END             reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    ELSE            reduce using rule 15 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)


state 134

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    END             shift and go to state 137
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    statement                      shift and go to state 19
    expression                     shift and go to state 7

state 135

    (6) statement -> FOR LPAREN expression TO expression RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (11) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (12) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (14) statement -> . PTR VARIABLE EQUALS VARIABLE SEMICOLON
    (15) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (16) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (21) statement -> . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression EXPONENT expression
    (33) expression -> . expression REMAINDER expression
    (34) expression -> . expression INFERIOR expression
    (35) expression -> . expression INFERIOR_OR_EQUAL expression
    (36) expression -> . expression SUPERIOR expression
    (37) expression -> . expression SUPERIOR_OR_EQUAL expression
    (38) expression -> . expression DOUBLE_EQUALS expression
    (39) expression -> . expression DIFFERENT expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPAREN expression RPAREN
    (42) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (43) expression -> . VARIABLE LSQUARE expression RSQUARE
    (44) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (45) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (46) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (47) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (48) expression -> . NUMBER
    (49) expression -> . STRING
    (50) expression -> . VARIABLE

    END             shift and go to state 138
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    PTR             shift and go to state 13
    DEF             shift and go to state 14
    MINUS           shift and go to state 15
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 16
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 19

state 136

    (12) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .

    IF              reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    PTR             reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    END             reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 12 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)


state 137

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .

    IF              reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    FOR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    VARIABLE        reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    ADDRESS         reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    VAR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    PTR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    DEF             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    MINUS           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    TYPEOF          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    STRING          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    $end            reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    END             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    ELSE            reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)


state 138

    (6) statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .

    IF              reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    FOR             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    WHILE           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    PRINT           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    VARIABLE        reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    ADDRESS         reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    VAR             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    PTR             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    DEF             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    MINUS           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    LPAREN          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    TYPEOF          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    NUMBER          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    STRING          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    $end            reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    END             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    ELSE            reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 59 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 59 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 59 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 59 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 59 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 60 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 60 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 60 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 60 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 61 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 61 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 61 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 61 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 62 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 62 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 62 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 62 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 63 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 63 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 63 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 63 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 64 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 64 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 64 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 64 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 101 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 101 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 101 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 101 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 102 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 102 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 102 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 102 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 103 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 103 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 103 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 103 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 104 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 104 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 104 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 104 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 105 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 105 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 105 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 105 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 106 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 106 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 106 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 106 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 106 resolved as shift
