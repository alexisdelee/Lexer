Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE

Grammar

Rule 0     S' -> scope
Rule 1     scope -> block
Rule 2     block -> block statement
Rule 3     block -> statement
Rule 4     statement -> IF LPAREN comparison RPAREN THEN block END
Rule 5     statement -> IF LPAREN comparison RPAREN THEN block ELSE block END
Rule 6     statement -> FOR LPAREN expression TO expression RPAREN NEXT block END
Rule 7     statement -> WHILE LPAREN comparison RPAREN NEXT block END
Rule 8     statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 9     statement -> VARIABLE EQUALS expression SEMICOLON
Rule 10    statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
Rule 11    statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON
Rule 12    statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
Rule 13    statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
Rule 14    statement -> VAR VARIABLE EQUALS expression SEMICOLON
Rule 15    statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
Rule 16    statement -> CONST VARIABLE EQUALS expression SEMICOLON
Rule 17    statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
Rule 18    statement -> DEF VARIABLE LPAREN argument RPAREN DO block END
Rule 19    statement -> DEF VARIABLE LPAREN RPAREN DO block END
Rule 20    statement -> VARIABLE LPAREN argument RPAREN SEMICOLON
Rule 21    statement -> VARIABLE LPAREN RPAREN SEMICOLON
Rule 22    argument -> argument SEPARATOR VARIABLE
Rule 23    argument -> VARIABLE
Rule 24    argument -> argument SEPARATOR expression
Rule 25    argument -> expression
Rule 26    statement -> DELETE VARIABLE SEMICOLON
Rule 27    statement -> expression SEMICOLON
Rule 28    comparison -> expression INFERIOR expression
Rule 29    comparison -> expression INFERIOR_OR_EQUAL expression
Rule 30    comparison -> expression SUPERIOR expression
Rule 31    comparison -> expression SUPERIOR_OR_EQUAL expression
Rule 32    comparison -> expression DOUBLE_EQUALS expression
Rule 33    comparison -> expression DIFFERENT expression
Rule 34    expression -> expression PLUS expression
Rule 35    expression -> expression MINUS expression
Rule 36    expression -> expression TIMES expression
Rule 37    expression -> expression DIVIDE expression
Rule 38    expression -> expression EXPONENT expression
Rule 39    expression -> expression REMAINDER expression
Rule 40    expression -> expression INFERIOR expression
Rule 41    expression -> expression INFERIOR_OR_EQUAL expression
Rule 42    expression -> expression SUPERIOR expression
Rule 43    expression -> expression SUPERIOR_OR_EQUAL expression
Rule 44    expression -> expression DOUBLE_EQUALS expression
Rule 45    expression -> expression DIFFERENT expression
Rule 46    expression -> MINUS expression
Rule 47    expression -> LPAREN expression RPAREN
Rule 48    expression -> TYPEOF LPAREN VARIABLE RPAREN
Rule 49    expression -> VARIABLE LSQUARE expression RSQUARE
Rule 50    expression -> VARIABLE LSQUARE expression COLON expression RSQUARE
Rule 51    expression -> VARIABLE LSQUARE COLON expression RSQUARE
Rule 52    expression -> VARIABLE LSQUARE expression COLON RSQUARE
Rule 53    expression -> VARIABLE LSQUARE COLON RSQUARE
Rule 54    expression -> NUMBER
Rule 55    expression -> STRING
Rule 56    expression -> VARIABLE

Terminals, with rules where they appear

ADDRESS              : 10 11 13 15 17
COLON                : 50 51 52 53
CONST                : 16 17
DEF                  : 18 19
DELETE               : 26
DIFFERENT            : 33 45
DIVIDE               : 37
DO                   : 18 19
DOUBLE_EQUALS        : 32 44
ELSE                 : 5
END                  : 4 5 6 7 18 19
EQUALS               : 9 10 11 12 13 14 15 16 17
EXPONENT             : 38
FOR                  : 6
IF                   : 4 5
INFERIOR             : 28 40
INFERIOR_OR_EQUAL    : 29 41
LPAREN               : 4 5 6 7 8 18 19 20 21 47 48
LSQUARE              : 12 13 49 50 51 52 53
MINUS                : 35 46
NEXT                 : 6 7
NUMBER               : 54
PLUS                 : 34
PRINT                : 8
QUOTE                : 
REMAINDER            : 39
RPAREN               : 4 5 6 7 8 18 19 20 21 47 48
RSQUARE              : 12 13 49 50 51 52 53
SEMICOLON            : 8 9 10 11 12 13 14 15 16 17 20 21 26 27
SEPARATOR            : 22 24
STRING               : 55
SUPERIOR             : 30 42
SUPERIOR_OR_EQUAL    : 31 43
THEN                 : 4 5
TIMES                : 36
TO                   : 6
TYPEOF               : 48
VAR                  : 14 15
VARIABLE             : 9 10 10 11 12 13 14 15 15 16 17 17 18 19 20 21 22 23 26 48 49 50 51 52 53 56
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

argument             : 18 20 22 24
block                : 1 2 4 5 5 6 7 18 19
comparison           : 4 5 7
expression           : 6 6 8 9 11 12 12 13 13 14 16 24 25 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 47 49 50 50 51 52
scope                : 0
statement            : 2 3

Parsing method: LALR

state 0

    (0) S' -> . scope
    (1) scope -> . block
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    scope                          shift and go to state 1
    block                          shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 1

    (0) S' -> scope .



state 2

    (1) scope -> block .
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    $end            reduce using rule 1 (scope -> block .)
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 20
    expression                     shift and go to state 7

state 3

    (3) block -> statement .

    IF              reduce using rule 3 (block -> statement .)
    FOR             reduce using rule 3 (block -> statement .)
    WHILE           reduce using rule 3 (block -> statement .)
    PRINT           reduce using rule 3 (block -> statement .)
    VARIABLE        reduce using rule 3 (block -> statement .)
    ADDRESS         reduce using rule 3 (block -> statement .)
    VAR             reduce using rule 3 (block -> statement .)
    CONST           reduce using rule 3 (block -> statement .)
    DEF             reduce using rule 3 (block -> statement .)
    DELETE          reduce using rule 3 (block -> statement .)
    MINUS           reduce using rule 3 (block -> statement .)
    LPAREN          reduce using rule 3 (block -> statement .)
    TYPEOF          reduce using rule 3 (block -> statement .)
    NUMBER          reduce using rule 3 (block -> statement .)
    STRING          reduce using rule 3 (block -> statement .)
    $end            reduce using rule 3 (block -> statement .)
    END             reduce using rule 3 (block -> statement .)
    ELSE            reduce using rule 3 (block -> statement .)


state 4

    (4) statement -> IF . LPAREN comparison RPAREN THEN block END
    (5) statement -> IF . LPAREN comparison RPAREN THEN block ELSE block END

    LPAREN          shift and go to state 21


state 5

    (47) expression -> LPAREN . expression RPAREN
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 22

state 6

    (6) statement -> FOR . LPAREN expression TO expression RPAREN NEXT block END

    LPAREN          shift and go to state 24


state 7

    (27) statement -> expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 25
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 8

    (7) statement -> WHILE . LPAREN comparison RPAREN NEXT block END

    LPAREN          shift and go to state 38


state 9

    (8) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 39


state 10

    (9) statement -> VARIABLE . EQUALS expression SEMICOLON
    (10) statement -> VARIABLE . EQUALS ADDRESS VARIABLE SEMICOLON
    (12) statement -> VARIABLE . LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (20) statement -> VARIABLE . LPAREN argument RPAREN SEMICOLON
    (21) statement -> VARIABLE . LPAREN RPAREN SEMICOLON
    (49) expression -> VARIABLE . LSQUARE expression RSQUARE
    (50) expression -> VARIABLE . LSQUARE expression COLON expression RSQUARE
    (51) expression -> VARIABLE . LSQUARE COLON expression RSQUARE
    (52) expression -> VARIABLE . LSQUARE expression COLON RSQUARE
    (53) expression -> VARIABLE . LSQUARE COLON RSQUARE
    (56) expression -> VARIABLE .

    EQUALS          shift and go to state 40
    LSQUARE         shift and go to state 41
    LPAREN          shift and go to state 42
    SEMICOLON       reduce using rule 56 (expression -> VARIABLE .)
    PLUS            reduce using rule 56 (expression -> VARIABLE .)
    MINUS           reduce using rule 56 (expression -> VARIABLE .)
    TIMES           reduce using rule 56 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 56 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 56 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 56 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 56 (expression -> VARIABLE .)


state 11

    (11) statement -> ADDRESS . VARIABLE EQUALS expression SEMICOLON
    (13) statement -> ADDRESS . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON

    VARIABLE        shift and go to state 43


state 12

    (14) statement -> VAR . VARIABLE EQUALS expression SEMICOLON
    (15) statement -> VAR . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON

    VARIABLE        shift and go to state 44


state 13

    (16) statement -> CONST . VARIABLE EQUALS expression SEMICOLON
    (17) statement -> CONST . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON

    VARIABLE        shift and go to state 45


state 14

    (18) statement -> DEF . VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> DEF . VARIABLE LPAREN RPAREN DO block END

    VARIABLE        shift and go to state 46


state 15

    (26) statement -> DELETE . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 47


state 16

    (46) expression -> MINUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 48

state 17

    (48) expression -> TYPEOF . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 49


state 18

    (54) expression -> NUMBER .

    SEMICOLON       reduce using rule 54 (expression -> NUMBER .)
    PLUS            reduce using rule 54 (expression -> NUMBER .)
    MINUS           reduce using rule 54 (expression -> NUMBER .)
    TIMES           reduce using rule 54 (expression -> NUMBER .)
    DIVIDE          reduce using rule 54 (expression -> NUMBER .)
    EXPONENT        reduce using rule 54 (expression -> NUMBER .)
    REMAINDER       reduce using rule 54 (expression -> NUMBER .)
    INFERIOR        reduce using rule 54 (expression -> NUMBER .)
    INFERIOR_OR_EQUAL reduce using rule 54 (expression -> NUMBER .)
    SUPERIOR        reduce using rule 54 (expression -> NUMBER .)
    SUPERIOR_OR_EQUAL reduce using rule 54 (expression -> NUMBER .)
    DOUBLE_EQUALS   reduce using rule 54 (expression -> NUMBER .)
    DIFFERENT       reduce using rule 54 (expression -> NUMBER .)
    RPAREN          reduce using rule 54 (expression -> NUMBER .)
    TO              reduce using rule 54 (expression -> NUMBER .)
    RSQUARE         reduce using rule 54 (expression -> NUMBER .)
    COLON           reduce using rule 54 (expression -> NUMBER .)
    SEPARATOR       reduce using rule 54 (expression -> NUMBER .)


state 19

    (55) expression -> STRING .

    SEMICOLON       reduce using rule 55 (expression -> STRING .)
    PLUS            reduce using rule 55 (expression -> STRING .)
    MINUS           reduce using rule 55 (expression -> STRING .)
    TIMES           reduce using rule 55 (expression -> STRING .)
    DIVIDE          reduce using rule 55 (expression -> STRING .)
    EXPONENT        reduce using rule 55 (expression -> STRING .)
    REMAINDER       reduce using rule 55 (expression -> STRING .)
    INFERIOR        reduce using rule 55 (expression -> STRING .)
    INFERIOR_OR_EQUAL reduce using rule 55 (expression -> STRING .)
    SUPERIOR        reduce using rule 55 (expression -> STRING .)
    SUPERIOR_OR_EQUAL reduce using rule 55 (expression -> STRING .)
    DOUBLE_EQUALS   reduce using rule 55 (expression -> STRING .)
    DIFFERENT       reduce using rule 55 (expression -> STRING .)
    RPAREN          reduce using rule 55 (expression -> STRING .)
    TO              reduce using rule 55 (expression -> STRING .)
    RSQUARE         reduce using rule 55 (expression -> STRING .)
    COLON           reduce using rule 55 (expression -> STRING .)
    SEPARATOR       reduce using rule 55 (expression -> STRING .)


state 20

    (2) block -> block statement .

    IF              reduce using rule 2 (block -> block statement .)
    FOR             reduce using rule 2 (block -> block statement .)
    WHILE           reduce using rule 2 (block -> block statement .)
    PRINT           reduce using rule 2 (block -> block statement .)
    VARIABLE        reduce using rule 2 (block -> block statement .)
    ADDRESS         reduce using rule 2 (block -> block statement .)
    VAR             reduce using rule 2 (block -> block statement .)
    CONST           reduce using rule 2 (block -> block statement .)
    DEF             reduce using rule 2 (block -> block statement .)
    DELETE          reduce using rule 2 (block -> block statement .)
    MINUS           reduce using rule 2 (block -> block statement .)
    LPAREN          reduce using rule 2 (block -> block statement .)
    TYPEOF          reduce using rule 2 (block -> block statement .)
    NUMBER          reduce using rule 2 (block -> block statement .)
    STRING          reduce using rule 2 (block -> block statement .)
    $end            reduce using rule 2 (block -> block statement .)
    END             reduce using rule 2 (block -> block statement .)
    ELSE            reduce using rule 2 (block -> block statement .)


state 21

    (4) statement -> IF LPAREN . comparison RPAREN THEN block END
    (5) statement -> IF LPAREN . comparison RPAREN THEN block ELSE block END
    (28) comparison -> . expression INFERIOR expression
    (29) comparison -> . expression INFERIOR_OR_EQUAL expression
    (30) comparison -> . expression SUPERIOR expression
    (31) comparison -> . expression SUPERIOR_OR_EQUAL expression
    (32) comparison -> . expression DOUBLE_EQUALS expression
    (33) comparison -> . expression DIFFERENT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    comparison                     shift and go to state 50
    expression                     shift and go to state 51

state 22

    (47) expression -> LPAREN expression . RPAREN
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 23

    (49) expression -> VARIABLE . LSQUARE expression RSQUARE
    (50) expression -> VARIABLE . LSQUARE expression COLON expression RSQUARE
    (51) expression -> VARIABLE . LSQUARE COLON expression RSQUARE
    (52) expression -> VARIABLE . LSQUARE expression COLON RSQUARE
    (53) expression -> VARIABLE . LSQUARE COLON RSQUARE
    (56) expression -> VARIABLE .

    LSQUARE         shift and go to state 53
    RPAREN          reduce using rule 56 (expression -> VARIABLE .)
    PLUS            reduce using rule 56 (expression -> VARIABLE .)
    MINUS           reduce using rule 56 (expression -> VARIABLE .)
    TIMES           reduce using rule 56 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 56 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 56 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 56 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 56 (expression -> VARIABLE .)
    SEMICOLON       reduce using rule 56 (expression -> VARIABLE .)
    TO              reduce using rule 56 (expression -> VARIABLE .)
    RSQUARE         reduce using rule 56 (expression -> VARIABLE .)
    COLON           reduce using rule 56 (expression -> VARIABLE .)
    SEPARATOR       reduce using rule 56 (expression -> VARIABLE .)


state 24

    (6) statement -> FOR LPAREN . expression TO expression RPAREN NEXT block END
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 54

state 25

    (27) statement -> expression SEMICOLON .

    IF              reduce using rule 27 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 27 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> expression SEMICOLON .)
    VARIABLE        reduce using rule 27 (statement -> expression SEMICOLON .)
    ADDRESS         reduce using rule 27 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 27 (statement -> expression SEMICOLON .)
    CONST           reduce using rule 27 (statement -> expression SEMICOLON .)
    DEF             reduce using rule 27 (statement -> expression SEMICOLON .)
    DELETE          reduce using rule 27 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 27 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 27 (statement -> expression SEMICOLON .)
    TYPEOF          reduce using rule 27 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 27 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 27 (statement -> expression SEMICOLON .)
    $end            reduce using rule 27 (statement -> expression SEMICOLON .)
    END             reduce using rule 27 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 27 (statement -> expression SEMICOLON .)


state 26

    (34) expression -> expression PLUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 55

state 27

    (35) expression -> expression MINUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 56

state 28

    (36) expression -> expression TIMES . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 57

state 29

    (37) expression -> expression DIVIDE . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 58

state 30

    (38) expression -> expression EXPONENT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 59

state 31

    (39) expression -> expression REMAINDER . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 60

state 32

    (40) expression -> expression INFERIOR . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 61

state 33

    (41) expression -> expression INFERIOR_OR_EQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 62

state 34

    (42) expression -> expression SUPERIOR . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 63

state 35

    (43) expression -> expression SUPERIOR_OR_EQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 64

state 36

    (44) expression -> expression DOUBLE_EQUALS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 65

state 37

    (45) expression -> expression DIFFERENT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 66

state 38

    (7) statement -> WHILE LPAREN . comparison RPAREN NEXT block END
    (28) comparison -> . expression INFERIOR expression
    (29) comparison -> . expression INFERIOR_OR_EQUAL expression
    (30) comparison -> . expression SUPERIOR expression
    (31) comparison -> . expression SUPERIOR_OR_EQUAL expression
    (32) comparison -> . expression DOUBLE_EQUALS expression
    (33) comparison -> . expression DIFFERENT expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    comparison                     shift and go to state 67
    expression                     shift and go to state 51

state 39

    (8) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 68

state 40

    (9) statement -> VARIABLE EQUALS . expression SEMICOLON
    (10) statement -> VARIABLE EQUALS . ADDRESS VARIABLE SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    ADDRESS         shift and go to state 70
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 69

state 41

    (12) statement -> VARIABLE LSQUARE . expression RSQUARE EQUALS expression SEMICOLON
    (49) expression -> VARIABLE LSQUARE . expression RSQUARE
    (50) expression -> VARIABLE LSQUARE . expression COLON expression RSQUARE
    (51) expression -> VARIABLE LSQUARE . COLON expression RSQUARE
    (52) expression -> VARIABLE LSQUARE . expression COLON RSQUARE
    (53) expression -> VARIABLE LSQUARE . COLON RSQUARE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    COLON           shift and go to state 72
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 71

state 42

    (20) statement -> VARIABLE LPAREN . argument RPAREN SEMICOLON
    (21) statement -> VARIABLE LPAREN . RPAREN SEMICOLON
    (22) argument -> . argument SEPARATOR VARIABLE
    (23) argument -> . VARIABLE
    (24) argument -> . argument SEPARATOR expression
    (25) argument -> . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    RPAREN          shift and go to state 75
    VARIABLE        shift and go to state 73
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    argument                       shift and go to state 74
    expression                     shift and go to state 76

state 43

    (11) statement -> ADDRESS VARIABLE . EQUALS expression SEMICOLON
    (13) statement -> ADDRESS VARIABLE . LSQUARE expression RSQUARE EQUALS expression SEMICOLON

    EQUALS          shift and go to state 77
    LSQUARE         shift and go to state 78


state 44

    (14) statement -> VAR VARIABLE . EQUALS expression SEMICOLON
    (15) statement -> VAR VARIABLE . EQUALS ADDRESS VARIABLE SEMICOLON

    EQUALS          shift and go to state 79


state 45

    (16) statement -> CONST VARIABLE . EQUALS expression SEMICOLON
    (17) statement -> CONST VARIABLE . EQUALS ADDRESS VARIABLE SEMICOLON

    EQUALS          shift and go to state 80


state 46

    (18) statement -> DEF VARIABLE . LPAREN argument RPAREN DO block END
    (19) statement -> DEF VARIABLE . LPAREN RPAREN DO block END

    LPAREN          shift and go to state 81


state 47

    (26) statement -> DELETE VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 82


state 48

    (46) expression -> MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 46 (expression -> MINUS expression .)
    PLUS            reduce using rule 46 (expression -> MINUS expression .)
    MINUS           reduce using rule 46 (expression -> MINUS expression .)
    TIMES           reduce using rule 46 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 46 (expression -> MINUS expression .)
    REMAINDER       reduce using rule 46 (expression -> MINUS expression .)
    INFERIOR        reduce using rule 46 (expression -> MINUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 46 (expression -> MINUS expression .)
    SUPERIOR        reduce using rule 46 (expression -> MINUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 46 (expression -> MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 46 (expression -> MINUS expression .)
    DIFFERENT       reduce using rule 46 (expression -> MINUS expression .)
    RPAREN          reduce using rule 46 (expression -> MINUS expression .)
    TO              reduce using rule 46 (expression -> MINUS expression .)
    RSQUARE         reduce using rule 46 (expression -> MINUS expression .)
    COLON           reduce using rule 46 (expression -> MINUS expression .)
    SEPARATOR       reduce using rule 46 (expression -> MINUS expression .)
    EXPONENT        shift and go to state 30

  ! EXPONENT        [ reduce using rule 46 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! REMAINDER       [ shift and go to state 31 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 49

    (48) expression -> TYPEOF LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 83


state 50

    (4) statement -> IF LPAREN comparison . RPAREN THEN block END
    (5) statement -> IF LPAREN comparison . RPAREN THEN block ELSE block END

    RPAREN          shift and go to state 84


state 51

    (28) comparison -> expression . INFERIOR expression
    (29) comparison -> expression . INFERIOR_OR_EQUAL expression
    (30) comparison -> expression . SUPERIOR expression
    (31) comparison -> expression . SUPERIOR_OR_EQUAL expression
    (32) comparison -> expression . DOUBLE_EQUALS expression
    (33) comparison -> expression . DIFFERENT expression
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    INFERIOR        shift and go to state 85
    INFERIOR_OR_EQUAL shift and go to state 86
    SUPERIOR        shift and go to state 87
    SUPERIOR_OR_EQUAL shift and go to state 88
    DOUBLE_EQUALS   shift and go to state 89
    DIFFERENT       shift and go to state 90
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31


state 52

    (47) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    REMAINDER       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    INFERIOR        reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    INFERIOR_OR_EQUAL reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    SUPERIOR        reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    SUPERIOR_OR_EQUAL reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DOUBLE_EQUALS   reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 47 (expression -> LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 47 (expression -> LPAREN expression RPAREN .)


state 53

    (49) expression -> VARIABLE LSQUARE . expression RSQUARE
    (50) expression -> VARIABLE LSQUARE . expression COLON expression RSQUARE
    (51) expression -> VARIABLE LSQUARE . COLON expression RSQUARE
    (52) expression -> VARIABLE LSQUARE . expression COLON RSQUARE
    (53) expression -> VARIABLE LSQUARE . COLON RSQUARE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    COLON           shift and go to state 72
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 91

state 54

    (6) statement -> FOR LPAREN expression . TO expression RPAREN NEXT block END
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    TO              shift and go to state 92
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 55

    (34) expression -> expression PLUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 34 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 34 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 34 (expression -> expression PLUS expression .)
    INFERIOR        reduce using rule 34 (expression -> expression PLUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 34 (expression -> expression PLUS expression .)
    SUPERIOR        reduce using rule 34 (expression -> expression PLUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 34 (expression -> expression PLUS expression .)
    DOUBLE_EQUALS   reduce using rule 34 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 34 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression PLUS expression .)
    TO              reduce using rule 34 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 34 (expression -> expression PLUS expression .)
    COLON           reduce using rule 34 (expression -> expression PLUS expression .)
    SEPARATOR       reduce using rule 34 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31

  ! TIMES           [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! REMAINDER       [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 56

    (35) expression -> expression MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 35 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 35 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 35 (expression -> expression MINUS expression .)
    INFERIOR        reduce using rule 35 (expression -> expression MINUS expression .)
    INFERIOR_OR_EQUAL reduce using rule 35 (expression -> expression MINUS expression .)
    SUPERIOR        reduce using rule 35 (expression -> expression MINUS expression .)
    SUPERIOR_OR_EQUAL reduce using rule 35 (expression -> expression MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 35 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 35 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 35 (expression -> expression MINUS expression .)
    TO              reduce using rule 35 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 35 (expression -> expression MINUS expression .)
    COLON           reduce using rule 35 (expression -> expression MINUS expression .)
    SEPARATOR       reduce using rule 35 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31

  ! TIMES           [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! REMAINDER       [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 57

    (36) expression -> expression TIMES expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 36 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 36 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 36 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 36 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 36 (expression -> expression TIMES expression .)
    REMAINDER       reduce using rule 36 (expression -> expression TIMES expression .)
    INFERIOR        reduce using rule 36 (expression -> expression TIMES expression .)
    INFERIOR_OR_EQUAL reduce using rule 36 (expression -> expression TIMES expression .)
    SUPERIOR        reduce using rule 36 (expression -> expression TIMES expression .)
    SUPERIOR_OR_EQUAL reduce using rule 36 (expression -> expression TIMES expression .)
    DOUBLE_EQUALS   reduce using rule 36 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 36 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 36 (expression -> expression TIMES expression .)
    TO              reduce using rule 36 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 36 (expression -> expression TIMES expression .)
    COLON           reduce using rule 36 (expression -> expression TIMES expression .)
    SEPARATOR       reduce using rule 36 (expression -> expression TIMES expression .)
    EXPONENT        shift and go to state 30

  ! EXPONENT        [ reduce using rule 36 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! REMAINDER       [ shift and go to state 31 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 58

    (37) expression -> expression DIVIDE expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 37 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 37 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 37 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 37 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 37 (expression -> expression DIVIDE expression .)
    REMAINDER       reduce using rule 37 (expression -> expression DIVIDE expression .)
    INFERIOR        reduce using rule 37 (expression -> expression DIVIDE expression .)
    INFERIOR_OR_EQUAL reduce using rule 37 (expression -> expression DIVIDE expression .)
    SUPERIOR        reduce using rule 37 (expression -> expression DIVIDE expression .)
    SUPERIOR_OR_EQUAL reduce using rule 37 (expression -> expression DIVIDE expression .)
    DOUBLE_EQUALS   reduce using rule 37 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 37 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 37 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 37 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 37 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 37 (expression -> expression DIVIDE expression .)
    SEPARATOR       reduce using rule 37 (expression -> expression DIVIDE expression .)
    EXPONENT        shift and go to state 30

  ! EXPONENT        [ reduce using rule 37 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! REMAINDER       [ shift and go to state 31 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 59

    (38) expression -> expression EXPONENT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 38 (expression -> expression EXPONENT expression .)
    PLUS            reduce using rule 38 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 38 (expression -> expression EXPONENT expression .)
    TIMES           reduce using rule 38 (expression -> expression EXPONENT expression .)
    DIVIDE          reduce using rule 38 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 38 (expression -> expression EXPONENT expression .)
    REMAINDER       reduce using rule 38 (expression -> expression EXPONENT expression .)
    INFERIOR        reduce using rule 38 (expression -> expression EXPONENT expression .)
    INFERIOR_OR_EQUAL reduce using rule 38 (expression -> expression EXPONENT expression .)
    SUPERIOR        reduce using rule 38 (expression -> expression EXPONENT expression .)
    SUPERIOR_OR_EQUAL reduce using rule 38 (expression -> expression EXPONENT expression .)
    DOUBLE_EQUALS   reduce using rule 38 (expression -> expression EXPONENT expression .)
    DIFFERENT       reduce using rule 38 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 38 (expression -> expression EXPONENT expression .)
    TO              reduce using rule 38 (expression -> expression EXPONENT expression .)
    RSQUARE         reduce using rule 38 (expression -> expression EXPONENT expression .)
    COLON           reduce using rule 38 (expression -> expression EXPONENT expression .)
    SEPARATOR       reduce using rule 38 (expression -> expression EXPONENT expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! EXPONENT        [ shift and go to state 30 ]
  ! REMAINDER       [ shift and go to state 31 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 60

    (39) expression -> expression REMAINDER expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       reduce using rule 39 (expression -> expression REMAINDER expression .)
    PLUS            reduce using rule 39 (expression -> expression REMAINDER expression .)
    MINUS           reduce using rule 39 (expression -> expression REMAINDER expression .)
    TIMES           reduce using rule 39 (expression -> expression REMAINDER expression .)
    DIVIDE          reduce using rule 39 (expression -> expression REMAINDER expression .)
    REMAINDER       reduce using rule 39 (expression -> expression REMAINDER expression .)
    INFERIOR        reduce using rule 39 (expression -> expression REMAINDER expression .)
    INFERIOR_OR_EQUAL reduce using rule 39 (expression -> expression REMAINDER expression .)
    SUPERIOR        reduce using rule 39 (expression -> expression REMAINDER expression .)
    SUPERIOR_OR_EQUAL reduce using rule 39 (expression -> expression REMAINDER expression .)
    DOUBLE_EQUALS   reduce using rule 39 (expression -> expression REMAINDER expression .)
    DIFFERENT       reduce using rule 39 (expression -> expression REMAINDER expression .)
    RPAREN          reduce using rule 39 (expression -> expression REMAINDER expression .)
    TO              reduce using rule 39 (expression -> expression REMAINDER expression .)
    RSQUARE         reduce using rule 39 (expression -> expression REMAINDER expression .)
    COLON           reduce using rule 39 (expression -> expression REMAINDER expression .)
    SEPARATOR       reduce using rule 39 (expression -> expression REMAINDER expression .)
    EXPONENT        shift and go to state 30

  ! EXPONENT        [ reduce using rule 39 (expression -> expression REMAINDER expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! REMAINDER       [ shift and go to state 31 ]
  ! INFERIOR        [ shift and go to state 32 ]
  ! INFERIOR_OR_EQUAL [ shift and go to state 33 ]
  ! SUPERIOR        [ shift and go to state 34 ]
  ! SUPERIOR_OR_EQUAL [ shift and go to state 35 ]
  ! DOUBLE_EQUALS   [ shift and go to state 36 ]
  ! DIFFERENT       [ shift and go to state 37 ]


state 61

    (40) expression -> expression INFERIOR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 40 (expression -> expression INFERIOR expression .)
    RPAREN          reduce using rule 40 (expression -> expression INFERIOR expression .)
    TO              reduce using rule 40 (expression -> expression INFERIOR expression .)
    RSQUARE         reduce using rule 40 (expression -> expression INFERIOR expression .)
    COLON           reduce using rule 40 (expression -> expression INFERIOR expression .)
    SEPARATOR       reduce using rule 40 (expression -> expression INFERIOR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! PLUS            [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR        [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]


state 62

    (41) expression -> expression INFERIOR_OR_EQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .)
    RPAREN          reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .)
    TO              reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .)
    RSQUARE         reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .)
    COLON           reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .)
    SEPARATOR       reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! PLUS            [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR        [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]


state 63

    (42) expression -> expression SUPERIOR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 42 (expression -> expression SUPERIOR expression .)
    RPAREN          reduce using rule 42 (expression -> expression SUPERIOR expression .)
    TO              reduce using rule 42 (expression -> expression SUPERIOR expression .)
    RSQUARE         reduce using rule 42 (expression -> expression SUPERIOR expression .)
    COLON           reduce using rule 42 (expression -> expression SUPERIOR expression .)
    SEPARATOR       reduce using rule 42 (expression -> expression SUPERIOR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! PLUS            [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR        [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]


state 64

    (43) expression -> expression SUPERIOR_OR_EQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    RPAREN          reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    TO              reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    RSQUARE         reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    COLON           reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    SEPARATOR       reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! PLUS            [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR        [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]


state 65

    (44) expression -> expression DOUBLE_EQUALS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .)
    RPAREN          reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .)
    TO              reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .)
    RSQUARE         reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .)
    COLON           reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .)
    SEPARATOR       reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! PLUS            [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR        [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR        [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]


state 66

    (45) expression -> expression DIFFERENT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    SEMICOLON       reduce using rule 45 (expression -> expression DIFFERENT expression .)
    RPAREN          reduce using rule 45 (expression -> expression DIFFERENT expression .)
    TO              reduce using rule 45 (expression -> expression DIFFERENT expression .)
    RSQUARE         reduce using rule 45 (expression -> expression DIFFERENT expression .)
    COLON           reduce using rule 45 (expression -> expression DIFFERENT expression .)
    SEPARATOR       reduce using rule 45 (expression -> expression DIFFERENT expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! PLUS            [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! EXPONENT        [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! REMAINDER       [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR        [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR        [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]


state 67

    (7) statement -> WHILE LPAREN comparison . RPAREN NEXT block END

    RPAREN          shift and go to state 93


state 68

    (8) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 69

    (9) statement -> VARIABLE EQUALS expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 95
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 70

    (10) statement -> VARIABLE EQUALS ADDRESS . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 96


state 71

    (12) statement -> VARIABLE LSQUARE expression . RSQUARE EQUALS expression SEMICOLON
    (49) expression -> VARIABLE LSQUARE expression . RSQUARE
    (50) expression -> VARIABLE LSQUARE expression . COLON expression RSQUARE
    (52) expression -> VARIABLE LSQUARE expression . COLON RSQUARE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 97
    COLON           shift and go to state 98
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 72

    (51) expression -> VARIABLE LSQUARE COLON . expression RSQUARE
    (53) expression -> VARIABLE LSQUARE COLON . RSQUARE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    RSQUARE         shift and go to state 100
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 99

state 73

    (23) argument -> VARIABLE .
    (49) expression -> VARIABLE . LSQUARE expression RSQUARE
    (50) expression -> VARIABLE . LSQUARE expression COLON expression RSQUARE
    (51) expression -> VARIABLE . LSQUARE COLON expression RSQUARE
    (52) expression -> VARIABLE . LSQUARE expression COLON RSQUARE
    (53) expression -> VARIABLE . LSQUARE COLON RSQUARE
    (56) expression -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 23 (argument -> VARIABLE .)
  ! reduce/reduce conflict for SEPARATOR resolved using rule 23 (argument -> VARIABLE .)
    RPAREN          reduce using rule 23 (argument -> VARIABLE .)
    SEPARATOR       reduce using rule 23 (argument -> VARIABLE .)
    LSQUARE         shift and go to state 53
    PLUS            reduce using rule 56 (expression -> VARIABLE .)
    MINUS           reduce using rule 56 (expression -> VARIABLE .)
    TIMES           reduce using rule 56 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 56 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 56 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 56 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 56 (expression -> VARIABLE .)

  ! RPAREN          [ reduce using rule 56 (expression -> VARIABLE .) ]
  ! SEPARATOR       [ reduce using rule 56 (expression -> VARIABLE .) ]


state 74

    (20) statement -> VARIABLE LPAREN argument . RPAREN SEMICOLON
    (22) argument -> argument . SEPARATOR VARIABLE
    (24) argument -> argument . SEPARATOR expression

    RPAREN          shift and go to state 101
    SEPARATOR       shift and go to state 102


state 75

    (21) statement -> VARIABLE LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 103


state 76

    (25) argument -> expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RPAREN          reduce using rule 25 (argument -> expression .)
    SEPARATOR       reduce using rule 25 (argument -> expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 77

    (11) statement -> ADDRESS VARIABLE EQUALS . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 104

state 78

    (13) statement -> ADDRESS VARIABLE LSQUARE . expression RSQUARE EQUALS expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 105

state 79

    (14) statement -> VAR VARIABLE EQUALS . expression SEMICOLON
    (15) statement -> VAR VARIABLE EQUALS . ADDRESS VARIABLE SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    ADDRESS         shift and go to state 107
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 106

state 80

    (16) statement -> CONST VARIABLE EQUALS . expression SEMICOLON
    (17) statement -> CONST VARIABLE EQUALS . ADDRESS VARIABLE SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    ADDRESS         shift and go to state 109
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 108

state 81

    (18) statement -> DEF VARIABLE LPAREN . argument RPAREN DO block END
    (19) statement -> DEF VARIABLE LPAREN . RPAREN DO block END
    (22) argument -> . argument SEPARATOR VARIABLE
    (23) argument -> . VARIABLE
    (24) argument -> . argument SEPARATOR expression
    (25) argument -> . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    RPAREN          shift and go to state 111
    VARIABLE        shift and go to state 73
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    argument                       shift and go to state 110
    expression                     shift and go to state 76

state 82

    (26) statement -> DELETE VARIABLE SEMICOLON .

    IF              reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    FOR             reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    PRINT           reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    ADDRESS         reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    VAR             reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    CONST           reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    DEF             reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    DELETE          reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    MINUS           reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    TYPEOF          reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    STRING          reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    $end            reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    END             reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)
    ELSE            reduce using rule 26 (statement -> DELETE VARIABLE SEMICOLON .)


state 83

    (48) expression -> TYPEOF LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 112


state 84

    (4) statement -> IF LPAREN comparison RPAREN . THEN block END
    (5) statement -> IF LPAREN comparison RPAREN . THEN block ELSE block END

    THEN            shift and go to state 113


state 85

    (28) comparison -> expression INFERIOR . expression
    (40) expression -> expression INFERIOR . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 114

state 86

    (29) comparison -> expression INFERIOR_OR_EQUAL . expression
    (41) expression -> expression INFERIOR_OR_EQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 115

state 87

    (30) comparison -> expression SUPERIOR . expression
    (42) expression -> expression SUPERIOR . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 116

state 88

    (31) comparison -> expression SUPERIOR_OR_EQUAL . expression
    (43) expression -> expression SUPERIOR_OR_EQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 117

state 89

    (32) comparison -> expression DOUBLE_EQUALS . expression
    (44) expression -> expression DOUBLE_EQUALS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 118

state 90

    (33) comparison -> expression DIFFERENT . expression
    (45) expression -> expression DIFFERENT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 119

state 91

    (49) expression -> VARIABLE LSQUARE expression . RSQUARE
    (50) expression -> VARIABLE LSQUARE expression . COLON expression RSQUARE
    (52) expression -> VARIABLE LSQUARE expression . COLON RSQUARE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 120
    COLON           shift and go to state 98
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 92

    (6) statement -> FOR LPAREN expression TO . expression RPAREN NEXT block END
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 121

state 93

    (7) statement -> WHILE LPAREN comparison RPAREN . NEXT block END

    NEXT            shift and go to state 122


state 94

    (8) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 123


state 95

    (9) statement -> VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    CONST           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    DELETE          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 9 (statement -> VARIABLE EQUALS expression SEMICOLON .)


state 96

    (10) statement -> VARIABLE EQUALS ADDRESS VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 124


state 97

    (12) statement -> VARIABLE LSQUARE expression RSQUARE . EQUALS expression SEMICOLON
    (49) expression -> VARIABLE LSQUARE expression RSQUARE .

    EQUALS          shift and go to state 125
    SEMICOLON       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TIMES           reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    EXPONENT        reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    REMAINDER       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR        reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR        reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIFFERENT       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)


state 98

    (50) expression -> VARIABLE LSQUARE expression COLON . expression RSQUARE
    (52) expression -> VARIABLE LSQUARE expression COLON . RSQUARE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    RSQUARE         shift and go to state 127
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 126

state 99

    (51) expression -> VARIABLE LSQUARE COLON expression . RSQUARE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 128
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 100

    (53) expression -> VARIABLE LSQUARE COLON RSQUARE .

    SEMICOLON       reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    PLUS            reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    MINUS           reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    TIMES           reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    DIVIDE          reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    EXPONENT        reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    REMAINDER       reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    INFERIOR        reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    SUPERIOR        reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    DIFFERENT       reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    RPAREN          reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    TO              reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    RSQUARE         reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    COLON           reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)
    SEPARATOR       reduce using rule 53 (expression -> VARIABLE LSQUARE COLON RSQUARE .)


state 101

    (20) statement -> VARIABLE LPAREN argument RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 129


state 102

    (22) argument -> argument SEPARATOR . VARIABLE
    (24) argument -> argument SEPARATOR . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    VARIABLE        shift and go to state 130
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 131

state 103

    (21) statement -> VARIABLE LPAREN RPAREN SEMICOLON .

    IF              reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    CONST           reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    DEF             reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    DELETE          reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    NUMBER          reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> VARIABLE LPAREN RPAREN SEMICOLON .)


state 104

    (11) statement -> ADDRESS VARIABLE EQUALS expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 132
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 105

    (13) statement -> ADDRESS VARIABLE LSQUARE expression . RSQUARE EQUALS expression SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 133
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 106

    (14) statement -> VAR VARIABLE EQUALS expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 134
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 107

    (15) statement -> VAR VARIABLE EQUALS ADDRESS . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 135


state 108

    (16) statement -> CONST VARIABLE EQUALS expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 136
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 109

    (17) statement -> CONST VARIABLE EQUALS ADDRESS . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 137


state 110

    (18) statement -> DEF VARIABLE LPAREN argument . RPAREN DO block END
    (22) argument -> argument . SEPARATOR VARIABLE
    (24) argument -> argument . SEPARATOR expression

    RPAREN          shift and go to state 138
    SEPARATOR       shift and go to state 102


state 111

    (19) statement -> DEF VARIABLE LPAREN RPAREN . DO block END

    DO              shift and go to state 139


state 112

    (48) expression -> TYPEOF LPAREN VARIABLE RPAREN .

    SEMICOLON       reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    TIMES           reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    EXPONENT        reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    REMAINDER       reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    INFERIOR        reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    INFERIOR_OR_EQUAL reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    SUPERIOR        reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    SUPERIOR_OR_EQUAL reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    DOUBLE_EQUALS   reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    DIFFERENT       reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    TO              reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    RSQUARE         reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    COLON           reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)
    SEPARATOR       reduce using rule 48 (expression -> TYPEOF LPAREN VARIABLE RPAREN .)


state 113

    (4) statement -> IF LPAREN comparison RPAREN THEN . block END
    (5) statement -> IF LPAREN comparison RPAREN THEN . block ELSE block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    block                          shift and go to state 140
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 114

    (28) comparison -> expression INFERIOR expression .
    (40) expression -> expression INFERIOR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 28 (comparison -> expression INFERIOR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! INFERIOR        [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 40 (expression -> expression INFERIOR expression .) ]


state 115

    (29) comparison -> expression INFERIOR_OR_EQUAL expression .
    (41) expression -> expression INFERIOR_OR_EQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 29 (comparison -> expression INFERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! INFERIOR        [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 41 (expression -> expression INFERIOR_OR_EQUAL expression .) ]


state 116

    (30) comparison -> expression SUPERIOR expression .
    (42) expression -> expression SUPERIOR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 30 (comparison -> expression SUPERIOR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! INFERIOR        [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR        [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! DIFFERENT       [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! EXPONENT        [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]
  ! REMAINDER       [ reduce using rule 42 (expression -> expression SUPERIOR expression .) ]


state 117

    (31) comparison -> expression SUPERIOR_OR_EQUAL expression .
    (43) expression -> expression SUPERIOR_OR_EQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 31 (comparison -> expression SUPERIOR_OR_EQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! INFERIOR        [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR        [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]
  ! REMAINDER       [ reduce using rule 43 (expression -> expression SUPERIOR_OR_EQUAL expression .) ]


state 118

    (32) comparison -> expression DOUBLE_EQUALS expression .
    (44) expression -> expression DOUBLE_EQUALS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 32 (comparison -> expression DOUBLE_EQUALS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! INFERIOR        [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR        [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! EXPONENT        [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]
  ! REMAINDER       [ reduce using rule 44 (expression -> expression DOUBLE_EQUALS expression .) ]


state 119

    (33) comparison -> expression DIFFERENT expression .
    (45) expression -> expression DIFFERENT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXPONENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for INFERIOR resolved as shift
  ! shift/reduce conflict for INFERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SUPERIOR resolved as shift
  ! shift/reduce conflict for SUPERIOR_OR_EQUAL resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
    RPAREN          reduce using rule 33 (comparison -> expression DIFFERENT expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37

  ! INFERIOR        [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! INFERIOR_OR_EQUAL [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR        [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! SUPERIOR_OR_EQUAL [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! EXPONENT        [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]
  ! REMAINDER       [ reduce using rule 45 (expression -> expression DIFFERENT expression .) ]


state 120

    (49) expression -> VARIABLE LSQUARE expression RSQUARE .

    RPAREN          reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TIMES           reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    EXPONENT        reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    REMAINDER       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR        reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR        reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    DIFFERENT       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SEMICOLON       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    TO              reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    COLON           reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)
    SEPARATOR       reduce using rule 49 (expression -> VARIABLE LSQUARE expression RSQUARE .)


state 121

    (6) statement -> FOR LPAREN expression TO expression . RPAREN NEXT block END
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RPAREN          shift and go to state 141
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 122

    (7) statement -> WHILE LPAREN comparison RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    block                          shift and go to state 142
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 123

    (8) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    IF              reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    CONST           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DEF             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DELETE          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 8 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 124

    (10) statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .

    IF              reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    FOR             reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    WHILE           reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    PRINT           reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    ADDRESS         reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    VAR             reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    CONST           reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    DEF             reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    DELETE          reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    MINUS           reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    TYPEOF          reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    STRING          reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    $end            reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    END             reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    ELSE            reduce using rule 10 (statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)


state 125

    (12) statement -> VARIABLE LSQUARE expression RSQUARE EQUALS . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 143

state 126

    (50) expression -> VARIABLE LSQUARE expression COLON expression . RSQUARE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RSQUARE         shift and go to state 144
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 127

    (52) expression -> VARIABLE LSQUARE expression COLON RSQUARE .

    SEMICOLON       reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    PLUS            reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    MINUS           reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    TIMES           reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    DIVIDE          reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    EXPONENT        reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    REMAINDER       reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    INFERIOR        reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    SUPERIOR        reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    DIFFERENT       reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    RPAREN          reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    TO              reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    RSQUARE         reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    COLON           reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)
    SEPARATOR       reduce using rule 52 (expression -> VARIABLE LSQUARE expression COLON RSQUARE .)


state 128

    (51) expression -> VARIABLE LSQUARE COLON expression RSQUARE .

    SEMICOLON       reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    PLUS            reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    MINUS           reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    TIMES           reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    DIVIDE          reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    EXPONENT        reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    REMAINDER       reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    INFERIOR        reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    SUPERIOR        reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    DIFFERENT       reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    RPAREN          reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    TO              reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    RSQUARE         reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    COLON           reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)
    SEPARATOR       reduce using rule 51 (expression -> VARIABLE LSQUARE COLON expression RSQUARE .)


state 129

    (20) statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .

    IF              reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    FOR             reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    PRINT           reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    VARIABLE        reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    ADDRESS         reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    VAR             reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    CONST           reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    DEF             reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    DELETE          reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    MINUS           reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    LPAREN          reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    TYPEOF          reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    NUMBER          reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    STRING          reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    $end            reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    END             reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)
    ELSE            reduce using rule 20 (statement -> VARIABLE LPAREN argument RPAREN SEMICOLON .)


state 130

    (22) argument -> argument SEPARATOR VARIABLE .
    (49) expression -> VARIABLE . LSQUARE expression RSQUARE
    (50) expression -> VARIABLE . LSQUARE expression COLON expression RSQUARE
    (51) expression -> VARIABLE . LSQUARE COLON expression RSQUARE
    (52) expression -> VARIABLE . LSQUARE expression COLON RSQUARE
    (53) expression -> VARIABLE . LSQUARE COLON RSQUARE
    (56) expression -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 22 (argument -> argument SEPARATOR VARIABLE .)
  ! reduce/reduce conflict for SEPARATOR resolved using rule 22 (argument -> argument SEPARATOR VARIABLE .)
    RPAREN          reduce using rule 22 (argument -> argument SEPARATOR VARIABLE .)
    SEPARATOR       reduce using rule 22 (argument -> argument SEPARATOR VARIABLE .)
    LSQUARE         shift and go to state 53
    PLUS            reduce using rule 56 (expression -> VARIABLE .)
    MINUS           reduce using rule 56 (expression -> VARIABLE .)
    TIMES           reduce using rule 56 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 56 (expression -> VARIABLE .)
    EXPONENT        reduce using rule 56 (expression -> VARIABLE .)
    REMAINDER       reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR        reduce using rule 56 (expression -> VARIABLE .)
    INFERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR        reduce using rule 56 (expression -> VARIABLE .)
    SUPERIOR_OR_EQUAL reduce using rule 56 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 56 (expression -> VARIABLE .)
    DIFFERENT       reduce using rule 56 (expression -> VARIABLE .)

  ! RPAREN          [ reduce using rule 56 (expression -> VARIABLE .) ]
  ! SEPARATOR       [ reduce using rule 56 (expression -> VARIABLE .) ]


state 131

    (24) argument -> argument SEPARATOR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    RPAREN          reduce using rule 24 (argument -> argument SEPARATOR expression .)
    SEPARATOR       reduce using rule 24 (argument -> argument SEPARATOR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 132

    (11) statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    CONST           reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    DELETE          reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 11 (statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON .)


state 133

    (13) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 145


state 134

    (14) statement -> VAR VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    CONST           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    DELETE          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 14 (statement -> VAR VARIABLE EQUALS expression SEMICOLON .)


state 135

    (15) statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 146


state 136

    (16) statement -> CONST VARIABLE EQUALS expression SEMICOLON .

    IF              reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    CONST           reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    DELETE          reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    END             reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 16 (statement -> CONST VARIABLE EQUALS expression SEMICOLON .)


state 137

    (17) statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 147


state 138

    (18) statement -> DEF VARIABLE LPAREN argument RPAREN . DO block END

    DO              shift and go to state 148


state 139

    (19) statement -> DEF VARIABLE LPAREN RPAREN DO . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    block                          shift and go to state 149
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 140

    (4) statement -> IF LPAREN comparison RPAREN THEN block . END
    (5) statement -> IF LPAREN comparison RPAREN THEN block . ELSE block END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    END             shift and go to state 150
    ELSE            shift and go to state 151
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 20
    expression                     shift and go to state 7

state 141

    (6) statement -> FOR LPAREN expression TO expression RPAREN . NEXT block END

    NEXT            shift and go to state 152


state 142

    (7) statement -> WHILE LPAREN comparison RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    END             shift and go to state 153
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 20
    expression                     shift and go to state 7

state 143

    (12) statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 154
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 144

    (50) expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .

    SEMICOLON       reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    PLUS            reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    MINUS           reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    TIMES           reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    DIVIDE          reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    EXPONENT        reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    REMAINDER       reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    INFERIOR        reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    INFERIOR_OR_EQUAL reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    SUPERIOR        reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    SUPERIOR_OR_EQUAL reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    DOUBLE_EQUALS   reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    DIFFERENT       reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    RPAREN          reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    TO              reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    RSQUARE         reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    COLON           reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)
    SEPARATOR       reduce using rule 50 (expression -> VARIABLE LSQUARE expression COLON expression RSQUARE .)


state 145

    (13) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    VARIABLE        shift and go to state 23
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 155

state 146

    (15) statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .

    IF              reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    FOR             reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    PRINT           reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    ADDRESS         reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    VAR             reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    CONST           reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    DEF             reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    DELETE          reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    MINUS           reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    TYPEOF          reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    STRING          reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    $end            reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    END             reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    ELSE            reduce using rule 15 (statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)


state 147

    (17) statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .

    IF              reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    FOR             reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    PRINT           reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    VARIABLE        reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    ADDRESS         reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    VAR             reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    CONST           reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    DEF             reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    DELETE          reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    MINUS           reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    LPAREN          reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    TYPEOF          reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    NUMBER          reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    STRING          reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    $end            reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    END             reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)
    ELSE            reduce using rule 17 (statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON .)


state 148

    (18) statement -> DEF VARIABLE LPAREN argument RPAREN DO . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    block                          shift and go to state 156
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 149

    (19) statement -> DEF VARIABLE LPAREN RPAREN DO block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    END             shift and go to state 157
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 20
    expression                     shift and go to state 7

state 150

    (4) statement -> IF LPAREN comparison RPAREN THEN block END .

    IF              reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    FOR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    WHILE           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    PRINT           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    VARIABLE        reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    ADDRESS         reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    VAR             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    CONST           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    DEF             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    DELETE          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    MINUS           reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    LPAREN          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    TYPEOF          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    NUMBER          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    STRING          reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    $end            reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    END             reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)
    ELSE            reduce using rule 4 (statement -> IF LPAREN comparison RPAREN THEN block END .)


state 151

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    block                          shift and go to state 158
    statement                      shift and go to state 3
    expression                     shift and go to state 7

state 152

    (6) statement -> FOR LPAREN expression TO expression RPAREN NEXT . block END
    (2) block -> . block statement
    (3) block -> . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 7
    block                          shift and go to state 159
    statement                      shift and go to state 3

state 153

    (7) statement -> WHILE LPAREN comparison RPAREN NEXT block END .

    IF              reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    PRINT           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    VARIABLE        reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    ADDRESS         reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    VAR             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    CONST           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    DEF             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    DELETE          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    MINUS           reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    LPAREN          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    TYPEOF          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    NUMBER          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    STRING          reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    $end            reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    END             reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)
    ELSE            reduce using rule 7 (statement -> WHILE LPAREN comparison RPAREN NEXT block END .)


state 154

    (12) statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .

    IF              reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    CONST           reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    DELETE          reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    END             reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 12 (statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)


state 155

    (13) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . EXPONENT expression
    (39) expression -> expression . REMAINDER expression
    (40) expression -> expression . INFERIOR expression
    (41) expression -> expression . INFERIOR_OR_EQUAL expression
    (42) expression -> expression . SUPERIOR expression
    (43) expression -> expression . SUPERIOR_OR_EQUAL expression
    (44) expression -> expression . DOUBLE_EQUALS expression
    (45) expression -> expression . DIFFERENT expression

    SEMICOLON       shift and go to state 160
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EXPONENT        shift and go to state 30
    REMAINDER       shift and go to state 31
    INFERIOR        shift and go to state 32
    INFERIOR_OR_EQUAL shift and go to state 33
    SUPERIOR        shift and go to state 34
    SUPERIOR_OR_EQUAL shift and go to state 35
    DOUBLE_EQUALS   shift and go to state 36
    DIFFERENT       shift and go to state 37


state 156

    (18) statement -> DEF VARIABLE LPAREN argument RPAREN DO block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    END             shift and go to state 161
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 20
    expression                     shift and go to state 7

state 157

    (19) statement -> DEF VARIABLE LPAREN RPAREN DO block END .

    IF              reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    FOR             reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    WHILE           reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    PRINT           reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    VARIABLE        reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    ADDRESS         reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    VAR             reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    CONST           reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    DEF             reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    DELETE          reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    MINUS           reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    LPAREN          reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    TYPEOF          reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    NUMBER          reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    STRING          reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    $end            reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    END             reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)
    ELSE            reduce using rule 19 (statement -> DEF VARIABLE LPAREN RPAREN DO block END .)


state 158

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    END             shift and go to state 162
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 20
    expression                     shift and go to state 7

state 159

    (6) statement -> FOR LPAREN expression TO expression RPAREN NEXT block . END
    (2) block -> block . statement
    (4) statement -> . IF LPAREN comparison RPAREN THEN block END
    (5) statement -> . IF LPAREN comparison RPAREN THEN block ELSE block END
    (6) statement -> . FOR LPAREN expression TO expression RPAREN NEXT block END
    (7) statement -> . WHILE LPAREN comparison RPAREN NEXT block END
    (8) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (9) statement -> . VARIABLE EQUALS expression SEMICOLON
    (10) statement -> . VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (11) statement -> . ADDRESS VARIABLE EQUALS expression SEMICOLON
    (12) statement -> . VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (13) statement -> . ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON
    (14) statement -> . VAR VARIABLE EQUALS expression SEMICOLON
    (15) statement -> . VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (16) statement -> . CONST VARIABLE EQUALS expression SEMICOLON
    (17) statement -> . CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON
    (18) statement -> . DEF VARIABLE LPAREN argument RPAREN DO block END
    (19) statement -> . DEF VARIABLE LPAREN RPAREN DO block END
    (20) statement -> . VARIABLE LPAREN argument RPAREN SEMICOLON
    (21) statement -> . VARIABLE LPAREN RPAREN SEMICOLON
    (26) statement -> . DELETE VARIABLE SEMICOLON
    (27) statement -> . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression EXPONENT expression
    (39) expression -> . expression REMAINDER expression
    (40) expression -> . expression INFERIOR expression
    (41) expression -> . expression INFERIOR_OR_EQUAL expression
    (42) expression -> . expression SUPERIOR expression
    (43) expression -> . expression SUPERIOR_OR_EQUAL expression
    (44) expression -> . expression DOUBLE_EQUALS expression
    (45) expression -> . expression DIFFERENT expression
    (46) expression -> . MINUS expression
    (47) expression -> . LPAREN expression RPAREN
    (48) expression -> . TYPEOF LPAREN VARIABLE RPAREN
    (49) expression -> . VARIABLE LSQUARE expression RSQUARE
    (50) expression -> . VARIABLE LSQUARE expression COLON expression RSQUARE
    (51) expression -> . VARIABLE LSQUARE COLON expression RSQUARE
    (52) expression -> . VARIABLE LSQUARE expression COLON RSQUARE
    (53) expression -> . VARIABLE LSQUARE COLON RSQUARE
    (54) expression -> . NUMBER
    (55) expression -> . STRING
    (56) expression -> . VARIABLE

    END             shift and go to state 163
    IF              shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    VARIABLE        shift and go to state 10
    ADDRESS         shift and go to state 11
    VAR             shift and go to state 12
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    DELETE          shift and go to state 15
    MINUS           shift and go to state 16
    LPAREN          shift and go to state 5
    TYPEOF          shift and go to state 17
    NUMBER          shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 7
    statement                      shift and go to state 20

state 160

    (13) statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .

    IF              reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    FOR             reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ADDRESS         reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    VAR             reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    CONST           reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    DEF             reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    DELETE          reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    TYPEOF          reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    $end            reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    END             reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON .)


state 161

    (18) statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .

    IF              reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    FOR             reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    WHILE           reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    PRINT           reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    VARIABLE        reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    ADDRESS         reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    VAR             reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    CONST           reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    DEF             reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    DELETE          reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    MINUS           reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    LPAREN          reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    TYPEOF          reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    NUMBER          reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    STRING          reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    $end            reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    END             reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)
    ELSE            reduce using rule 18 (statement -> DEF VARIABLE LPAREN argument RPAREN DO block END .)


state 162

    (5) statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .

    IF              reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    FOR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    PRINT           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    VARIABLE        reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    ADDRESS         reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    VAR             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    CONST           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    DEF             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    DELETE          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    MINUS           reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    LPAREN          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    TYPEOF          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    NUMBER          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    STRING          reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    $end            reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    END             reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)
    ELSE            reduce using rule 5 (statement -> IF LPAREN comparison RPAREN THEN block ELSE block END .)


state 163

    (6) statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .

    IF              reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    FOR             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    WHILE           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    PRINT           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    VARIABLE        reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    ADDRESS         reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    VAR             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    CONST           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    DEF             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    DELETE          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    MINUS           reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    LPAREN          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    TYPEOF          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    NUMBER          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    STRING          reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    $end            reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    END             reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)
    ELSE            reduce using rule 6 (statement -> FOR LPAREN expression TO expression RPAREN NEXT block END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 61 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 61 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 61 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 61 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 62 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 62 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 62 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 62 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 63 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 63 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 63 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 63 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 64 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 64 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 64 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 64 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 65 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 65 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 65 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 65 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 66 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 66 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 66 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 66 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 114 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 114 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 114 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 114 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 114 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 114 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 115 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 115 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 115 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 115 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 115 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 115 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 116 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 116 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 116 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 116 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 116 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 116 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 116 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 117 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 117 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 117 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 117 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 117 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 118 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 118 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 118 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 118 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 119 resolved as shift
WARNING: shift/reduce conflict for EXPONENT in state 119 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 119 resolved as shift
WARNING: shift/reduce conflict for INFERIOR in state 119 resolved as shift
WARNING: shift/reduce conflict for INFERIOR_OR_EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR in state 119 resolved as shift
WARNING: shift/reduce conflict for SUPERIOR_OR_EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 119 resolved as shift
WARNING: reduce/reduce conflict in state 73 resolved using rule (argument -> VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 73
WARNING: reduce/reduce conflict in state 130 resolved using rule (argument -> argument SEPARATOR VARIABLE)
WARNING: rejected rule (expression -> VARIABLE) in state 130
