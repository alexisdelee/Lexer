
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEREMAINDERrightUMINUSleftEXPONENTADDRESS COLON DEF DIFFERENT DIVIDE DO DOUBLE_EQUALS ELSE END EQUALS EXPONENT FOR IF INFERIOR INFERIOR_OR_EQUAL LPAREN LSQUARE MINUS NEXT NUMBER PLUS PRINT PTR QUOTE REMAINDER RPAREN RSQUARE SEMICOLON SEPARATOR STRING SUPERIOR SUPERIOR_OR_EQUAL THEN TIMES TO VAR VARIABLE WHILEscope : blockblock : block statement\n             | statementstatement : IF LPAREN comparison RPAREN THEN block END\n                 | IF LPAREN comparison RPAREN THEN block ELSE block ENDstatement : FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END\n                 | FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END\n                 | FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END\n                 | FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block ENDstatement : WHILE LPAREN comparison RPAREN NEXT block ENDstatement : PRINT LPAREN expression RPAREN SEMICOLONstatement : VARIABLE EQUALS expression SEMICOLONstatement : ADDRESS VARIABLE EQUALS expression SEMICOLONstatement : VAR VARIABLE EQUALS expression SEMICOLONstatement : PTR VARIABLE EQUALS VARIABLE SEMICOLONstatement : DEF VARIABLE LPAREN RPAREN DO block ENDstatement : VARIABLE LPAREN RPAREN SEMICOLONarguments : argument SEPARATOR argument\n                 | argumentargument : VARIABLE EQUALS expression\n                | VARIABLEstatement : expression SEMICOLONcomparison : expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENT expression\n                  | expression REMAINDER expression\n                  | expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : VARIABLE LSQUARE expression RSQUAREexpression : VARIABLE LSQUARE expression COLON expression RSQUARE\n                  | VARIABLE LSQUARE COLON expression RSQUARE\n                  | VARIABLE LSQUARE expression COLON RSQUARE\n                  | VARIABLE LSQUARE COLON RSQUAREexpression : NUMBERexpression : STRINGexpression : VARIABLE'
    
_lr_action_items = {'IF':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[4,4,-3,-2,-22,-12,-17,4,4,-11,-13,-14,-15,4,4,4,4,-4,4,4,4,4,4,-10,-16,4,4,4,4,4,-5,-6,-7,-9,-8,]),'FOR':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[6,6,-3,-2,-22,-12,-17,6,6,-11,-13,-14,-15,6,6,6,6,-4,6,6,6,6,6,-10,-16,6,6,6,6,6,-5,-6,-7,-9,-8,]),'WHILE':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[9,9,-3,-2,-22,-12,-17,9,9,-11,-13,-14,-15,9,9,9,9,-4,9,9,9,9,9,-10,-16,9,9,9,9,9,-5,-6,-7,-9,-8,]),'PRINT':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[10,10,-3,-2,-22,-12,-17,10,10,-11,-13,-14,-15,10,10,10,10,-4,10,10,10,10,10,-10,-16,10,10,10,10,10,-5,-6,-7,-9,-8,]),'VARIABLE':([0,2,3,5,12,13,14,15,16,18,19,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,54,69,70,71,74,75,76,77,78,79,80,81,82,83,85,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[8,8,-3,21,41,42,43,44,21,-2,21,50,21,21,21,21,-22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,92,21,21,21,21,21,21,102,103,-12,-17,21,8,8,-11,-13,-14,-15,8,8,8,8,-4,8,8,8,8,8,-10,-16,8,8,8,8,8,-5,-6,-7,-9,-8,]),'ADDRESS':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[12,12,-3,-2,-22,-12,-17,12,12,-11,-13,-14,-15,12,12,12,12,-4,12,12,12,12,12,-10,-16,12,12,12,12,12,-5,-6,-7,-9,-8,]),'VAR':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[13,13,-3,-2,-22,-12,-17,13,13,-11,-13,-14,-15,13,13,13,13,-4,13,13,13,13,13,-10,-16,13,13,13,13,13,-5,-6,-7,-9,-8,]),'PTR':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[14,14,-3,-2,-22,-12,-17,14,14,-11,-13,-14,-15,14,14,14,14,-4,14,14,14,14,14,-10,-16,14,14,14,14,14,-5,-6,-7,-9,-8,]),'DEF':([0,2,3,18,28,82,83,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[15,15,-3,-2,-22,-12,-17,15,15,-11,-13,-14,-15,15,15,15,15,-4,15,15,15,15,15,-10,-16,15,15,15,15,15,-5,-6,-7,-9,-8,]),'MINUS':([0,2,3,5,7,8,11,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,47,48,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,77,78,79,82,83,84,85,86,87,90,91,94,95,96,97,98,99,100,105,106,107,108,109,110,111,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[16,16,-3,16,-48,-50,30,16,-49,-2,16,30,-50,16,16,16,16,-22,16,16,16,16,16,16,16,16,16,16,16,16,-41,30,-42,30,30,16,30,-29,-30,-31,-32,-33,-34,30,30,30,30,30,30,16,16,16,16,16,16,16,16,-12,-17,-43,16,30,-47,30,30,16,30,30,30,30,30,30,30,-46,-45,16,-11,-13,-14,-15,16,16,-44,16,16,-4,16,16,16,16,16,-10,-16,16,16,16,16,16,-5,-6,-7,-9,-8,]),'LPAREN':([0,2,3,4,5,6,8,9,10,16,18,19,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,54,69,70,74,75,76,77,78,79,82,83,85,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[5,5,-3,19,5,22,24,26,27,5,-2,5,5,5,5,5,-22,5,5,5,5,5,5,5,5,5,5,5,5,72,5,5,5,5,5,5,5,5,5,-12,-17,5,5,5,-11,-13,-14,-15,5,5,5,5,-4,5,5,5,5,5,-10,-16,5,5,5,5,5,-5,-6,-7,-9,-8,]),'NUMBER':([0,2,3,5,16,18,19,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,54,69,70,74,75,76,77,78,79,80,81,82,83,85,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[7,7,-3,7,7,-2,7,49,7,7,7,7,-22,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,101,104,-12,-17,7,7,7,-11,-13,-14,-15,7,7,7,7,-4,7,7,7,7,7,-10,-16,7,7,7,7,7,-5,-6,-7,-9,-8,]),'STRING':([0,2,3,5,16,18,19,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,54,69,70,74,75,76,77,78,79,82,83,85,94,108,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,],[17,17,-3,17,17,-2,17,17,17,17,17,-22,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-12,-17,17,17,17,-11,-13,-14,-15,17,17,17,17,-4,17,17,17,17,17,-10,-16,17,17,17,17,17,-5,-6,-7,-9,-8,]),'$end':([1,2,3,18,28,82,83,109,110,111,112,122,128,129,135,136,137,138,139,],[0,-1,-3,-2,-22,-12,-17,-11,-13,-14,-15,-4,-10,-16,-5,-6,-7,-9,-8,]),'END':([3,18,28,82,83,109,110,111,112,114,120,121,122,128,129,130,131,132,133,134,135,136,137,138,139,],[-3,-2,-22,-12,-17,-11,-13,-14,-15,122,128,129,-4,-10,-16,135,136,137,138,139,-5,-6,-7,-9,-8,]),'ELSE':([3,18,28,82,83,109,110,111,112,114,122,128,129,135,136,137,138,139,],[-3,-2,-22,-12,-17,-11,-13,-14,-15,123,-4,-10,-16,-5,-6,-7,-9,-8,]),'SEMICOLON':([7,8,11,17,21,45,48,51,52,57,58,59,60,61,62,63,64,65,66,67,68,84,87,89,90,91,92,106,107,119,],[-48,-50,28,-49,-50,-41,-42,82,83,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-43,-47,109,110,111,112,-46,-45,-44,]),'PLUS':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,29,-49,29,-50,-41,29,-42,29,29,29,-29,-30,-31,-32,-33,-34,29,29,29,29,29,29,-43,29,-47,29,29,29,29,29,29,29,29,29,-46,-45,-44,]),'TIMES':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,31,-49,31,-50,-41,31,-42,31,31,31,31,31,-31,-32,-33,-34,31,31,31,31,31,31,-43,31,-47,31,31,31,31,31,31,31,31,31,-46,-45,-44,]),'DIVIDE':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,32,-49,32,-50,-41,32,-42,32,32,32,32,32,-31,-32,-33,-34,32,32,32,32,32,32,-43,32,-47,32,32,32,32,32,32,32,32,32,-46,-45,-44,]),'EXPONENT':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,33,-49,33,-50,33,33,-42,33,33,33,33,33,33,33,-33,33,33,33,33,33,33,33,-43,33,-47,33,33,33,33,33,33,33,33,33,-46,-45,-44,]),'REMAINDER':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,34,-49,34,-50,-41,34,-42,34,34,34,34,34,-31,-32,-33,-34,34,34,34,34,34,34,-43,34,-47,34,34,34,34,34,34,34,34,34,-46,-45,-44,]),'INFERIOR':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,35,-49,35,-50,-41,74,-42,35,35,35,-29,-30,-31,-32,-33,-34,35,35,35,35,35,35,-43,35,-47,35,35,35,35,35,35,35,35,35,-46,-45,-44,]),'INFERIOR_OR_EQUAL':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,36,-49,36,-50,-41,75,-42,36,36,36,-29,-30,-31,-32,-33,-34,36,36,36,36,36,36,-43,36,-47,36,36,36,36,36,36,36,36,36,-46,-45,-44,]),'SUPERIOR':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,37,-49,37,-50,-41,76,-42,37,37,37,-29,-30,-31,-32,-33,-34,37,37,37,37,37,37,-43,37,-47,37,37,37,37,37,37,37,37,37,-46,-45,-44,]),'SUPERIOR_OR_EQUAL':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,38,-49,38,-50,-41,77,-42,38,38,38,-29,-30,-31,-32,-33,-34,38,38,38,38,38,38,-43,38,-47,38,38,38,38,38,38,38,38,38,-46,-45,-44,]),'DOUBLE_EQUALS':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,39,-49,39,-50,-41,78,-42,39,39,39,-29,-30,-31,-32,-33,-34,39,39,39,39,39,39,-43,39,-47,39,39,39,39,39,39,39,39,39,-46,-45,-44,]),'DIFFERENT':([7,8,11,17,20,21,45,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,84,86,87,90,91,95,96,97,98,99,100,105,106,107,119,],[-48,-50,40,-49,40,-50,-41,79,-42,40,40,40,-29,-30,-31,-32,-33,-34,40,40,40,40,40,40,-43,40,-47,40,40,40,40,40,40,40,40,40,-46,-45,-44,]),'RPAREN':([7,17,20,21,24,45,46,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,84,87,95,96,97,98,99,100,101,102,103,104,106,107,119,],[-48,-49,48,-50,52,-41,73,-42,88,89,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,93,-43,-47,-23,-24,-25,-26,-27,-28,115,116,117,118,-46,-45,-44,]),'RSQUARE':([7,17,21,45,48,53,54,57,58,59,60,61,62,63,64,65,66,67,68,84,85,86,87,105,106,107,119,],[-48,-49,-50,-41,-42,84,87,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-43,106,107,-47,119,-46,-45,-44,]),'COLON':([7,17,21,25,45,48,53,57,58,59,60,61,62,63,64,65,66,67,68,84,87,106,107,119,],[-48,-49,-50,54,-41,-42,85,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-43,-47,-46,-45,-44,]),'EQUALS':([8,41,42,43,],[23,69,70,71,]),'LSQUARE':([8,21,],[25,25,]),'TO':([49,50,],[80,81,]),'THEN':([73,],[94,]),'NEXT':([88,115,116,117,118,],[108,124,125,126,127,]),'DO':([93,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scope':([0,],[1,]),'block':([0,94,108,113,123,124,125,126,127,],[2,114,120,121,130,131,132,133,134,]),'statement':([0,2,94,108,113,114,120,121,123,124,125,126,127,130,131,132,133,134,],[3,18,3,3,3,18,18,18,3,3,3,3,3,18,18,18,18,18,]),'expression':([0,2,5,16,19,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,54,69,70,74,75,76,77,78,79,85,94,108,113,114,120,121,123,124,125,126,127,130,131,132,133,134,],[11,11,20,45,47,51,53,47,56,57,58,59,60,61,62,63,64,65,66,67,68,86,90,91,95,96,97,98,99,100,105,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'comparison':([19,26,],[46,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> scope","S'",1,None,None,None),
  ('scope -> block','scope',1,'p_scope','main.py',157),
  ('block -> block statement','block',2,'p_block','main.py',165),
  ('block -> statement','block',1,'p_block','main.py',166),
  ('statement -> IF LPAREN comparison RPAREN THEN block END','statement',7,'p_statement_condition','main.py',173),
  ('statement -> IF LPAREN comparison RPAREN THEN block ELSE block END','statement',9,'p_statement_condition','main.py',174),
  ('statement -> FOR LPAREN NUMBER TO NUMBER RPAREN NEXT block END','statement',9,'p_statement_for','main.py',181),
  ('statement -> FOR LPAREN NUMBER TO VARIABLE RPAREN NEXT block END','statement',9,'p_statement_for','main.py',182),
  ('statement -> FOR LPAREN VARIABLE TO NUMBER RPAREN NEXT block END','statement',9,'p_statement_for','main.py',183),
  ('statement -> FOR LPAREN VARIABLE TO VARIABLE RPAREN NEXT block END','statement',9,'p_statement_for','main.py',184),
  ('statement -> WHILE LPAREN comparison RPAREN NEXT block END','statement',7,'p_statement_while','main.py',197),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_print','main.py',201),
  ('statement -> VARIABLE EQUALS expression SEMICOLON','statement',4,'p_statement_assign','main.py',205),
  ('statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_assign_pointer','main.py',209),
  ('statement -> VAR VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define','main.py',213),
  ('statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON','statement',5,'p_statement_define_pointer','main.py',217),
  ('statement -> DEF VARIABLE LPAREN RPAREN DO block END','statement',7,'p_statement_define_function','main.py',221),
  ('statement -> VARIABLE LPAREN RPAREN SEMICOLON','statement',4,'p_statement_call_function','main.py',226),
  ('arguments -> argument SEPARATOR argument','arguments',3,'p_statement_arguments','main.py',231),
  ('arguments -> argument','arguments',1,'p_statement_arguments','main.py',232),
  ('argument -> VARIABLE EQUALS expression','argument',3,'p_statement_argument','main.py',242),
  ('argument -> VARIABLE','argument',1,'p_statement_argument','main.py',243),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','main.py',251),
  ('comparison -> expression INFERIOR expression','comparison',3,'p_comparison_binop','main.py',255),
  ('comparison -> expression INFERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',256),
  ('comparison -> expression SUPERIOR expression','comparison',3,'p_comparison_binop','main.py',257),
  ('comparison -> expression SUPERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',258),
  ('comparison -> expression DOUBLE_EQUALS expression','comparison',3,'p_comparison_binop','main.py',259),
  ('comparison -> expression DIFFERENT expression','comparison',3,'p_comparison_binop','main.py',260),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',264),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',265),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',266),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',267),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','main.py',268),
  ('expression -> expression REMAINDER expression','expression',3,'p_expression_binop','main.py',269),
  ('expression -> expression INFERIOR expression','expression',3,'p_expression_binop','main.py',270),
  ('expression -> expression INFERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',271),
  ('expression -> expression SUPERIOR expression','expression',3,'p_expression_binop','main.py',272),
  ('expression -> expression SUPERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',273),
  ('expression -> expression DOUBLE_EQUALS expression','expression',3,'p_expression_binop','main.py',274),
  ('expression -> expression DIFFERENT expression','expression',3,'p_expression_binop','main.py',275),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','main.py',279),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',283),
  ('expression -> VARIABLE LSQUARE expression RSQUARE','expression',4,'p_expression_select','main.py',287),
  ('expression -> VARIABLE LSQUARE expression COLON expression RSQUARE','expression',6,'p_expression_substring','main.py',291),
  ('expression -> VARIABLE LSQUARE COLON expression RSQUARE','expression',5,'p_expression_substring','main.py',292),
  ('expression -> VARIABLE LSQUARE expression COLON RSQUARE','expression',5,'p_expression_substring','main.py',293),
  ('expression -> VARIABLE LSQUARE COLON RSQUARE','expression',4,'p_expression_substring','main.py',294),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',309),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',313),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','main.py',317),
]
