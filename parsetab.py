
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEREMAINDERrightUMINUSleftEXPONENTADDRESS COLON CONST DEF DELETE DIFFERENT DIVIDE DO DOUBLE_EQUALS ELSE END EQUALS EXPONENT FOR IF INFERIOR INFERIOR_OR_EQUAL LPAREN LSQUARE MINUS NEXT NUMBER PLUS PRINT QUOTE REMAINDER RPAREN RSQUARE SEMICOLON SEPARATOR STRING SUPERIOR SUPERIOR_OR_EQUAL THEN TIMES TO TYPEOF VAR VARIABLE WHILEscope : blockblock : block statement\n             | statementstatement : IF LPAREN comparison RPAREN THEN block END\n                 | IF LPAREN comparison RPAREN THEN block ELSE block ENDstatement : FOR LPAREN expression TO expression RPAREN NEXT block ENDstatement : WHILE LPAREN comparison RPAREN NEXT block ENDstatement : PRINT LPAREN expression RPAREN SEMICOLONstatement : VARIABLE EQUALS expression SEMICOLON\n                 | VARIABLE EQUALS ADDRESS VARIABLE SEMICOLONstatement : ADDRESS VARIABLE EQUALS expression SEMICOLONstatement : VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON\n                 | ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLONstatement : VAR VARIABLE EQUALS expression SEMICOLON\n                 | VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLONstatement : CONST VARIABLE EQUALS expression SEMICOLON\n                 | CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLONstatement : DEF VARIABLE LPAREN argument RPAREN DO block END\n                 | DEF VARIABLE LPAREN RPAREN DO block ENDstatement : VARIABLE LPAREN argument RPAREN SEMICOLON\n                 | VARIABLE LPAREN RPAREN SEMICOLONargument : argument SEPARATOR VARIABLE\n                | VARIABLEargument : argument SEPARATOR expression\n                | expressionstatement : DELETE VARIABLE SEMICOLONstatement : expression SEMICOLONcomparison : expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENT expression\n                  | expression REMAINDER expression\n                  | expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : TYPEOF LPAREN VARIABLE RPARENexpression : VARIABLE LSQUARE expression RSQUAREexpression : VARIABLE LSQUARE expression COLON expression RSQUARE\n                  | VARIABLE LSQUARE COLON expression RSQUARE\n                  | VARIABLE LSQUARE expression COLON RSQUARE\n                  | VARIABLE LSQUARE COLON RSQUAREexpression : NUMBERexpression : STRINGexpression : VARIABLE'
    
_lr_action_items = {'IF':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[4,4,-3,-2,-27,-26,-9,-21,4,4,-8,-10,-20,-11,-14,-16,4,4,4,-15,-17,4,4,-4,4,4,-7,-12,4,-19,4,4,-13,-18,-5,-6,]),'FOR':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[6,6,-3,-2,-27,-26,-9,-21,6,6,-8,-10,-20,-11,-14,-16,6,6,6,-15,-17,6,6,-4,6,6,-7,-12,6,-19,6,6,-13,-18,-5,-6,]),'WHILE':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[8,8,-3,-2,-27,-26,-9,-21,8,8,-8,-10,-20,-11,-14,-16,8,8,8,-15,-17,8,8,-4,8,8,-7,-12,8,-19,8,8,-13,-18,-5,-6,]),'PRINT':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[9,9,-3,-2,-27,-26,-9,-21,9,9,-8,-10,-20,-11,-14,-16,9,9,9,-15,-17,9,9,-4,9,9,-7,-12,9,-19,9,9,-13,-18,-5,-6,]),'VARIABLE':([0,2,3,5,11,12,13,14,15,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,53,70,72,77,78,79,80,81,82,85,86,87,88,89,90,92,95,98,102,103,107,109,113,122,123,124,125,129,132,134,136,139,140,142,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[10,10,-3,23,43,44,45,46,47,23,-2,23,23,-27,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,73,83,23,96,23,23,23,23,23,73,-26,23,23,23,23,23,23,23,-9,23,130,-21,135,137,10,10,-8,-10,23,-20,-11,-14,-16,10,10,10,23,-15,-17,10,10,-4,10,10,-7,-12,10,-19,10,10,-13,-18,-5,-6,]),'ADDRESS':([0,2,3,20,25,40,79,80,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[11,11,-3,-2,-27,70,107,109,-26,-9,-21,11,11,-8,-10,-20,-11,-14,-16,11,11,11,-15,-17,11,11,-4,11,11,-7,-12,11,-19,11,11,-13,-18,-5,-6,]),'VAR':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[12,12,-3,-2,-27,-26,-9,-21,12,12,-8,-10,-20,-11,-14,-16,12,12,12,-15,-17,12,12,-4,12,12,-7,-12,12,-19,12,12,-13,-18,-5,-6,]),'CONST':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[13,13,-3,-2,-27,-26,-9,-21,13,13,-8,-10,-20,-11,-14,-16,13,13,13,-15,-17,13,13,-4,13,13,-7,-12,13,-19,13,13,-13,-18,-5,-6,]),'DEF':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[14,14,-3,-2,-27,-26,-9,-21,14,14,-8,-10,-20,-11,-14,-16,14,14,14,-15,-17,14,14,-4,14,14,-7,-12,14,-19,14,14,-13,-18,-5,-6,]),'DELETE':([0,2,3,20,25,82,95,103,113,122,123,124,129,132,134,136,139,140,142,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[15,15,-3,-2,-27,-26,-9,-21,15,15,-8,-10,-20,-11,-14,-16,15,15,15,-15,-17,15,15,-4,15,15,-7,-12,15,-19,15,15,-13,-18,-5,-6,]),'MINUS':([0,2,3,5,7,10,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,73,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,95,97,98,99,100,102,103,104,105,106,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,],[16,16,-3,16,27,-56,16,-54,-55,-2,16,27,-56,16,-27,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-46,27,-47,16,27,-34,-35,-36,-37,-38,-39,27,27,27,27,27,27,27,27,27,16,-56,27,16,16,16,16,16,-26,16,16,16,16,16,16,27,16,-9,-49,16,27,-53,16,-21,27,27,27,27,-48,16,27,27,27,27,27,27,-49,27,16,-8,-10,16,27,-52,-51,-20,-56,27,-11,-14,-16,16,16,16,27,-50,16,-15,-17,16,16,-4,16,16,-7,-12,27,16,-19,16,16,-13,-18,-5,-6,]),'LPAREN':([0,2,3,4,5,6,8,9,10,16,17,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,46,53,72,77,78,79,80,81,82,85,86,87,88,89,90,92,95,98,102,103,113,122,123,124,125,129,132,134,136,139,140,142,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[5,5,-3,21,5,24,38,39,42,5,49,-2,5,5,-27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,81,5,5,5,5,5,5,5,-26,5,5,5,5,5,5,5,-9,5,5,-21,5,5,-8,-10,5,-20,-11,-14,-16,5,5,5,5,-15,-17,5,5,-4,5,5,-7,-12,5,-19,5,5,-13,-18,-5,-6,]),'TYPEOF':([0,2,3,5,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,72,77,78,79,80,81,82,85,86,87,88,89,90,92,95,98,102,103,113,122,123,124,125,129,132,134,136,139,140,142,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[17,17,-3,17,17,-2,17,17,-27,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-26,17,17,17,17,17,17,17,-9,17,17,-21,17,17,-8,-10,17,-20,-11,-14,-16,17,17,17,17,-15,-17,17,17,-4,17,17,-7,-12,17,-19,17,17,-13,-18,-5,-6,]),'NUMBER':([0,2,3,5,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,72,77,78,79,80,81,82,85,86,87,88,89,90,92,95,98,102,103,113,122,123,124,125,129,132,134,136,139,140,142,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[18,18,-3,18,18,-2,18,18,-27,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-26,18,18,18,18,18,18,18,-9,18,18,-21,18,18,-8,-10,18,-20,-11,-14,-16,18,18,18,18,-15,-17,18,18,-4,18,18,-7,-12,18,-19,18,18,-13,-18,-5,-6,]),'STRING':([0,2,3,5,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,72,77,78,79,80,81,82,85,86,87,88,89,90,92,95,98,102,103,113,122,123,124,125,129,132,134,136,139,140,142,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,],[19,19,-3,19,19,-2,19,19,-27,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-26,19,19,19,19,19,19,19,-9,19,19,-21,19,19,-8,-10,19,-20,-11,-14,-16,19,19,19,19,-15,-17,19,19,-4,19,19,-7,-12,19,-19,19,19,-13,-18,-5,-6,]),'$end':([1,2,3,20,25,82,95,103,123,124,129,132,134,136,146,147,150,153,154,157,160,161,162,163,],[0,-1,-3,-2,-27,-26,-9,-21,-8,-10,-20,-11,-14,-16,-15,-17,-4,-7,-12,-19,-13,-18,-5,-6,]),'END':([3,20,25,82,95,103,123,124,129,132,134,136,140,142,146,147,149,150,153,154,156,157,158,159,160,161,162,163,],[-3,-2,-27,-26,-9,-21,-8,-10,-20,-11,-14,-16,150,153,-15,-17,157,-4,-7,-12,161,-19,162,163,-13,-18,-5,-6,]),'ELSE':([3,20,25,82,95,103,123,124,129,132,134,136,140,146,147,150,153,154,157,160,161,162,163,],[-3,-2,-27,-26,-9,-21,-8,-10,-20,-11,-14,-16,151,-15,-17,-4,-7,-12,-19,-13,-18,-5,-6,]),'SEMICOLON':([7,10,18,19,23,47,48,52,55,56,57,58,59,60,61,62,63,64,65,66,69,75,94,96,97,100,101,104,106,108,112,120,127,128,135,137,143,144,155,],[25,-56,-54,-55,-56,82,-46,-47,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,95,103,123,124,-49,-53,129,132,134,136,-48,-49,-52,-51,146,147,154,-50,160,]),'PLUS':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[26,-56,-54,-55,26,-56,-46,26,-47,26,-34,-35,-36,-37,-38,-39,26,26,26,26,26,26,26,26,26,-56,26,26,-49,26,-53,26,26,26,26,-48,26,26,26,26,26,26,-49,26,26,-52,-51,-56,26,26,-50,26,]),'TIMES':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[28,-56,-54,-55,28,-56,-46,28,-47,28,28,28,-36,-37,-38,-39,28,28,28,28,28,28,28,28,28,-56,28,28,-49,28,-53,28,28,28,28,-48,28,28,28,28,28,28,-49,28,28,-52,-51,-56,28,28,-50,28,]),'DIVIDE':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[29,-56,-54,-55,29,-56,-46,29,-47,29,29,29,-36,-37,-38,-39,29,29,29,29,29,29,29,29,29,-56,29,29,-49,29,-53,29,29,29,29,-48,29,29,29,29,29,29,-49,29,29,-52,-51,-56,29,29,-50,29,]),'EXPONENT':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[30,-56,-54,-55,30,-56,30,30,-47,30,30,30,30,30,-38,30,30,30,30,30,30,30,30,30,30,-56,30,30,-49,30,-53,30,30,30,30,-48,30,30,30,30,30,30,-49,30,30,-52,-51,-56,30,30,-50,30,]),'REMAINDER':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[31,-56,-54,-55,31,-56,-46,31,-47,31,31,31,-36,-37,-38,-39,31,31,31,31,31,31,31,31,31,-56,31,31,-49,31,-53,31,31,31,31,-48,31,31,31,31,31,31,-49,31,31,-52,-51,-56,31,31,-50,31,]),'INFERIOR':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[32,-56,-54,-55,32,-56,-46,85,-47,32,-34,-35,-36,-37,-38,-39,32,32,32,32,32,32,32,32,32,-56,32,32,-49,32,-53,32,32,32,32,-48,32,32,32,32,32,32,-49,32,32,-52,-51,-56,32,32,-50,32,]),'INFERIOR_OR_EQUAL':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[33,-56,-54,-55,33,-56,-46,86,-47,33,-34,-35,-36,-37,-38,-39,33,33,33,33,33,33,33,33,33,-56,33,33,-49,33,-53,33,33,33,33,-48,33,33,33,33,33,33,-49,33,33,-52,-51,-56,33,33,-50,33,]),'SUPERIOR':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[34,-56,-54,-55,34,-56,-46,87,-47,34,-34,-35,-36,-37,-38,-39,34,34,34,34,34,34,34,34,34,-56,34,34,-49,34,-53,34,34,34,34,-48,34,34,34,34,34,34,-49,34,34,-52,-51,-56,34,34,-50,34,]),'SUPERIOR_OR_EQUAL':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[35,-56,-54,-55,35,-56,-46,88,-47,35,-34,-35,-36,-37,-38,-39,35,35,35,35,35,35,35,35,35,-56,35,35,-49,35,-53,35,35,35,35,-48,35,35,35,35,35,35,-49,35,35,-52,-51,-56,35,35,-50,35,]),'DOUBLE_EQUALS':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[36,-56,-54,-55,36,-56,-46,89,-47,36,-34,-35,-36,-37,-38,-39,36,36,36,36,36,36,36,36,36,-56,36,36,-49,36,-53,36,36,36,36,-48,36,36,36,36,36,36,-49,36,36,-52,-51,-56,36,36,-50,36,]),'DIFFERENT':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,73,76,91,97,99,100,104,105,106,108,112,114,115,116,117,118,119,120,121,126,127,128,130,131,143,144,155,],[37,-56,-54,-55,37,-56,-46,90,-47,37,-34,-35,-36,-37,-38,-39,37,37,37,37,37,37,37,37,37,-56,37,37,-49,37,-53,37,37,37,37,-48,37,37,37,37,37,37,-49,37,37,-52,-51,-56,37,37,-50,37,]),'EQUALS':([10,43,44,45,97,133,],[40,77,79,80,125,145,]),'LSQUARE':([10,23,43,73,130,],[41,53,78,53,53,]),'RPAREN':([18,19,22,23,42,48,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,76,81,83,100,110,112,114,115,116,117,118,119,120,121,127,128,130,131,144,],[-54,-55,52,-56,75,-46,84,-47,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,93,94,-23,101,-25,111,112,-53,138,-48,-28,-29,-30,-31,-32,-33,-49,141,-52,-51,-22,-24,-50,]),'TO':([18,19,23,48,52,54,55,56,57,58,59,60,61,62,63,64,65,66,100,112,120,127,128,144,],[-54,-55,-56,-46,-47,92,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-53,-48,-49,-52,-51,-50,]),'RSQUARE':([18,19,23,48,52,55,56,57,58,59,60,61,62,63,64,65,66,71,72,91,98,99,100,105,112,120,126,127,128,144,],[-54,-55,-56,-46,-47,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,97,100,120,127,128,-53,133,-48,-49,144,-52,-51,-50,]),'COLON':([18,19,23,41,48,52,53,55,56,57,58,59,60,61,62,63,64,65,66,71,91,100,112,120,127,128,144,],[-54,-55,-56,72,-46,-47,72,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,98,98,-53,-48,-49,-52,-51,-50,]),'SEPARATOR':([18,19,23,48,52,55,56,57,58,59,60,61,62,63,64,65,66,73,74,76,100,110,112,120,127,128,130,131,144,],[-54,-55,-56,-46,-47,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-23,102,-25,-53,102,-48,-49,-52,-51,-22,-24,-50,]),'THEN':([84,],[113,]),'NEXT':([93,141,],[122,152,]),'DO':([111,138,],[139,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scope':([0,],[1,]),'block':([0,113,122,139,148,151,152,],[2,140,142,149,156,158,159,]),'statement':([0,2,113,122,139,140,142,148,149,151,152,156,158,159,],[3,20,3,3,3,20,20,3,20,3,3,20,20,20,]),'expression':([0,2,5,16,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,53,72,77,78,79,80,81,85,86,87,88,89,90,92,98,102,113,122,125,139,140,142,145,148,149,151,152,156,158,159,],[7,7,22,48,51,54,55,56,57,58,59,60,61,62,63,64,65,66,51,68,69,71,76,91,99,104,105,106,108,76,114,115,116,117,118,119,121,126,131,7,7,143,7,7,7,155,7,7,7,7,7,7,7,]),'comparison':([21,38,],[50,67,]),'argument':([42,81,],[74,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> scope","S'",1,None,None,None),
  ('scope -> block','scope',1,'p_scope','main.py',168),
  ('block -> block statement','block',2,'p_block','main.py',176),
  ('block -> statement','block',1,'p_block','main.py',177),
  ('statement -> IF LPAREN comparison RPAREN THEN block END','statement',7,'p_statement_condition','main.py',184),
  ('statement -> IF LPAREN comparison RPAREN THEN block ELSE block END','statement',9,'p_statement_condition','main.py',185),
  ('statement -> FOR LPAREN expression TO expression RPAREN NEXT block END','statement',9,'p_statement_for','main.py',192),
  ('statement -> WHILE LPAREN comparison RPAREN NEXT block END','statement',7,'p_statement_while','main.py',196),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_print','main.py',200),
  ('statement -> VARIABLE EQUALS expression SEMICOLON','statement',4,'p_statement_assign','main.py',204),
  ('statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON','statement',5,'p_statement_assign','main.py',205),
  ('statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_assign_pointer','main.py',212),
  ('statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON','statement',7,'p_statement_assign_element','main.py',216),
  ('statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON','statement',8,'p_statement_assign_element','main.py',217),
  ('statement -> VAR VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define','main.py',224),
  ('statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON','statement',6,'p_statement_define','main.py',225),
  ('statement -> CONST VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define_constant','main.py',232),
  ('statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON','statement',6,'p_statement_define_constant','main.py',233),
  ('statement -> DEF VARIABLE LPAREN argument RPAREN DO block END','statement',8,'p_statement_define_function','main.py',240),
  ('statement -> DEF VARIABLE LPAREN RPAREN DO block END','statement',7,'p_statement_define_function','main.py',241),
  ('statement -> VARIABLE LPAREN argument RPAREN SEMICOLON','statement',5,'p_statement_call_function','main.py',248),
  ('statement -> VARIABLE LPAREN RPAREN SEMICOLON','statement',4,'p_statement_call_function','main.py',249),
  ('argument -> argument SEPARATOR VARIABLE','argument',3,'p_statement_define_argument','main.py',257),
  ('argument -> VARIABLE','argument',1,'p_statement_define_argument','main.py',258),
  ('argument -> argument SEPARATOR expression','argument',3,'p_statement_call_argument','main.py',265),
  ('argument -> expression','argument',1,'p_statement_call_argument','main.py',266),
  ('statement -> DELETE VARIABLE SEMICOLON','statement',3,'p_statement_delete','main.py',274),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','main.py',278),
  ('comparison -> expression INFERIOR expression','comparison',3,'p_comparison_binop','main.py',282),
  ('comparison -> expression INFERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',283),
  ('comparison -> expression SUPERIOR expression','comparison',3,'p_comparison_binop','main.py',284),
  ('comparison -> expression SUPERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',285),
  ('comparison -> expression DOUBLE_EQUALS expression','comparison',3,'p_comparison_binop','main.py',286),
  ('comparison -> expression DIFFERENT expression','comparison',3,'p_comparison_binop','main.py',287),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',291),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',292),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',293),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',294),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','main.py',295),
  ('expression -> expression REMAINDER expression','expression',3,'p_expression_binop','main.py',296),
  ('expression -> expression INFERIOR expression','expression',3,'p_expression_binop','main.py',297),
  ('expression -> expression INFERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',298),
  ('expression -> expression SUPERIOR expression','expression',3,'p_expression_binop','main.py',299),
  ('expression -> expression SUPERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',300),
  ('expression -> expression DOUBLE_EQUALS expression','expression',3,'p_expression_binop','main.py',301),
  ('expression -> expression DIFFERENT expression','expression',3,'p_expression_binop','main.py',302),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','main.py',306),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',310),
  ('expression -> TYPEOF LPAREN VARIABLE RPAREN','expression',4,'p_expression_typeof','main.py',314),
  ('expression -> VARIABLE LSQUARE expression RSQUARE','expression',4,'p_expression_select','main.py',318),
  ('expression -> VARIABLE LSQUARE expression COLON expression RSQUARE','expression',6,'p_expression_substring','main.py',322),
  ('expression -> VARIABLE LSQUARE COLON expression RSQUARE','expression',5,'p_expression_substring','main.py',323),
  ('expression -> VARIABLE LSQUARE expression COLON RSQUARE','expression',5,'p_expression_substring','main.py',324),
  ('expression -> VARIABLE LSQUARE COLON RSQUARE','expression',4,'p_expression_substring','main.py',325),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',337),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',341),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','main.py',345),
]
