
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEREMAINDERrightUMINUSleftEXPONENTADDRESS COLON CONST DEF DIFFERENT DIVIDE DO DOUBLE_EQUALS ELSE END EQUALS EXPONENT FOR IF INFERIOR INFERIOR_OR_EQUAL LPAREN LSQUARE MINUS NEXT NUMBER PLUS PRINT PTR QUOTE REMAINDER RPAREN RSQUARE SEMICOLON SEPARATOR STRING SUPERIOR SUPERIOR_OR_EQUAL THEN TIMES TO TYPEOF VAR VARIABLE WHILEscope : blockblock : block statement\n             | statementstatement : IF LPAREN comparison RPAREN THEN block END\n                 | IF LPAREN comparison RPAREN THEN block ELSE block ENDstatement : FOR LPAREN expression TO expression RPAREN NEXT block ENDstatement : WHILE LPAREN comparison RPAREN NEXT block ENDstatement : PRINT LPAREN expression RPAREN SEMICOLONstatement : VARIABLE EQUALS expression SEMICOLONstatement : ADDRESS VARIABLE EQUALS expression SEMICOLONstatement : VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON\n                 | ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLONstatement : VAR VARIABLE EQUALS expression SEMICOLONstatement : CONST VARIABLE EQUALS expression SEMICOLONstatement : PTR VARIABLE EQUALS VARIABLE SEMICOLONstatement : DEF VARIABLE LPAREN RPAREN DO block ENDstatement : VARIABLE LPAREN RPAREN SEMICOLONarguments : argumentargument : argument SEPARATOR expression\n                | expressionstatement : expression SEMICOLONcomparison : expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENT expression\n                  | expression REMAINDER expression\n                  | expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : TYPEOF LPAREN VARIABLE RPARENexpression : VARIABLE LSQUARE expression RSQUAREexpression : VARIABLE LSQUARE expression COLON expression RSQUARE\n                  | VARIABLE LSQUARE COLON expression RSQUARE\n                  | VARIABLE LSQUARE expression COLON RSQUARE\n                  | VARIABLE LSQUARE COLON RSQUAREexpression : NUMBERexpression : STRINGexpression : VARIABLE'
    
_lr_action_items = {'IF':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[4,4,-3,-2,-21,-9,-17,4,4,-8,-10,-13,-14,-15,4,4,4,4,-4,4,4,-7,-11,-16,4,4,-12,-5,-6,]),'FOR':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[6,6,-3,-2,-21,-9,-17,6,6,-8,-10,-13,-14,-15,6,6,6,6,-4,6,6,-7,-11,-16,6,6,-12,-5,-6,]),'WHILE':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[8,8,-3,-2,-21,-9,-17,8,8,-8,-10,-13,-14,-15,8,8,8,8,-4,8,8,-7,-11,-16,8,8,-12,-5,-6,]),'PRINT':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[9,9,-3,-2,-21,-9,-17,9,9,-8,-10,-13,-14,-15,9,9,9,9,-4,9,9,-7,-11,-16,9,9,-12,-5,-6,]),'VARIABLE':([0,2,3,5,11,12,13,14,15,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,49,53,71,73,74,75,76,77,81,82,83,84,85,86,88,91,93,96,104,113,114,115,119,121,122,123,124,125,127,130,131,132,133,134,135,136,138,139,140,141,142,143,],[10,10,-3,23,43,44,45,46,47,23,-2,23,23,-21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,79,23,23,23,23,23,23,101,23,23,23,23,23,23,23,-9,23,-17,10,10,-8,23,-10,-13,-14,-15,10,10,10,23,10,-4,10,10,-7,-11,-16,10,10,-12,-5,-6,]),'ADDRESS':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[11,11,-3,-2,-21,-9,-17,11,11,-8,-10,-13,-14,-15,11,11,11,11,-4,11,11,-7,-11,-16,11,11,-12,-5,-6,]),'VAR':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[12,12,-3,-2,-21,-9,-17,12,12,-8,-10,-13,-14,-15,12,12,12,12,-4,12,12,-7,-11,-16,12,12,-12,-5,-6,]),'CONST':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[13,13,-3,-2,-21,-9,-17,13,13,-8,-10,-13,-14,-15,13,13,13,13,-4,13,13,-7,-11,-16,13,13,-12,-5,-6,]),'PTR':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[14,14,-3,-2,-21,-9,-17,14,14,-8,-10,-13,-14,-15,14,14,14,14,-4,14,14,-7,-11,-16,14,14,-12,-5,-6,]),'DEF':([0,2,3,20,25,91,96,104,113,114,119,121,122,123,124,125,127,131,132,133,134,135,136,138,139,140,141,142,143,],[15,15,-3,-2,-21,-9,-17,15,15,-8,-10,-13,-14,-15,15,15,15,15,-4,15,15,-7,-11,-16,15,15,-12,-5,-6,]),'MINUS':([0,2,3,5,7,10,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,73,74,75,76,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[16,16,-3,16,27,-50,16,-48,-49,-2,16,27,-50,16,-21,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-40,27,-41,16,27,-28,-29,-30,-31,-32,-33,27,27,27,27,27,27,27,27,27,16,16,16,16,16,16,16,16,16,16,16,27,16,-9,-43,16,27,-47,-17,27,27,27,27,-42,16,27,27,27,27,27,27,-43,27,16,-8,16,27,-46,-45,-10,-13,-14,-15,16,16,16,27,-44,16,16,-4,16,16,-7,-11,27,-16,16,16,-12,-5,-6,]),'LPAREN':([0,2,3,4,5,6,8,9,10,16,17,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,53,71,73,74,75,76,81,82,83,84,85,86,88,91,93,96,104,113,114,115,119,121,122,123,124,125,127,130,131,132,133,134,135,136,138,139,140,141,142,143,],[5,5,-3,21,5,24,38,39,42,5,49,-2,5,5,-21,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,78,5,5,5,5,5,5,5,5,5,5,5,5,5,-9,5,-17,5,5,-8,5,-10,-13,-14,-15,5,5,5,5,5,-4,5,5,-7,-11,-16,5,5,-12,-5,-6,]),'TYPEOF':([0,2,3,5,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,53,71,73,74,75,76,81,82,83,84,85,86,88,91,93,96,104,113,114,115,119,121,122,123,124,125,127,130,131,132,133,134,135,136,138,139,140,141,142,143,],[17,17,-3,17,17,-2,17,17,-21,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-9,17,-17,17,17,-8,17,-10,-13,-14,-15,17,17,17,17,17,-4,17,17,-7,-11,-16,17,17,-12,-5,-6,]),'NUMBER':([0,2,3,5,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,53,71,73,74,75,76,81,82,83,84,85,86,88,91,93,96,104,113,114,115,119,121,122,123,124,125,127,130,131,132,133,134,135,136,138,139,140,141,142,143,],[18,18,-3,18,18,-2,18,18,-21,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-9,18,-17,18,18,-8,18,-10,-13,-14,-15,18,18,18,18,18,-4,18,18,-7,-11,-16,18,18,-12,-5,-6,]),'STRING':([0,2,3,5,16,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,53,71,73,74,75,76,81,82,83,84,85,86,88,91,93,96,104,113,114,115,119,121,122,123,124,125,127,130,131,132,133,134,135,136,138,139,140,141,142,143,],[19,19,-3,19,19,-2,19,19,-21,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-9,19,-17,19,19,-8,19,-10,-13,-14,-15,19,19,19,19,19,-4,19,19,-7,-11,-16,19,19,-12,-5,-6,]),'$end':([1,2,3,20,25,91,96,114,119,121,122,123,132,135,136,138,141,142,143,],[0,-1,-3,-2,-21,-9,-17,-8,-10,-13,-14,-15,-4,-7,-11,-16,-12,-5,-6,]),'END':([3,20,25,91,96,114,119,121,122,123,125,127,131,132,135,136,138,139,140,141,142,143,],[-3,-2,-21,-9,-17,-8,-10,-13,-14,-15,132,135,138,-4,-7,-11,-16,142,143,-12,-5,-6,]),'ELSE':([3,20,25,91,96,114,119,121,122,123,125,132,135,136,138,141,142,143,],[-3,-2,-21,-9,-17,-8,-10,-13,-14,-15,133,-4,-7,-11,-16,-12,-5,-6,]),'SEMICOLON':([7,10,18,19,23,48,52,55,56,57,58,59,60,61,62,63,64,65,66,69,72,90,92,95,97,99,100,101,103,111,117,118,128,129,137,],[25,-50,-48,-49,-50,-40,-41,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,91,96,114,-43,-47,119,121,122,123,-42,-43,-46,-45,136,-44,141,]),'PLUS':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[26,-50,-48,-49,26,-50,-40,26,-41,26,-28,-29,-30,-31,-32,-33,26,26,26,26,26,26,26,26,26,26,-43,26,-47,26,26,26,26,-42,26,26,26,26,26,26,-43,26,26,-46,-45,26,-44,26,]),'TIMES':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[28,-50,-48,-49,28,-50,-40,28,-41,28,28,28,-30,-31,-32,-33,28,28,28,28,28,28,28,28,28,28,-43,28,-47,28,28,28,28,-42,28,28,28,28,28,28,-43,28,28,-46,-45,28,-44,28,]),'DIVIDE':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[29,-50,-48,-49,29,-50,-40,29,-41,29,29,29,-30,-31,-32,-33,29,29,29,29,29,29,29,29,29,29,-43,29,-47,29,29,29,29,-42,29,29,29,29,29,29,-43,29,29,-46,-45,29,-44,29,]),'EXPONENT':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[30,-50,-48,-49,30,-50,30,30,-41,30,30,30,30,30,-32,30,30,30,30,30,30,30,30,30,30,30,-43,30,-47,30,30,30,30,-42,30,30,30,30,30,30,-43,30,30,-46,-45,30,-44,30,]),'REMAINDER':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[31,-50,-48,-49,31,-50,-40,31,-41,31,31,31,-30,-31,-32,-33,31,31,31,31,31,31,31,31,31,31,-43,31,-47,31,31,31,31,-42,31,31,31,31,31,31,-43,31,31,-46,-45,31,-44,31,]),'INFERIOR':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[32,-50,-48,-49,32,-50,-40,81,-41,32,-28,-29,-30,-31,-32,-33,32,32,32,32,32,32,32,32,32,32,-43,32,-47,32,32,32,32,-42,32,32,32,32,32,32,-43,32,32,-46,-45,32,-44,32,]),'INFERIOR_OR_EQUAL':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[33,-50,-48,-49,33,-50,-40,82,-41,33,-28,-29,-30,-31,-32,-33,33,33,33,33,33,33,33,33,33,33,-43,33,-47,33,33,33,33,-42,33,33,33,33,33,33,-43,33,33,-46,-45,33,-44,33,]),'SUPERIOR':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[34,-50,-48,-49,34,-50,-40,83,-41,34,-28,-29,-30,-31,-32,-33,34,34,34,34,34,34,34,34,34,34,-43,34,-47,34,34,34,34,-42,34,34,34,34,34,34,-43,34,34,-46,-45,34,-44,34,]),'SUPERIOR_OR_EQUAL':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[35,-50,-48,-49,35,-50,-40,84,-41,35,-28,-29,-30,-31,-32,-33,35,35,35,35,35,35,35,35,35,35,-43,35,-47,35,35,35,35,-42,35,35,35,35,35,35,-43,35,35,-46,-45,35,-44,35,]),'DOUBLE_EQUALS':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[36,-50,-48,-49,36,-50,-40,85,-41,36,-28,-29,-30,-31,-32,-33,36,36,36,36,36,36,36,36,36,36,-43,36,-47,36,36,36,36,-42,36,36,36,36,36,36,-43,36,36,-46,-45,36,-44,36,]),'DIFFERENT':([7,10,18,19,22,23,48,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,87,92,94,95,97,98,99,100,103,105,106,107,108,109,110,111,112,116,117,118,128,129,137,],[37,-50,-48,-49,37,-50,-40,86,-41,37,-28,-29,-30,-31,-32,-33,37,37,37,37,37,37,37,37,37,37,-43,37,-47,37,37,37,37,-42,37,37,37,37,37,37,-43,37,37,-46,-45,37,-44,37,]),'EQUALS':([10,43,44,45,46,92,120,],[40,73,75,76,77,115,130,]),'LSQUARE':([10,23,43,],[41,53,74,]),'RPAREN':([18,19,22,23,42,48,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,79,95,103,105,106,107,108,109,110,111,112,117,118,129,],[-48,-49,52,-50,72,-40,80,-41,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,89,90,102,103,-47,-42,-22,-23,-24,-25,-26,-27,-43,126,-46,-45,-44,]),'TO':([18,19,23,48,52,54,55,56,57,58,59,60,61,62,63,64,65,66,95,103,111,117,118,129,],[-48,-49,-50,-40,-41,88,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-42,-43,-46,-45,-44,]),'RSQUARE':([18,19,23,48,52,55,56,57,58,59,60,61,62,63,64,65,66,70,71,87,93,94,95,98,103,111,116,117,118,129,],[-48,-49,-50,-40,-41,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,92,95,111,117,118,-47,120,-42,-43,129,-46,-45,-44,]),'COLON':([18,19,23,41,48,52,53,55,56,57,58,59,60,61,62,63,64,65,66,70,87,95,103,111,117,118,129,],[-48,-49,-50,71,-40,-41,71,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,93,93,-47,-42,-43,-46,-45,-44,]),'THEN':([80,],[104,]),'NEXT':([89,126,],[113,134,]),'DO':([102,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scope':([0,],[1,]),'block':([0,104,113,124,133,134,],[2,125,127,131,139,140,]),'statement':([0,2,104,113,124,125,127,131,133,134,139,140,],[3,20,3,3,3,20,20,20,3,3,20,20,]),'expression':([0,2,5,16,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,53,71,73,74,75,76,81,82,83,84,85,86,88,93,104,113,115,124,125,127,130,131,133,134,139,140,],[7,7,22,48,51,54,55,56,57,58,59,60,61,62,63,64,65,66,51,68,69,70,87,94,97,98,99,100,105,106,107,108,109,110,112,116,7,7,128,7,7,7,137,7,7,7,7,7,]),'comparison':([21,38,],[50,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> scope","S'",1,None,None,None),
  ('scope -> block','scope',1,'p_scope','main.py',168),
  ('block -> block statement','block',2,'p_block','main.py',176),
  ('block -> statement','block',1,'p_block','main.py',177),
  ('statement -> IF LPAREN comparison RPAREN THEN block END','statement',7,'p_statement_condition','main.py',184),
  ('statement -> IF LPAREN comparison RPAREN THEN block ELSE block END','statement',9,'p_statement_condition','main.py',185),
  ('statement -> FOR LPAREN expression TO expression RPAREN NEXT block END','statement',9,'p_statement_for','main.py',192),
  ('statement -> WHILE LPAREN comparison RPAREN NEXT block END','statement',7,'p_statement_while','main.py',196),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_print','main.py',200),
  ('statement -> VARIABLE EQUALS expression SEMICOLON','statement',4,'p_statement_assign','main.py',204),
  ('statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_assign_pointer','main.py',208),
  ('statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON','statement',7,'p_statement_assign_element','main.py',212),
  ('statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON','statement',8,'p_statement_assign_element','main.py',213),
  ('statement -> VAR VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define','main.py',220),
  ('statement -> CONST VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define_constant','main.py',224),
  ('statement -> PTR VARIABLE EQUALS VARIABLE SEMICOLON','statement',5,'p_statement_define_pointer','main.py',228),
  ('statement -> DEF VARIABLE LPAREN RPAREN DO block END','statement',7,'p_statement_define_function','main.py',232),
  ('statement -> VARIABLE LPAREN RPAREN SEMICOLON','statement',4,'p_statement_call_function','main.py',237),
  ('arguments -> argument','arguments',1,'p_statement_arguments','main.py',243),
  ('argument -> argument SEPARATOR expression','argument',3,'p_statement_argument','main.py',250),
  ('argument -> expression','argument',1,'p_statement_argument','main.py',251),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','main.py',259),
  ('comparison -> expression INFERIOR expression','comparison',3,'p_comparison_binop','main.py',263),
  ('comparison -> expression INFERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',264),
  ('comparison -> expression SUPERIOR expression','comparison',3,'p_comparison_binop','main.py',265),
  ('comparison -> expression SUPERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',266),
  ('comparison -> expression DOUBLE_EQUALS expression','comparison',3,'p_comparison_binop','main.py',267),
  ('comparison -> expression DIFFERENT expression','comparison',3,'p_comparison_binop','main.py',268),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',272),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',273),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',274),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',275),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','main.py',276),
  ('expression -> expression REMAINDER expression','expression',3,'p_expression_binop','main.py',277),
  ('expression -> expression INFERIOR expression','expression',3,'p_expression_binop','main.py',278),
  ('expression -> expression INFERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',279),
  ('expression -> expression SUPERIOR expression','expression',3,'p_expression_binop','main.py',280),
  ('expression -> expression SUPERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',281),
  ('expression -> expression DOUBLE_EQUALS expression','expression',3,'p_expression_binop','main.py',282),
  ('expression -> expression DIFFERENT expression','expression',3,'p_expression_binop','main.py',283),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','main.py',287),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',291),
  ('expression -> TYPEOF LPAREN VARIABLE RPAREN','expression',4,'p_expression_typeof','main.py',295),
  ('expression -> VARIABLE LSQUARE expression RSQUARE','expression',4,'p_expression_select','main.py',299),
  ('expression -> VARIABLE LSQUARE expression COLON expression RSQUARE','expression',6,'p_expression_substring','main.py',303),
  ('expression -> VARIABLE LSQUARE COLON expression RSQUARE','expression',5,'p_expression_substring','main.py',304),
  ('expression -> VARIABLE LSQUARE expression COLON RSQUARE','expression',5,'p_expression_substring','main.py',305),
  ('expression -> VARIABLE LSQUARE COLON RSQUARE','expression',4,'p_expression_substring','main.py',306),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',318),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',322),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','main.py',326),
]
