
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEREMAINDERrightUMINUSleftEXPONENTADDRESS COLON CONST DEF DELETE DIFFERENT DIVIDE DO DOUBLE_EQUALS ELSE END EQUALS EXPONENT FOR IF INFERIOR INFERIOR_OR_EQUAL LENGTH LPAREN LSQUARE MINUS NEXT NUMBER PLUS PRINT QUOTE REMAINDER RPAREN RSQUARE SEMICOLON SEPARATOR STRING SUPERIOR SUPERIOR_OR_EQUAL THEN TIMES TO TYPEOF UNPACK VAR VARIABLE WHILEscope : blockblock : block statement\n             | statementstatement : IF LPAREN comparison RPAREN THEN block END\n                 | IF LPAREN comparison RPAREN THEN block ELSE block ENDstatement : FOR LPAREN expression TO expression RPAREN NEXT block ENDstatement : WHILE LPAREN comparison RPAREN NEXT block ENDstatement : PRINT LPAREN expression RPAREN SEMICOLONstatement : VARIABLE EQUALS expression SEMICOLON\n                 | VARIABLE EQUALS ADDRESS VARIABLE SEMICOLONstatement : ADDRESS VARIABLE EQUALS expression SEMICOLONstatement : VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON\n                 | ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLONstatement : VAR VARIABLE EQUALS expression SEMICOLON\n                 | VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLONstatement : CONST VARIABLE EQUALS expression SEMICOLON\n                 | CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON\n                 | CONST VARIABLE EQUALS LSQUARE cargument RSQUARE SEMICOLONstatement : DEF VARIABLE LPAREN dargument RPAREN DO block END\n                 | DEF VARIABLE LPAREN RPAREN DO block ENDstatement : VARIABLE LPAREN cargument RPAREN SEMICOLON\n                 | VARIABLE LPAREN RPAREN SEMICOLONdargument : dargument SEPARATOR VARIABLE\n                 | VARIABLEcargument : cargument SEPARATOR expression\n                 | expressionstatement : DELETE VARIABLE SEMICOLONstatement : expression SEMICOLONcomparison : expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENT expression\n                  | expression REMAINDER expression\n                  | expression INFERIOR expression\n                  | expression INFERIOR_OR_EQUAL expression\n                  | expression SUPERIOR expression\n                  | expression SUPERIOR_OR_EQUAL expression\n                  | expression DOUBLE_EQUALS expression\n                  | expression DIFFERENT expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : LSQUARE UNPACK VARIABLE RSQUAREexpression : TYPEOF LPAREN VARIABLE RPARENexpression : LENGTH LPAREN expression RPARENexpression : VARIABLE LSQUARE expression RSQUAREexpression : VARIABLE LSQUARE expression COLON expression RSQUARE\n                  | VARIABLE LSQUARE COLON expression RSQUARE\n                  | VARIABLE LSQUARE expression COLON RSQUARE\n                  | VARIABLE LSQUARE COLON RSQUAREexpression : NUMBERexpression : STRINGexpression : LSQUARE cargument RSQUAREexpression : VARIABLE'
    
_lr_action_items = {'IF':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[4,4,-3,-2,-28,-27,-9,-22,4,4,-8,-10,-21,-11,-14,-16,4,4,4,-15,-17,4,4,-4,4,4,-7,-12,-18,4,-20,4,4,-13,-19,-5,-6,]),'FOR':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[6,6,-3,-2,-28,-27,-9,-22,6,6,-8,-10,-21,-11,-14,-16,6,6,6,-15,-17,6,6,-4,6,6,-7,-12,-18,6,-20,6,6,-13,-19,-5,-6,]),'WHILE':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[8,8,-3,-2,-28,-27,-9,-22,8,8,-8,-10,-21,-11,-14,-16,8,8,8,-15,-17,8,8,-4,8,8,-7,-12,-18,8,-20,8,8,-13,-19,-5,-6,]),'PRINT':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[9,9,-3,-2,-28,-27,-9,-22,9,9,-8,-10,-21,-11,-14,-16,9,9,9,-15,-17,9,9,-4,9,9,-7,-12,-18,9,-20,9,9,-13,-19,-5,-6,]),'VARIABLE':([0,2,3,5,11,12,13,14,15,16,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,54,55,59,76,78,81,82,85,86,87,88,89,93,94,95,96,97,98,100,103,106,110,116,118,119,125,134,135,136,137,141,142,144,146,150,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[10,10,-3,25,45,25,49,50,51,52,25,-2,25,25,-28,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,83,90,25,25,104,25,25,25,25,25,25,120,-27,25,25,25,25,25,25,25,-9,25,-22,145,147,25,10,10,-8,-10,25,-21,-11,-14,-16,162,10,10,10,25,-15,-17,10,10,-4,10,10,-7,-12,-18,10,-20,10,10,-13,-19,-5,-6,]),'ADDRESS':([0,2,3,22,27,42,86,87,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[11,11,-3,-2,-28,76,116,118,-27,-9,-22,11,11,-8,-10,-21,-11,-14,-16,11,11,11,-15,-17,11,11,-4,11,11,-7,-12,-18,11,-20,11,11,-13,-19,-5,-6,]),'VAR':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[13,13,-3,-2,-28,-27,-9,-22,13,13,-8,-10,-21,-11,-14,-16,13,13,13,-15,-17,13,13,-4,13,13,-7,-12,-18,13,-20,13,13,-13,-19,-5,-6,]),'CONST':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[14,14,-3,-2,-28,-27,-9,-22,14,14,-8,-10,-21,-11,-14,-16,14,14,14,-15,-17,14,14,-4,14,14,-7,-12,-18,14,-20,14,14,-13,-19,-5,-6,]),'DEF':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[15,15,-3,-2,-28,-27,-9,-22,15,15,-8,-10,-21,-11,-14,-16,15,15,15,-15,-17,15,15,-4,15,15,-7,-12,-18,15,-20,15,15,-13,-19,-5,-6,]),'DELETE':([0,2,3,22,27,89,103,110,125,134,135,136,141,142,144,146,151,152,154,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[16,16,-3,-2,-28,-27,-9,-22,16,16,-8,-10,-21,-11,-14,-16,16,16,16,-15,-17,16,16,-4,16,16,-7,-12,-18,16,-20,16,16,-13,-19,-5,-6,]),'MINUS':([0,2,3,5,7,10,12,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,48,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,81,82,84,85,86,87,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,110,111,112,113,114,115,117,119,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,146,151,152,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[17,17,-3,17,29,-60,17,17,-57,-58,-2,17,29,-60,17,-28,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,29,-47,17,29,-48,17,29,-35,-36,-37,-38,-39,-40,29,29,29,29,29,29,29,29,29,17,17,17,-59,17,17,17,-27,29,17,17,17,17,17,17,29,17,-9,-52,17,29,-56,-22,29,29,-49,29,29,29,17,-50,-51,17,29,29,29,29,29,29,-52,29,17,-8,-10,17,29,-55,-54,-21,-11,-14,-16,17,17,17,29,-53,17,-15,-17,-59,17,17,-4,17,17,-7,-12,29,-18,17,-20,17,17,-13,-19,-5,-6,]),'LPAREN':([0,2,3,4,5,6,8,9,10,12,17,18,19,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,51,55,59,78,81,82,85,86,87,89,93,94,95,96,97,98,100,103,106,110,119,125,134,135,136,137,141,142,144,146,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[5,5,-3,23,5,26,40,41,44,5,5,54,55,-2,5,5,-28,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,88,5,5,5,5,5,5,5,5,-27,5,5,5,5,5,5,5,-9,5,-22,5,5,5,-8,-10,5,-21,-11,-14,-16,5,5,5,5,-15,-17,5,5,-4,5,5,-7,-12,-18,5,-20,5,5,-13,-19,-5,-6,]),'LSQUARE':([0,2,3,5,10,12,17,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,55,59,78,81,82,85,86,87,89,93,94,95,96,97,98,100,103,106,110,119,125,134,135,136,137,141,142,144,146,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[12,12,-3,12,43,12,12,-2,12,59,12,-28,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,82,12,12,12,12,12,12,12,119,-27,12,12,12,12,12,12,12,-9,12,-22,12,12,12,-8,-10,12,-21,-11,-14,-16,12,12,12,12,-15,-17,12,12,-4,12,12,-7,-12,-18,12,-20,12,12,-13,-19,-5,-6,]),'TYPEOF':([0,2,3,5,12,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,55,59,78,81,82,85,86,87,89,93,94,95,96,97,98,100,103,106,110,119,125,134,135,136,137,141,142,144,146,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[18,18,-3,18,18,18,-2,18,18,-28,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-27,18,18,18,18,18,18,18,-9,18,-22,18,18,18,-8,-10,18,-21,-11,-14,-16,18,18,18,18,-15,-17,18,18,-4,18,18,-7,-12,-18,18,-20,18,18,-13,-19,-5,-6,]),'LENGTH':([0,2,3,5,12,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,55,59,78,81,82,85,86,87,89,93,94,95,96,97,98,100,103,106,110,119,125,134,135,136,137,141,142,144,146,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[19,19,-3,19,19,19,-2,19,19,-28,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-27,19,19,19,19,19,19,19,-9,19,-22,19,19,19,-8,-10,19,-21,-11,-14,-16,19,19,19,19,-15,-17,19,19,-4,19,19,-7,-12,-18,19,-20,19,19,-13,-19,-5,-6,]),'NUMBER':([0,2,3,5,12,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,55,59,78,81,82,85,86,87,89,93,94,95,96,97,98,100,103,106,110,119,125,134,135,136,137,141,142,144,146,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[20,20,-3,20,20,20,-2,20,20,-28,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-27,20,20,20,20,20,20,20,-9,20,-22,20,20,20,-8,-10,20,-21,-11,-14,-16,20,20,20,20,-15,-17,20,20,-4,20,20,-7,-12,-18,20,-20,20,20,-13,-19,-5,-6,]),'STRING':([0,2,3,5,12,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,55,59,78,81,82,85,86,87,89,93,94,95,96,97,98,100,103,106,110,119,125,134,135,136,137,141,142,144,146,151,152,154,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,],[21,21,-3,21,21,21,-2,21,21,-28,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-27,21,21,21,21,21,21,21,-9,21,-22,21,21,21,-8,-10,21,-21,-11,-14,-16,21,21,21,21,-15,-17,21,21,-4,21,21,-7,-12,-18,21,-20,21,21,-13,-19,-5,-6,]),'$end':([1,2,3,22,27,89,103,110,135,136,141,142,144,146,158,159,164,167,168,170,172,175,176,177,178,],[0,-1,-3,-2,-28,-27,-9,-22,-8,-10,-21,-11,-14,-16,-15,-17,-4,-7,-12,-18,-20,-13,-19,-5,-6,]),'END':([3,22,27,89,103,110,135,136,141,142,144,146,152,154,158,159,163,164,167,168,170,171,172,173,174,175,176,177,178,],[-3,-2,-28,-27,-9,-22,-8,-10,-21,-11,-14,-16,164,167,-15,-17,172,-4,-7,-12,-18,176,-20,177,178,-13,-19,-5,-6,]),'ELSE':([3,22,27,89,103,110,135,136,141,142,144,146,152,158,159,164,167,168,170,172,175,176,177,178,],[-3,-2,-28,-27,-9,-22,-8,-10,-21,-11,-14,-16,165,-15,-17,-4,-7,-12,-18,-20,-13,-19,-5,-6,]),'SEMICOLON':([7,10,20,21,25,52,53,58,61,62,63,64,65,66,67,68,69,70,71,72,75,80,84,102,104,105,108,109,111,113,115,117,123,124,132,139,140,145,147,155,156,160,169,],[27,-60,-57,-58,-60,89,-47,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,103,110,-59,135,136,-52,-56,141,142,-49,144,146,-50,-51,-52,-55,-54,158,159,168,-53,170,175,]),'PLUS':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[28,-60,-57,-58,28,-60,28,-47,28,-48,28,-35,-36,-37,-38,-39,-40,28,28,28,28,28,28,28,28,28,-59,28,28,-52,28,-56,28,28,-49,28,28,28,-50,-51,28,28,28,28,28,28,-52,28,28,-55,-54,28,-53,-59,28,]),'TIMES':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[30,-60,-57,-58,30,-60,30,-47,30,-48,30,30,30,-37,-38,-39,-40,30,30,30,30,30,30,30,30,30,-59,30,30,-52,30,-56,30,30,-49,30,30,30,-50,-51,30,30,30,30,30,30,-52,30,30,-55,-54,30,-53,-59,30,]),'DIVIDE':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[31,-60,-57,-58,31,-60,31,-47,31,-48,31,31,31,-37,-38,-39,-40,31,31,31,31,31,31,31,31,31,-59,31,31,-52,31,-56,31,31,-49,31,31,31,-50,-51,31,31,31,31,31,31,-52,31,31,-55,-54,31,-53,-59,31,]),'EXPONENT':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[32,-60,-57,-58,32,-60,32,32,32,-48,32,32,32,32,32,-39,32,32,32,32,32,32,32,32,32,32,-59,32,32,-52,32,-56,32,32,-49,32,32,32,-50,-51,32,32,32,32,32,32,-52,32,32,-55,-54,32,-53,-59,32,]),'REMAINDER':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[33,-60,-57,-58,33,-60,33,-47,33,-48,33,33,33,-37,-38,-39,-40,33,33,33,33,33,33,33,33,33,-59,33,33,-52,33,-56,33,33,-49,33,33,33,-50,-51,33,33,33,33,33,33,-52,33,33,-55,-54,33,-53,-59,33,]),'INFERIOR':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[34,-60,-57,-58,34,-60,34,-47,93,-48,34,-35,-36,-37,-38,-39,-40,34,34,34,34,34,34,34,34,34,-59,34,34,-52,34,-56,34,34,-49,34,34,34,-50,-51,34,34,34,34,34,34,-52,34,34,-55,-54,34,-53,-59,34,]),'INFERIOR_OR_EQUAL':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[35,-60,-57,-58,35,-60,35,-47,94,-48,35,-35,-36,-37,-38,-39,-40,35,35,35,35,35,35,35,35,35,-59,35,35,-52,35,-56,35,35,-49,35,35,35,-50,-51,35,35,35,35,35,35,-52,35,35,-55,-54,35,-53,-59,35,]),'SUPERIOR':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[36,-60,-57,-58,36,-60,36,-47,95,-48,36,-35,-36,-37,-38,-39,-40,36,36,36,36,36,36,36,36,36,-59,36,36,-52,36,-56,36,36,-49,36,36,36,-50,-51,36,36,36,36,36,36,-52,36,36,-55,-54,36,-53,-59,36,]),'SUPERIOR_OR_EQUAL':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[37,-60,-57,-58,37,-60,37,-47,96,-48,37,-35,-36,-37,-38,-39,-40,37,37,37,37,37,37,37,37,37,-59,37,37,-52,37,-56,37,37,-49,37,37,37,-50,-51,37,37,37,37,37,37,-52,37,37,-55,-54,37,-53,-59,37,]),'DOUBLE_EQUALS':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[38,-60,-57,-58,38,-60,38,-47,97,-48,38,-35,-36,-37,-38,-39,-40,38,38,38,38,38,38,38,38,38,-59,38,38,-52,38,-56,38,38,-49,38,38,38,-50,-51,38,38,38,38,38,38,-52,38,38,-55,-54,38,-53,-59,38,]),'DIFFERENT':([7,10,20,21,24,25,48,53,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,84,91,99,105,107,108,111,112,113,114,115,117,123,124,126,127,128,129,130,131,132,133,138,139,140,155,156,160,169,],[39,-60,-57,-58,39,-60,39,-47,98,-48,39,-35,-36,-37,-38,-39,-40,39,39,39,39,39,39,39,39,39,-59,39,39,-52,39,-56,39,39,-49,39,39,39,-50,-51,39,39,39,39,39,39,-52,39,39,-55,-54,39,-53,-59,39,]),'EQUALS':([10,45,49,50,105,143,],[42,81,86,87,137,157,]),'UNPACK':([12,119,],[46,46,]),'RPAREN':([20,21,24,25,44,48,53,56,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,84,88,90,91,108,113,114,120,121,123,124,126,127,128,129,130,131,132,133,139,140,156,162,],[-57,-58,58,-60,80,-26,-47,92,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,101,102,109,-59,122,123,124,-56,-49,-25,-24,149,-50,-51,-29,-30,-31,-32,-33,-34,-52,153,-55,-54,-53,-23,]),'RSQUARE':([20,21,25,47,48,53,58,61,62,63,64,65,66,67,68,69,70,71,72,77,78,83,84,99,106,107,108,112,113,114,123,124,132,138,139,140,148,156,],[-57,-58,-60,84,-26,-47,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,105,108,113,-59,132,139,140,-56,143,-49,-25,-50,-51,-52,156,-55,-54,160,-53,]),'SEPARATOR':([20,21,25,47,48,53,58,61,62,63,64,65,66,67,68,69,70,71,72,79,84,108,113,114,120,121,123,124,132,139,140,148,156,162,],[-57,-58,-60,85,-26,-47,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,85,-59,-56,-49,-25,-24,150,-50,-51,-52,-55,-54,85,-53,-23,]),'TO':([20,21,25,53,58,60,61,62,63,64,65,66,67,68,69,70,71,72,84,108,113,123,124,132,139,140,156,],[-57,-58,-60,-47,-48,100,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-59,-56,-49,-50,-51,-52,-55,-54,-53,]),'COLON':([20,21,25,43,53,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,84,99,108,113,123,124,132,139,140,156,],[-57,-58,-60,78,-47,-48,78,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,106,-59,106,-56,-49,-50,-51,-52,-55,-54,-53,]),'THEN':([92,],[125,]),'NEXT':([101,153,],[134,166,]),'DO':([122,149,],[151,161,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scope':([0,],[1,]),'block':([0,125,134,151,161,165,166,],[2,152,154,163,171,173,174,]),'statement':([0,2,125,134,151,152,154,161,163,165,166,171,173,174,],[3,22,3,3,3,22,22,3,22,3,3,22,22,22,]),'expression':([0,2,5,12,17,23,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,55,59,78,81,82,85,86,87,93,94,95,96,97,98,100,106,119,125,134,137,151,152,154,157,161,163,165,166,171,173,174,],[7,7,24,48,53,57,60,61,62,63,64,65,66,67,68,69,70,71,72,57,74,75,77,48,91,99,107,111,112,114,115,117,126,127,128,129,130,131,133,138,48,7,7,155,7,7,7,169,7,7,7,7,7,7,7,]),'cargument':([12,44,119,],[47,79,148,]),'comparison':([23,40,],[56,73,]),'dargument':([88,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> scope","S'",1,None,None,None),
  ('scope -> block','scope',1,'p_scope','main.py',179),
  ('block -> block statement','block',2,'p_block','main.py',187),
  ('block -> statement','block',1,'p_block','main.py',188),
  ('statement -> IF LPAREN comparison RPAREN THEN block END','statement',7,'p_statement_condition','main.py',196),
  ('statement -> IF LPAREN comparison RPAREN THEN block ELSE block END','statement',9,'p_statement_condition','main.py',197),
  ('statement -> FOR LPAREN expression TO expression RPAREN NEXT block END','statement',9,'p_statement_for','main.py',205),
  ('statement -> WHILE LPAREN comparison RPAREN NEXT block END','statement',7,'p_statement_while','main.py',209),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_print','main.py',213),
  ('statement -> VARIABLE EQUALS expression SEMICOLON','statement',4,'p_statement_assign','main.py',217),
  ('statement -> VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON','statement',5,'p_statement_assign','main.py',218),
  ('statement -> ADDRESS VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_assign_pointer','main.py',226),
  ('statement -> VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON','statement',7,'p_statement_assign_element','main.py',230),
  ('statement -> ADDRESS VARIABLE LSQUARE expression RSQUARE EQUALS expression SEMICOLON','statement',8,'p_statement_assign_element','main.py',231),
  ('statement -> VAR VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define','main.py',239),
  ('statement -> VAR VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON','statement',6,'p_statement_define','main.py',240),
  ('statement -> CONST VARIABLE EQUALS expression SEMICOLON','statement',5,'p_statement_define_constant','main.py',248),
  ('statement -> CONST VARIABLE EQUALS ADDRESS VARIABLE SEMICOLON','statement',6,'p_statement_define_constant','main.py',249),
  ('statement -> CONST VARIABLE EQUALS LSQUARE cargument RSQUARE SEMICOLON','statement',7,'p_statement_define_constant','main.py',250),
  ('statement -> DEF VARIABLE LPAREN dargument RPAREN DO block END','statement',8,'p_statement_define_function','main.py',260),
  ('statement -> DEF VARIABLE LPAREN RPAREN DO block END','statement',7,'p_statement_define_function','main.py',261),
  ('statement -> VARIABLE LPAREN cargument RPAREN SEMICOLON','statement',5,'p_statement_call_function','main.py',269),
  ('statement -> VARIABLE LPAREN RPAREN SEMICOLON','statement',4,'p_statement_call_function','main.py',270),
  ('dargument -> dargument SEPARATOR VARIABLE','dargument',3,'p_statement_define_argument','main.py',278),
  ('dargument -> VARIABLE','dargument',1,'p_statement_define_argument','main.py',279),
  ('cargument -> cargument SEPARATOR expression','cargument',3,'p_statement_call_argument','main.py',287),
  ('cargument -> expression','cargument',1,'p_statement_call_argument','main.py',288),
  ('statement -> DELETE VARIABLE SEMICOLON','statement',3,'p_statement_delete','main.py',299),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','main.py',303),
  ('comparison -> expression INFERIOR expression','comparison',3,'p_comparison_binop','main.py',307),
  ('comparison -> expression INFERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',308),
  ('comparison -> expression SUPERIOR expression','comparison',3,'p_comparison_binop','main.py',309),
  ('comparison -> expression SUPERIOR_OR_EQUAL expression','comparison',3,'p_comparison_binop','main.py',310),
  ('comparison -> expression DOUBLE_EQUALS expression','comparison',3,'p_comparison_binop','main.py',311),
  ('comparison -> expression DIFFERENT expression','comparison',3,'p_comparison_binop','main.py',312),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',316),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',317),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',318),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',319),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','main.py',320),
  ('expression -> expression REMAINDER expression','expression',3,'p_expression_binop','main.py',321),
  ('expression -> expression INFERIOR expression','expression',3,'p_expression_binop','main.py',322),
  ('expression -> expression INFERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',323),
  ('expression -> expression SUPERIOR expression','expression',3,'p_expression_binop','main.py',324),
  ('expression -> expression SUPERIOR_OR_EQUAL expression','expression',3,'p_expression_binop','main.py',325),
  ('expression -> expression DOUBLE_EQUALS expression','expression',3,'p_expression_binop','main.py',326),
  ('expression -> expression DIFFERENT expression','expression',3,'p_expression_binop','main.py',327),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','main.py',331),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','main.py',335),
  ('expression -> LSQUARE UNPACK VARIABLE RSQUARE','expression',4,'p_expression_unpack','main.py',339),
  ('expression -> TYPEOF LPAREN VARIABLE RPAREN','expression',4,'p_expression_typeof','main.py',344),
  ('expression -> LENGTH LPAREN expression RPAREN','expression',4,'p_expression_length','main.py',348),
  ('expression -> VARIABLE LSQUARE expression RSQUARE','expression',4,'p_expression_select','main.py',352),
  ('expression -> VARIABLE LSQUARE expression COLON expression RSQUARE','expression',6,'p_expression_substring','main.py',356),
  ('expression -> VARIABLE LSQUARE COLON expression RSQUARE','expression',5,'p_expression_substring','main.py',357),
  ('expression -> VARIABLE LSQUARE expression COLON RSQUARE','expression',5,'p_expression_substring','main.py',358),
  ('expression -> VARIABLE LSQUARE COLON RSQUARE','expression',4,'p_expression_substring','main.py',359),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',372),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',376),
  ('expression -> LSQUARE cargument RSQUARE','expression',3,'p_expression_array','main.py',380),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','main.py',384),
]
